name: pypi-wheels-linux


on:
  workflow_dispatch:
  push:
    branches:
      - packagemanagers


jobs:

 build_linux:
        strategy:
              fail-fast: false
              matrix:
                platform: [ubuntu-20.04]
                python-version: ["3.8","3.9","3.10"]
                compiler: ["clang-12"]

        runs-on: ${{ matrix.platform }}

        steps:
          - uses: actions/checkout@v3
            with:
                submodules: true
                ref: packagemanagers

          - uses: actions/setup-python@v3
            with:
              python-version: ${{ matrix.python-version }}
      
          - name: Install Ubuntu dependencies
            env:
                COMPILER: ${{ matrix.compiler }}
            run: bash $GITHUB_WORKSPACE/.github/install_ubuntu_dependencies.sh

          - name: Add python requirements
            run: python -m pip install --upgrade wheel setuptools && python -m pip install -r requirements.txt

          - run: pip install patchelf auditwheel


          - name: "Create build directory and run CMake"
            run: cmake -S . -B build -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release -DPIP_INSTALL=True -DBUILD_ASSET_WHEEL=True

          - name: "Build Project" 
            run: cmake --build build --target asset pypiwheel --config Release -- -j1 
      
          - name: Audit Wheel Test
            run:  auditwheel show build/pypiwheel/asset_asrl/dist/*.whl

          - name: Audit Wheel Repair
            run:  auditwheel repair --plat manylinux_2_31_x86_64 build/pypiwheel/asset_asrl/dist/*.whl

          - name: 'Upload Wheels'
            uses: actions/upload-artifact@v3
            with:
                name: dist_${{ matrix.python-version }}_${{ matrix.platform }}
                path: wheelhouse/*.whl
                retention-days: 1

 upload:
    needs: build_linux
    strategy:
       fail-fast: false
       matrix:
        platform: [ubuntu-latest]
        python-version: ["3.9"]
        compiler: ["clang-13"]
    runs-on: ${{ matrix.platform }}

    steps:
        - uses: actions/checkout@v3

        - uses: actions/setup-python@v3
          with:
            python-version: ${{ matrix.python-version }}
      
        
        - uses: actions/download-artifact@v3
          with:
              path: dists/

        - run: mkdir wheels

        - name: Copy to Target
          run: cp -r dists/dist_*/. wheels/

        - name: Display structure of downloaded files
          run: ls -R
          working-directory:  wheels/

        #- name: Publish package to TestPyPI
        #  uses: pypa/gh-action-pypi-publish@release/v1
        #  with:
        #    password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        #    repository_url: https://test.pypi.org/legacy/
        #    packages_dir: wheels/