Search.setIndex({"docnames": ["Installation", "contrib", "examples/Delta3", "examples/MultiTarg", "examples/ReentryExample", "examples/examples", "examples/halo", "examples/zermelo", "examples/zermelolink", "index", "install", "python/Astro", "python/asset", "python/optimalcontrol", "python/python", "python/vectorfunctions", "tutorials/Install", "tutorials/Integrator", "tutorials/IntegratorGuide", "tutorials/ODEGuide", "tutorials/OptimalControlProblem", "tutorials/OptimalControlUtilites", "tutorials/PSIOPT", "tutorials/PhaseGuide", "tutorials/VectorFunctionGuide", "tutorials/tutorials"], "filenames": ["Installation.rst", "contrib.rst", "examples\\Delta3.rst", "examples\\MultiTarg.rst", "examples\\ReentryExample.rst", "examples\\examples.rst", "examples\\halo.rst", "examples\\zermelo.rst", "examples\\zermelolink.rst", "index.rst", "install.rst", "python\\Astro.rst", "python\\asset.rst", "python\\optimalcontrol.rst", "python\\python.rst", "python\\vectorfunctions.rst", "tutorials\\Install.rst", "tutorials\\Integrator.rst", "tutorials\\IntegratorGuide.rst", "tutorials\\ODEGuide.rst", "tutorials\\OptimalControlProblem.rst", "tutorials\\OptimalControlUtilites.rst", "tutorials\\PSIOPT.rst", "tutorials\\PhaseGuide.rst", "tutorials\\VectorFunctionGuide.rst", "tutorials\\tutorials.rst"], "titles": ["Python: Installing ASSET", "Guidelines for Contributing", "Delta 3 Multi-phase GTO Transfer", "Multi-Spacecraft Optimization", "Space Shuttle Reentry", "Examples", "Orbit Family Continuation", "Zermelo\u2019s Problem", "Multi-Phase Zermelo\u2019s Problem", "Welcome to ASSET\u2019s documentation!", "Installation", "ASSET Astro Library", "ASSET", "Optimal Control", "Python Library Documentation", "Vector Functions", "Installing ASSET", "Integrators", "Integrator Tutorial", "ODE Tutorial", "Optimal Control Problem Tutorial", "Optimal Control Utilities", "PSIOPT", "Optimal Control Phase Tutorial", "Vector Function Tutorial", "Tutorials"], "terms": {"For": [0, 2, 3, 4, 6, 8, 10, 11, 17, 18, 19, 20, 21, 22, 23, 24], "distribut": [0, 16], "via": [0, 6, 16, 20, 24], "pip": [0, 2, 10, 16], "download": [0, 10, 16], "from": [0, 2, 3, 4, 6, 7, 8, 9, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24], "github": [0, 4, 5, 16, 24], "we": [0, 2, 3, 4, 6, 7, 8, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24], "static": [0, 10, 13, 19, 20, 23], "link": [0, 2, 3, 5, 9, 13, 16, 25], "intel": [0, 2, 10, 16], "": [0, 2, 3, 4, 5, 6, 10, 11, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25], "math": [0, 9, 10, 25], "kernel": [0, 10, 11], "librari": [0, 3, 7, 9, 10, 16, 22, 24, 25], "pyd": 0, "file": [0, 7, 11, 16], "thu": [0, 2, 6, 11, 19, 20, 22, 23, 24], "i": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22, 24], "sctrictli": 0, "neccessari": [0, 3, 13], "have": [0, 2, 3, 4, 6, 7, 8, 9, 11, 16, 17, 18, 19, 20, 22, 23, 24], "mkl": [0, 16, 22], "target": [0, 2, 3, 8], "system": [0, 2, 3, 6, 7, 8, 9, 10, 11, 16, 19, 22, 24], "howev": [0, 8, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24], "still": [0, 16, 20, 23, 24], "llvm": [0, 16], "toolchain": 0, "place": [0, 2, 4, 7, 16, 19, 23], "redistribut": 0, "bin": [0, 13], "folder": [0, 5, 16], "path": [0, 2, 3, 4, 7, 8, 13, 16, 23], "thi": [0, 2, 3, 4, 6, 7, 8, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 25], "ensur": [0, 6, 8, 16, 22, 23, 24], "ha": [0, 3, 6, 7, 8, 10, 16, 17, 19, 20, 22, 23, 24], "access": [0, 11, 20, 22, 23], "two": [0, 3, 4, 6, 7, 8, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25], "dll": [0, 16], "ar": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "vcruntime140": 0, "libiomp5md": [0, 16], "first": [0, 2, 3, 4, 6, 7, 8, 13, 16, 17, 18, 19, 20, 22, 23, 24], "step": [0, 2, 3, 4, 6, 8, 17, 18, 22, 23, 24, 25], "incorpor": [0, 3, 4, 21, 22], "your": [0, 6, 7, 9, 10, 11, 16, 20, 22, 23, 24], "astrodynam": [0, 6, 9, 24], "work": [0, 6, 7, 9, 11, 16, 18, 20, 23, 24], "flow": [0, 2, 3, 24], "requir": [0, 2, 3, 6, 7, 10, 16, 17, 19, 20, 22, 24], "toolkit": [0, 9, 16], "llvmx64": 0, "when": [0, 2, 3, 6, 7, 11, 13, 16, 18, 19, 20, 22, 23, 24], "sure": [0, 3, 11, 16, 20, 24], "add": [0, 2, 3, 4, 6, 7, 8, 11, 13, 16, 17, 18, 20, 22, 24], "If": [0, 3, 6, 7, 8, 9, 10, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24], "abov": [0, 3, 6, 17, 18, 19, 20, 21, 22, 23, 24], "complet": [0, 4, 16, 17, 22, 23, 24], "correctli": [0, 11], "unabl": 0, "load": [0, 11, 16, 23], "next": [0, 3, 4, 6, 8, 17, 19, 20, 22, 23, 24, 25], "take": [0, 2, 3, 4, 7, 8, 17, 18, 19, 20, 21, 22, 23, 24], "provid": [0, 6, 8, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24], "you": [0, 2, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "same": [0, 2, 3, 6, 8, 13, 17, 18, 19, 20, 21, 23, 24], "directori": [0, 16], "current": [0, 2, 6, 7, 8, 10, 13, 19, 22, 23], "unfortun": 0, "due": [0, 16], "potenti": [0, 16, 22, 23, 24], "conflict": [0, 16, 23], "variabl": [0, 3, 4, 6, 7, 8, 10, 11, 13, 16, 17, 18, 19, 20, 22, 23, 24], "us": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25], "insid": [0, 8, 11, 19, 20, 21, 23, 24], "virtual": [0, 3], "environ": [0, 10], "mai": [0, 5, 7, 10, 11, 13, 16, 17, 18, 20, 21, 22, 23, 24, 25], "result": [0, 6, 7, 11, 17, 19, 20, 22, 23, 24], "failur": [0, 11], "function": [0, 2, 3, 4, 5, 6, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25], "issu": [0, 16, 24], "ani": [0, 3, 6, 7, 8, 9, 11, 13, 16, 18, 19, 20, 22, 23, 24], "associ": [0, 6, 13, 19, 23], "docker": 0, "contain": [0, 2, 11, 13, 15, 18, 20, 21, 24], "been": [0, 2, 16, 17, 18, 20, 23, 24], "past": 0, "successfulli": [0, 16], "regardless": 0, "verifi": 0, "correct": [0, 6, 7, 8, 16, 19, 21, 22, 24], "outsid": [0, 3, 11, 24], "now": [0, 2, 3, 4, 6, 7, 8, 16, 17, 18, 19, 20, 23, 24], "should": [0, 2, 4, 6, 7, 13, 16, 17, 18, 20, 21, 22, 23, 24, 25], "avail": [0, 2, 4, 11, 24], "includ": [0, 3, 9, 10, 11, 17, 21, 23, 24], "within": [0, 6, 13, 20, 22, 24], "where": [0, 3, 6, 7, 8, 16, 17, 18, 20, 22, 23, 24], "locat": [0, 7, 10, 16, 18, 24], "import": [0, 2, 3, 4, 6, 7, 8, 11, 16, 17, 18, 19, 20, 21, 22, 24, 25], "ast": [0, 2, 3, 4, 6, 7, 8, 11, 17, 18, 19, 20, 21, 22, 24], "learn": [0, 18, 23], "convent": [0, 3, 7, 10, 11, 19], "necessari": [0, 3, 6, 11, 16, 19, 20, 22, 23, 24], "construct": [0, 2, 3, 4, 5, 7, 8, 9, 11, 13, 17, 19, 20, 21, 22, 23, 24], "head": [0, 3, 15, 19, 20, 23, 24], "over": [0, 2, 3, 4, 6, 7, 8, 13, 20, 22], "vector": [0, 2, 3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25], "some": [0, 3, 6, 7, 8, 10, 11, 16, 17, 19, 20, 22, 23, 25], "found": [0, 2, 5, 11, 16, 17, 18, 22, 24], "libomp": 0, "machin": [0, 22], "A": [0, 2, 3, 4, 6, 7, 8, 9, 13, 16, 18, 20, 21, 22, 23, 24], "few": [0, 3, 7, 8, 16, 17, 22, 24], "fix": [0, 2, 3, 6, 8, 13, 17, 23, 24], "follow": [0, 2, 3, 6, 7, 9, 16, 19, 20, 21, 23, 24], "updat": [0, 7, 8, 16, 18, 22], "reinstal": 0, "numpi": [0, 2, 3, 4, 6, 7, 8, 13, 15, 16, 18, 19, 20, 21, 23, 24], "doe": [0, 2, 13, 17, 20, 21, 22, 23, 24], "resolv": [0, 20], "ad": [0, 3, 6, 8, 13, 16, 20, 22, 23, 24], "line": [0, 2, 4, 7, 8, 20, 22, 23, 24], "code": [0, 5, 7, 16, 17, 18, 22, 23, 24], "section": [0, 3, 8, 18, 19, 20, 23, 24], "o": [0, 2], "kmp_duplicate_lib_ok": 0, "true": [0, 2, 3, 4, 6, 7, 8, 13, 17, 18, 22, 24], "also": [0, 2, 3, 4, 5, 6, 7, 8, 16, 17, 18, 19, 20, 21, 22, 23, 24], "rocket": 2, "courtesi": 2, "w": [2, 4], "d": [2, 3, 4, 7, 8, 21, 22, 23], "graham": 2, "As": [2, 3, 4, 6, 7, 8, 17, 18, 19, 20, 23, 24], "an": [2, 3, 4, 6, 7, 8, 10, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "exampl": [2, 3, 4, 6, 7, 8, 9, 10, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "optim": [2, 4, 5, 6, 7, 8, 9, 14, 17, 19, 22, 24, 25], "control": [2, 3, 4, 5, 6, 7, 8, 9, 11, 14, 19, 22, 24, 25], "problem": [2, 3, 4, 5, 9, 11, 13, 17, 22, 24, 25], "launch": 2, "geostationari": 2, "orbit": [2, 3, 5, 7, 9, 18], "insert": 2, "describ": [2, 17, 18, 19, 24], "bett": [2, 4], "1": [2, 3, 4, 6, 7, 8, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23], "note": [2, 4, 6, 7, 8, 13, 17, 18, 20, 21, 22, 23, 25], "deriv": [2, 4, 13, 17, 19, 21, 22, 23, 24, 25], "entir": [2, 4, 7, 8, 20, 23, 24], "publicli": [2, 4], "sourc": [2, 4, 5, 6, 16, 22, 25], "see": [2, 4, 6, 7, 8, 11, 13, 23, 24], "4": [2, 3, 4, 6, 7, 8, 13, 17, 18, 19, 20, 21, 22, 23, 24], "furthermor": [2, 4, 6, 20, 22, 23, 24], "routin": [2, 3, 4, 22], "benchmark": [2, 4], "gener": [2, 3, 5, 7, 8, 16, 17, 20, 21, 22, 23, 24], "packag": [2, 4, 6, 7, 8, 10, 16, 22, 23, 24, 25], "asset": [2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25], "The": [2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "wa": [2, 7, 16, 18, 20, 22, 23], "nomin": 2, "2": [2, 3, 4, 6, 7, 8, 11, 13, 15, 16, 17, 18, 20, 22, 23], "stage": 2, "consist": [2, 6, 18, 20, 21, 23, 24], "r": [2, 3, 4, 9, 17, 18, 19, 21, 24], "27a": 2, "9": [2, 3, 13, 16, 18, 20, 21, 23, 24], "solid": 2, "booster": 2, "top": [2, 3, 7], "rl": 2, "10": [2, 3, 7, 9, 17, 18, 19, 20, 21, 22, 23, 24], "upper": [2, 4, 7, 13, 19, 23], "had": [2, 8, 19], "interest": [2, 3, 7, 13, 24], "strategi": [2, 23], "liquid": 2, "engin": [2, 19], "onli": [2, 3, 4, 6, 7, 8, 10, 17, 18, 20, 22, 23, 24], "6": [2, 3, 4, 6, 8, 9, 13, 17, 18, 19, 20, 21, 22, 23, 24], "srb": 2, "ignit": 2, "off": [2, 6, 24], "burnout": 2, "75": [2, 3], "second": [2, 4, 6, 7, 11, 18, 22, 23, 24], "after": [2, 4, 8, 13, 16, 17, 18, 20, 22, 23], "inert": 2, "mass": [2, 4, 6, 11], "eject": 2, "remain": [2, 6, 16, 22], "anoth": [2, 4, 6, 7, 20, 21, 22, 23, 24], "t": [2, 3, 4, 6, 7, 8, 13, 15, 16, 17, 19, 21, 22, 23, 25], "150": [2, 6, 8], "too": [2, 6, 22, 23], "continu": [2, 3, 5, 7, 8, 9, 11, 16, 17, 18, 20, 22, 23], "burn": 2, "until": [2, 16, 22], "261": 2, "At": [2, 6, 18, 23, 24], "point": [2, 3, 7, 8, 9, 10, 11, 16, 18, 19, 20, 22, 23, 24], "payload": 2, "separ": [2, 22, 24], "up": [2, 3, 6, 7, 8, 18, 22, 24], "addit": [2, 4, 7, 8, 11, 16, 17, 18, 20, 22, 23, 24], "700": 2, "involv": [2, 4, 17, 20, 23, 24], "maxim": [2, 4, 22, 23], "deliv": 2, "pre": [2, 6], "specifi": [2, 3, 4, 6, 13, 18, 19, 20, 21, 22, 23, 24], "cape": 2, "canaver": 2, "can": [2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24], "broken": [2, 8], "down": [2, 6, 16, 18], "0": [2, 3, 4, 6, 7, 8, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "961": 2, "dynam": [2, 3, 4, 6, 7, 8, 9, 11, 17, 18, 19, 20, 22, 23, 24], "each": [2, 3, 6, 8, 11, 13, 17, 18, 19, 20, 21, 22, 23, 24], "four": [2, 7, 23], "express": [2, 3, 4, 20, 21, 22, 25], "cartesian": [2, 24], "coordin": [2, 4, 24], "all": [2, 3, 4, 6, 8, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24], "save": [2, 3, 6, 7], "differ": [2, 6, 7, 8, 13, 16, 17, 18, 20, 22, 23, 24], "valu": [2, 3, 4, 6, 7, 11, 13, 16, 17, 18, 20, 21, 22, 23, 24], "combin": [2, 20, 22, 23, 24], "thrust": [2, 3, 19, 21], "rate": [2, 4, 22], "configur": [2, 10, 16, 22, 23], "t_i": [2, 20, 23], "dot": [2, 3, 4, 14, 15, 17, 18, 19, 20, 23, 24], "m": [2, 4, 6, 7, 11, 13, 15, 20, 24], "_i": [2, 20, 23], "our": [2, 3, 4, 6, 7, 8, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24], "script": [2, 6, 20], "vec": [2, 19, 20, 22, 23, 24], "v": [2, 3, 4, 11, 15, 16, 17, 18, 19, 20, 21, 23, 24], "frac": [2, 4, 6, 22, 24], "mu": [2, 4, 6, 11, 17, 18, 19, 21, 22], "hat": [2, 4], "u": [2, 3, 6, 7, 8, 18, 19, 20, 21, 23, 24], "c_d": [2, 4], "rho": [2, 4], "_r": 2, "v_r": 2, "time": [2, 3, 4, 6, 7, 8, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24], "omega": 2, "_e": 2, "rho_0": [2, 4], "e": [2, 4, 6, 19, 22, 23, 24], "h": [2, 4, 20, 22, 23, 24], "h_0": [2, 4], "r_e": [2, 4], "initi": [2, 3, 4, 6, 7, 8, 13, 17, 19, 22, 24, 25], "condit": [2, 3, 4, 6, 7, 14, 15, 18, 23, 25], "appli": [2, 4, 7, 8, 13, 15, 17, 18, 19, 20, 22, 23, 24], "enforc": [2, 3, 4, 6, 7, 8, 20, 21, 23], "depart": 2, "latitud": [2, 4], "zero": [2, 3, 4, 6, 17, 18, 20, 21, 23, 24], "veloc": [2, 3, 4, 6, 7, 11, 18, 19, 21, 24], "rel": [2, 18, 19], "surfac": 2, "earth": [2, 6, 11], "co": [2, 3, 4, 7, 8, 14, 15, 23, 24], "28": 2, "5": [2, 3, 4, 6, 7, 8, 11, 13, 17, 18, 20, 21, 22, 23, 24], "circ": [2, 4], "sin": [2, 3, 4, 7, 8, 14, 15, 24], "termin": [2, 3, 4, 6, 16, 22, 23], "final": [2, 3, 4, 6, 8, 13, 17, 18, 20, 22, 23, 24], "classic": [2, 4, 7], "element": [2, 6, 7, 13, 14, 15, 19, 21, 22, 23, 24], "t_f": [2, 4, 6, 23], "24361140": 2, "km": [2, 4], "7308": 2, "130": 2, "269": 2, "8": [2, 3, 4, 6, 7, 8, 13, 17, 18, 20, 21, 22, 23, 24], "model": [2, 3, 4, 6, 7, 8, 14, 18, 19, 24], "start": [2, 6, 7, 8, 10, 11, 13, 16, 17, 18, 20, 22, 24], "defin": [2, 3, 4, 6, 7, 8, 11, 13, 17, 18, 20, 22, 23, 24, 25], "sinc": [2, 6, 7, 8, 11, 18, 21, 22, 23, 24, 25], "structur": [2, 23], "them": [2, 3, 7, 11, 17, 18, 19, 20, 21, 22, 23, 24], "singl": [2, 3, 8, 17, 18, 20, 22, 23, 24], "od": [2, 3, 4, 6, 7, 8, 9, 11, 13, 15, 17, 18, 20, 21, 22, 23, 24, 25], "given": [2, 3, 4, 6, 7, 11, 13, 21, 22, 23, 24], "below": [2, 3, 4, 5, 6, 7, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "class": [2, 3, 4, 7, 8, 13, 15, 18, 20, 21, 22, 23, 24, 25], "rocketod": 2, "oc": [2, 3, 4, 6, 7, 8, 17, 18, 19, 20, 21, 22, 23], "odebas": [2, 4, 13, 18, 19, 20, 21, 23], "def": [2, 3, 4, 6, 7, 8, 17, 18, 19, 20, 21, 22, 23, 24], "__init__": [2, 3, 4, 7, 8, 13, 15, 18, 19, 20, 21, 23, 24], "self": [2, 3, 4, 7, 8, 13, 15, 18, 19, 20, 21, 23, 24], "mdot": 2, "xtu": [2, 4, 18, 19, 21], "odeargu": [2, 3, 4, 7, 8, 13, 14, 18, 20, 21, 23, 25], "7": [2, 3, 4, 6, 13, 17, 18, 19, 20, 21, 23, 24], "xvec": [2, 4, 13, 18, 19, 20, 21, 23], "head3": [2, 3, 15, 17], "segment3": [2, 3, 14, 15], "xvar": [2, 3, 4, 7, 8, 13, 18, 19, 21], "normal": [2, 3, 13, 14, 15, 17, 18, 21, 22, 25], "direct": [2, 3, 6, 7, 13, 16, 17, 18, 19], "so": [2, 3, 4, 6, 7, 8, 17, 19, 20, 21, 22, 23, 24], "doesnt": [2, 23], "done": [2, 3, 4, 6, 13, 17, 23], "constraint": [2, 3, 4, 5, 6, 7, 13, 21, 22, 24, 25], "uvec": [2, 4, 13, 18, 19, 21], "norm": [2, 3, 7, 8, 13, 14, 15, 19, 20, 23, 25], "re": [2, 4, 6, 7, 23], "rhoair": 2, "vf": [2, 3, 4, 6, 7, 8, 13, 15, 17, 18, 19, 20, 21, 23, 24], "exp": [2, 4, 14, 15, 24], "h_scale": 2, "vr": 2, "cross": [2, 4, 6, 14, 15, 20, 24], "np": [2, 3, 4, 6, 7, 8, 17, 18, 19, 20, 21, 23, 24], "arrai": [2, 4, 6, 7, 8, 13, 18, 23, 24], "cant": 2, "let": [2, 3, 6, 7, 18, 23, 24], "exactli": [2, 4, 8, 20, 22, 23, 24], "nan": [2, 22], "Will": 2, "handl": [2, 3, 6, 8, 13, 20, 22, 23, 24], "inititi": 2, "cd": [2, 4], "rdot": [2, 18, 19, 21], "vdot": [2, 4, 18, 19, 20, 21, 23], "normalized_power3": [2, 3, 14, 15, 17, 18, 19, 21, 24], "stack": [2, 3, 4, 7, 8, 14, 15, 17, 18, 19, 21, 23, 25], "super": [2, 3, 4, 7, 8, 18, 19, 20, 21, 23, 24], "might": [2, 23, 24], "notic": [2, 7, 8, 23, 24], "written": [2, 4, 6, 16, 19, 23, 24], "boundari": [2, 4, 6, 7, 13, 21, 22, 23], "set": [2, 3, 4, 6, 7, 8, 10, 11, 13, 16, 17, 18, 20, 23, 24], "necessit": 2, "write": [2, 3, 4, 7, 11, 17, 18, 19, 20, 23, 24], "custom": [2, 9, 13, 20, 23], "which": [2, 3, 4, 6, 7, 8, 9, 10, 11, 17, 18, 19, 21, 22, 23, 24], "convert": [2, 21, 22, 24], "those": [2, 7, 8, 16, 17, 19, 20, 22, 23, 24], "familiar": [2, 6, 7], "convers": [2, 24], "know": [2, 3, 7, 8, 20], "quadrant": 2, "check": [2, 3, 6, 16, 23], "raan": 2, "argument": [2, 3, 4, 6, 7, 8, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 25], "periaps": [2, 18], "run": [2, 3, 4, 5, 8, 10, 16, 22, 23, 24], "statement": [2, 3, 25], "Such": 2, "simpl": [2, 3, 6, 17, 19, 20, 21, 24], "readili": 2, "vectorfunct": [2, 3, 4, 6, 7, 8, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25], "type": [2, 6, 7, 8, 13, 15, 16, 17, 19, 20, 22, 23, 24], "ifels": [2, 14, 15, 24], "seen": [2, 3, 4, 10, 22], "least": [2, 8, 13, 16], "one": [2, 3, 6, 7, 13, 16, 17, 20, 22, 23, 24], "evalu": [2, 8, 13, 17, 22, 24], "output": [2, 3, 7, 11, 16, 17, 18, 19, 21, 23, 25], "fals": [2, 3, 6, 11, 13, 17, 18, 24], "targetorbit": 2, "et": 2, "ot": 2, "wt": 2, "arg": [2, 3, 4, 7, 8, 13, 15, 17, 18, 19, 20, 21, 23, 24], "tolist": [2, 4, 15, 18, 19, 20, 21, 23, 24], "angular": [2, 7], "momentum": 2, "hvec": 2, "node": 2, "nvec": 2, "energi": 2, "ep": 2, "semi": 2, "major": [2, 24], "axi": [2, 15, 24], "evec": 2, "eccentrc": 2, "inclin": 2, "arcco": [2, 3, 14, 15, 24], "pi": [2, 3, 4, 7, 8, 17, 23, 24], "quadrantcheck": 2, "return": [2, 3, 4, 6, 7, 8, 13, 17, 18, 19, 20, 21, 22, 23, 24], "With": [2, 3, 4, 6, 7, 8, 11, 16, 17, 18], "begin": [2, 3, 6, 16, 19, 20, 22, 23, 24, 25], "task": [2, 7, 22, 23, 24], "solv": [2, 3, 4, 6, 8, 13, 22, 24, 25], "here": [2, 3, 6, 7, 8, 16, 17, 19, 20, 23, 24], "find": [2, 4, 6, 7, 18, 20, 22, 23, 24], "suitabl": [2, 4], "guess": [2, 3, 4, 6, 7, 8, 17, 22, 23], "flight": [2, 4, 13], "shown": [2, 6, 16, 17, 18, 19, 20, 21, 22, 23, 24], "To": [2, 3, 6, 8, 16, 17, 18, 19, 20, 21, 22, 23, 24], "do": [2, 3, 6, 7, 8, 10, 16, 17, 18, 19, 20, 21, 22, 23, 25], "adopt": [2, 22], "similar": [2, 3, 4, 16, 17, 20, 22, 23], "select": [2, 4, 16], "state": [2, 3, 4, 6, 7, 8, 13, 18, 19, 20, 21, 22, 24], "along": [2, 3, 6, 8, 11, 13, 16, 17, 18, 20, 21, 22, 23, 24], "linearli": [2, 24], "interpol": [2, 13, 18, 21, 23, 25], "known": [2, 4, 6, 7, 23], "roughli": 2, "easterli": 2, "pass": [2, 3, 6, 7, 8, 13, 17, 18, 19, 20, 21, 22, 23, 24], "under": [2, 23, 24], "evenli": [2, 18, 23], "partit": [2, 23, 24], "posit": [2, 3, 6, 8, 18, 19, 21, 22, 23, 24], "becaus": [2, 3, 7, 8, 19, 20, 22, 24], "allow": [2, 6, 7, 8, 13, 17, 18, 19, 20, 22, 23, 24], "throttl": [2, 18, 19, 21], "suppli": [2, 19, 21, 23, 24], "exact": [2, 18, 20, 22, 23], "histori": [2, 3, 4, 23], "arbitrarili": [2, 7], "unit": [2, 4, 11, 18, 23], "y": [2, 4, 6, 7, 8, 15, 24], "lstar": [2, 4, 6, 11], "deg2rad": [2, 3, 4], "istart": 2, "y0": 2, "00001": [2, 23, 24], "vstar": [2, 4], "drag": [2, 4], "equat": [2, 4, 6, 18, 19, 22], "would": [2, 6, 7, 17, 18, 19, 22, 24], "mf": 2, "magic": 2, "number": [2, 3, 4, 6, 7, 8, 11, 13, 16, 17, 18, 19, 20, 22, 23, 24], "just": [2, 4, 6, 7, 8, 17, 18, 20, 21, 23, 24], "try": [2, 6, 8, 22, 23, 24], "mean": [2, 7, 18, 22, 23], "anomali": [2, 3], "downrang": 2, "eastward": 2, "ksc": 2, "through": [2, 3, 4, 11, 16, 17, 18, 20, 22, 23, 24], "lerp": 2, "05": [2, 23], "oef": 2, "yf": 2, "astro": [2, 6, 9, 14, 15], "classic_to_cartesian": 2, "linspac": [2, 3, 4, 7, 8, 24], "tf_phase4": 2, "1000": [2, 3, 4, 6, 11, 18, 22, 23, 24], "ig1": 2, "ig2": 2, "ig3": 2, "ig4": 2, "x": [2, 3, 4, 6, 7, 8, 15, 19, 20, 21, 22, 23, 24], "11": [2, 4, 7, 8, 16, 20], "tf_phase1": 2, "m0_phase1": 2, "mf_phase1": 2, "append": [2, 3, 4, 6, 7, 8, 17, 18, 22], "elif": [2, 6, 22], "tf_phase2": 2, "m0_phase2": 2, "mf_phase2": 2, "tf_phase3": 2, "m0_phase3": 2, "mf_phase3": 2, "m0_phase4": 2, "mf_phase4": 2, "instanti": [2, 6, 7, 24], "On": [2, 10], "length": [2, 3, 4, 11, 13, 18, 22, 23, 24], "last": [2, 3, 4, 6, 7, 8, 16, 17, 20, 21, 22, 23, 24], "equal": [2, 3, 6, 7, 8, 13, 18, 22, 24], "dictat": 2, "later": [2, 3, 7, 19, 23, 24], "need": [2, 3, 6, 7, 8, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24], "explicitli": [2, 23, 24], "In": [2, 4, 6, 7, 8, 10, 16, 17, 18, 19, 20, 22, 23, 24], "phase4": [2, 20], "simpli": [2, 3, 4, 7, 8, 11, 16, 17, 19, 23, 24], "bound": [2, 3, 4, 7, 11, 13, 19, 22, 23, 24], "propel": [2, 11], "expend": 2, "addition": [2, 4, 16, 17, 20, 22, 23, 24], "object": [2, 3, 4, 7, 8, 9, 13, 15, 17, 18, 19, 21, 22, 24, 25], "between": [2, 3, 6, 7, 8, 11, 13, 18, 19, 20, 22, 23, 24], "sequenti": [2, 20, 23], "solve_optim": [2, 3, 4, 7, 8, 20, 22, 23], "search": [2, 4, 9, 22], "enabl": [2, 4, 9, 22], "solut": [2, 3, 4, 6, 7, 8, 9, 20, 22], "plot": [2, 3, 4, 5, 8], "ode1": 2, "t_phase1": 2, "mdot_phase1": 2, "ode2": 2, "t_phase2": 2, "mdot_phase2": 2, "ode3": 2, "t_phase3": 2, "mdot_phase3": 2, "ode4": 2, "t_phase4": 2, "mdot_phase4": 2, "tmode": [2, 6, 7, 8, 17], "lgl3": [2, 4, 6, 7, 8, 13, 17, 19, 20, 23], "cmode": 2, "highestordersplin": [2, 13, 23], "nsegs1": 2, "40": [2, 4], "nsegs2": 2, "nsegs3": 2, "nsegs4": 2, "phase1": [2, 20], "setcontrolmod": [2, 3, 13, 23], "dont": [2, 20], "good": [2, 4, 6, 7, 17, 24], "measur": [2, 7], "magnitud": [2, 3, 7, 18], "prevent": [2, 22, 23], "becom": [2, 22, 23], "larg": [2, 6, 7, 17, 20, 23, 24], "small": [2, 22, 23, 24], "addlunormbound": [2, 3, 13], "addboundaryvalu": [2, 4, 6, 7, 8, 13, 20, 23], "front": [2, 3, 4, 6, 7, 8, 13, 20, 23], "rang": [2, 3, 4, 6, 7, 8, 11, 17, 18, 20, 21, 22, 23], "want": [2, 3, 6, 7, 8, 13, 16, 18, 20, 21, 22, 23, 24], "interfer": 2, "relax": 2, "radiu": [2, 3, 11], "slightli": [2, 6, 22], "addlowernormbound": [2, 13, 23], "999999": 2, "back": [2, 3, 4, 6, 7, 8, 13, 20, 23], "phase2": [2, 20], "constrain": [2, 22], "well": [2, 3, 4, 6, 7, 8, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24], "redund": [2, 23], "phase3": [2, 20], "adduppervarbound": [2, 13, 23], "addequalcon": [2, 13, 23], "addvalueobject": [2, 13, 23], "ocp": [2, 3, 8, 13, 20, 22], "optimalcontrolproblem": [2, 3, 8, 13, 14, 20, 22], "addphas": [2, 3, 8, 13, 20], "everyth": [2, 3, 6, 20, 24], "var": 2, "addforwardlinkequalcon": [2, 8, 13, 20], "set_optlsmod": [2, 3, 4, 20, 22, 23], "l1": [2, 3, 4, 6, 20, 22, 23], "set_soelsmod": [2, 4], "set_maxlsit": [2, 3], "set_printlevel": [2, 4], "phase1traj": 2, "returntraj": [2, 3, 4, 6, 7, 8, 13, 20, 22, 23], "phase2traj": 2, "phase3traj": 2, "phase4traj": 2, "print": [2, 3, 4, 6, 13, 18, 21, 24], "mstar": [2, 4], "kg": 2, "i9": [2, 4, 22], "12900k": [2, 4], "160": 2, "segment": [2, 3, 4, 6, 7, 13, 14, 15, 19, 23, 24], "across": [2, 8, 20, 23], "approxim": [2, 6, 13, 23], "60": [2, 4], "millisecond": [2, 4], "altitud": [2, 4], "ground": 2, "track": [2, 18], "trajectori": [2, 3, 4, 5, 6, 7, 8, 9, 13, 17, 18, 20, 21, 22, 23], "7529": 2, "749kg": 2, "effect": [2, 11, 18, 23, 24], "712": 2, "j": [2, 3, 4, 7, 8, 20], "practic": [2, 4, 7, 17, 18, 22], "method": [2, 3, 4, 7, 13, 17, 18, 19, 20, 22, 24], "estim": [2, 4, 7, 22, 23], "nonlinear": [2, 4], "program": [2, 4, 7, 22, 24], "cambridg": [2, 4], "univers": [2, 4], "press": [2, 4], "2009": [2, 4], "agamawi": [2, 4], "rao": [2, 4], "2020": [2, 4], "cgpop": [2, 4], "c": [2, 3, 4, 6, 8, 9, 10, 11, 16, 23, 24], "softwar": [2, 4, 5, 9, 20, 22], "multipl": [2, 4, 8, 9, 20, 22, 24], "adapt": [2, 4, 17, 18, 22, 23], "gaussian": [2, 4], "quadratur": [2, 4, 23], "colloc": [2, 4, 6, 7, 23], "spars": [2, 4, 22, 24], "acm": [2, 4], "transact": [2, 4], "mathemat": [2, 4, 8, 20, 24], "tom": [2, 4], "46": [2, 4], "38": [2, 4], "patterson": [2, 4], "2014": [2, 4], "gpop": [2, 4], "ii": [2, 4], "matlab": [2, 4], "hp": [2, 4], "41": [2, 4], "37": [2, 4], "benson": 2, "2005": 2, "gauss": [2, 23], "pseudospectr": 2, "transcript": [2, 13], "doctor": 2, "dissert": 2, "massachusett": 2, "institut": 2, "technologi": 2, "asset_asrl": [2, 3, 4, 6, 7, 8, 11, 13, 16, 18, 19, 20, 21, 22], "matplotlib": [2, 3, 4, 6, 7, 8, 18, 21], "pyplot": [2, 3, 4, 6, 7, 8, 18, 21], "plt": [2, 3, 4, 6, 7, 8, 18, 21], "mpl_toolkit": 2, "basemap": 2, "instal": [2, 9, 11, 25], "optimalcontrol": [2, 3, 4, 6, 7, 8, 13, 15, 17, 18, 19, 20, 21, 22], "g0": [2, 4], "80665": 2, "6378145": 2, "tstar": [2, 4], "sec": [2, 4], "301454": 2, "init": [2, 6], "astar": [2, 4], "rhostar": [2, 4], "estar": 2, "mustar": [2, 4], "fstar": [2, 4], "986012e14": 2, "29211585e": 2, "225": 2, "7200": 2, "g": [2, 3, 4, 6, 18, 19, 20, 21, 22, 23, 24], "628500": 2, "t1": 2, "1083100": 2, "t2": [2, 6], "110094": 2, "283": 2, "33364": 2, "i1": 2, "301": 2, "68": 2, "i2": 2, "467": 2, "21": 2, "tm": 2, "19290": 2, "tm1": 2, "104380": 2, "tm2": 2, "19300": 2, "tmpai": 2, "4164": 2, "pm": [2, 7], "17010": 2, "pm1": 2, "95550": 2, "pm2": 2, "16820": 2, "sm": 2, "sm1": 2, "sm2": 2, "latlongalt": 2, "traj": [2, 3, 7, 8, 18, 20, 23], "ll": [2, 6, 7, 16], "z": [2, 6, 15, 24], "linalg": [2, 3, 7, 8], "lat": 2, "rad2deg": [2, 4], "arcsin": [2, 14, 15, 24], "long": [2, 7, 17, 20, 23], "arctan2": [2, 7, 8, 14, 15, 24], "180": [2, 3, 4, 7, 8], "els": [2, 3, 8, 23], "80": [2, 18], "649": 2, "altvelmass": 2, "alt": 2, "p1": [2, 11], "p2": [2, 11], "p3": 2, "p4": 2, "fig": [2, 3, 4, 6, 7, 8], "figur": [2, 6, 22], "ax0": 2, "subplot": [2, 3, 4, 6, 7, 8], "321": 2, "ax1": 2, "323": 2, "ax2": 2, "325": 2, "ax3": 2, "122": 2, "grid": [2, 3, 4, 6, 7, 8, 24], "set_ylabel": [2, 3, 4, 6, 7, 8], "set_xlabel": [2, 3, 4, 6, 7, 8], "p": [2, 19, 20, 23], "enumer": [2, 3, 6, 7, 8, 13, 22], "label": [2, 3, 4, 7, 8], "f": [2, 19, 20, 22, 23, 24], "project": [2, 6, 16], "lcc": 2, "lat_1": 2, "45": [2, 7, 8], "lat_2": 2, "55": 2, "lat_0": 2, "50": [2, 22, 24], "lon_0": 2, "65": 2, "resolut": 2, "none": [2, 11, 12, 13, 15, 20, 23], "width": 2, "9000000": 2, "height": 2, "ax": [2, 3, 4, 6, 7, 8], "len": [2, 3, 7, 8, 23], "lon1": 2, "float": [2, 13, 15, 24], "lat1": 2, "lon2": 2, "lat2": 2, "drawgreatcircl": 2, "legend": [2, 3, 4, 7, 8], "bluemarbl": 2, "shadedrelief": 2, "drawparallel": 2, "arang": 2, "90": [2, 4], "91": 2, "30": [2, 4], "drawmeridian": 2, "181": 2, "drawmapboundari": 2, "fill_color": 2, "aqua": 2, "titl": [2, 9], "set_size_inch": [2, 4], "15": [2, 7, 8, 16, 20, 23], "forward": [2, 3, 4, 13, 18, 20, 23, 24], "tight_layout": [2, 3, 4, 6, 7, 8], "show": [2, 3, 4, 6, 7, 8, 21, 22, 23], "__name__": [2, 3, 4, 7, 8], "__main__": [2, 3, 4, 7, 8], "softwareinfo": [2, 12, 14], "maginitud": 2, "overconstrain": 2, "perform": [3, 4, 5, 9, 10, 13, 16, 17, 22, 23, 24], "ident": [3, 4, 6, 20, 22, 24], "case": [3, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24], "except": [3, 6, 7, 23, 24], "new": [3, 4, 6, 7, 8, 13, 16, 23, 24, 25], "focu": 3, "standard": [3, 4, 7, 10, 11, 17, 18, 22, 25], "procedur": 3, "tool": [3, 8, 16, 22], "setup": [3, 5, 8, 11, 16, 17, 20], "alwai": [3, 13, 17, 19, 22, 23, 24], "identifi": [3, 10, 22], "assum": [3, 4, 11, 13, 16, 17, 18, 19, 21, 23, 24], "bodi": [3, 17, 18, 19, 21], "graviti": [3, 4, 6, 11, 19], "plu": [3, 7, 19], "equip": 3, "low": [3, 6, 19, 21], "propuls": 3, "previou": [3, 4, 6, 8, 18, 20, 22, 23, 24], "twobodi": [3, 11, 18], "ode_x_u": [3, 7, 8, 15, 17], "p1mu": 3, "ltacc": [3, 11], "uvar": [3, 4, 7, 8, 13, 18, 19, 21], "3": [3, 4, 5, 6, 7, 8, 9, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "tail3": [3, 15, 17], "acc": [3, 17, 18, 19, 21, 22], "flag": [3, 13, 17, 18, 20, 23], "determin": [3, 18, 22], "acceler": [3, 11, 19], "make": [3, 6, 7, 8, 10, 16, 20, 22, 23, 24], "choic": [3, 6, 8, 24], "wish": [3, 11, 16, 17, 18, 23, 24], "propag": [3, 6, 17], "without": [3, 4, 22, 24], "pure": [3, 24], "input": [3, 6, 7, 8, 11, 13, 17, 18, 19, 21, 22, 23, 25], "row": [3, 7, 24], "call": [3, 6, 7, 8, 13, 17, 18, 20, 21, 22, 23, 24], "veri": [3, 4, 6, 8, 11, 17, 23, 24], "easi": 3, "circular": [3, 11], "planar": [3, 6], "makecircig": 3, "thetadeg": 3, "sqrt": [3, 4, 14, 15, 24], "theta": [3, 4, 7, 8], "igc": 3, "makecirctraj": 3, "tf": [3, 4, 6, 13, 18, 21, 23], "n": [3, 11, 13, 15, 17, 18, 20, 23, 24], "integ": [3, 16, 17, 18, 19, 20, 22, 23], "integr": [3, 6, 7, 9, 11, 13, 15, 19, 21, 24, 25], "01": [3, 11, 17, 18, 19, 21], "temp": 3, "integrate_dens": [3, 6, 17, 18, 21, 23], "tt": [3, 6], "ones": [3, 18, 20, 23, 24], "respons": 3, "simplifi": [3, 19, 23, 24], "design": [3, 5, 8, 9, 22, 24], "interfac": [3, 8, 11, 18, 19, 20, 22, 23, 24], "out": [3, 7, 8, 20, 22, 24], "produc": [3, 6, 11, 17, 22, 24], "wrap": [3, 6, 8, 21], "what": [3, 6, 7, 8, 13, 18, 24], "zermelo": [3, 5, 9], "extra": [3, 4, 20, 22], "linkconstraint": [3, 13, 14], "must": [3, 4, 6, 7, 8, 10, 13, 17, 20, 21, 22, 23, 24], "desir": [3, 13, 16, 17, 18], "free": [3, 20, 24], "three": [3, 6, 11, 19, 23, 24], "definit": [3, 4, 6, 7, 13, 23], "end": [3, 6, 7, 8, 11, 13, 17, 19, 20, 22, 23], "solver": [3, 5, 8, 18, 22], "multspacecraft": 3, "istat": [3, 17], "setpointig": 3, "nseg": [3, 6, 7, 8], "creat": [3, 6, 8, 11, 13, 17, 18, 20, 22, 23, 24], "govern": [3, 6, 19, 23, 24], "phase": [3, 4, 5, 6, 7, 9, 13, 17, 19, 20, 22, 25], "lgl5": [3, 13, 23], "settraj": [3, 6, 7, 8, 13, 23], "block": [3, 8, 23], "constant": [3, 4, 6, 7, 8, 11, 15, 17, 18, 23, 24], "blockconst": [3, 13, 23], "lock": [3, 6, 13], "whatev": [3, 24], "addvaluelock": [3, 13], "whole": 3, "tof": 3, "adddeltatimeobject": [3, 7, 8, 13, 20, 23], "multispacecraft": 3, "It": [3, 7, 8, 9, 11, 13, 21, 22, 23, 24], "list": [3, 4, 5, 6, 8, 13, 15, 18, 20, 21, 22], "specif": [3, 6, 8, 13, 19, 20, 22, 24], "stand": 3, "lastli": [3, 6, 8], "assign": [3, 6, 8, 23, 24], "non": [3, 4, 6, 11, 18, 19, 22, 23, 24], "dimension": [3, 4, 6, 11, 13, 23, 24], "rest": [3, 6, 7, 16], "establish": [3, 6, 7], "base": [3, 7, 10, 13, 15, 19, 22, 24], "reach": [3, 22], "linkparamet": 3, "ie": [3, 23, 24], "xt_i": 3, "xt_link": 3, "linkparam": [3, 13, 20], "hit": [3, 16, 24], "param": [3, 7, 8, 13, 20, 23], "index": [3, 6, 9, 13, 19, 20, 23, 24], "setlinkparam": [3, 13, 20], "varibal": 3, "linkfun": 3, "14": [3, 13, 23, 24], "tail": [3, 15, 20, 23, 24], "addlinkequalcon": [3, 13, 20], "addlinkparamequalcon": [3, 13, 20], "set_deltah": 3, "0e": [3, 18, 22, 23, 24], "set_kkttol": [3, 7, 8], "set_boundfract": [3, 22], "997": 3, "printlevel": [3, 22], "data": [3, 6, 11, 21, 23, 25], "choos": [3, 16, 23, 24], "part": [3, 24], "clearli": 3, "arriv": 3, "paramet": [3, 6, 7, 11, 13, 17, 18, 19, 20, 21, 22, 24], "7th": [3, 23], "repres": [3, 13, 19, 20, 21, 23, 24], "wich": 3, "subtract": [3, 24], "wai": [3, 6, 8, 10, 17, 19, 20, 22, 23, 24], "collect": 3, "tie": 3, "togeth": [3, 9, 20, 24], "linkreg": 3, "phaseregionflag": [3, 6, 7, 8, 13, 14], "phasereg": [3, 6, 7, 8], "phasestolink": 3, "tell": [3, 6, 7, 17], "xlinkvar": 3, "befor": [3, 4, 6, 8, 11, 17, 18, 20, 22, 23, 24, 25], "come": [3, 6, 16], "linkparmavar": 3, "bit": [3, 6, 7], "linesearch": 3, "mode": [3, 4, 13, 22, 23], "optlsmod": [3, 22], "toler": [3, 6, 7, 18, 22, 23], "actual": [3, 7, 16, 18, 22, 24], "everi": [3, 6, 8, 17, 20, 22, 23, 24], "constel": 3, "go": [3, 6, 7, 8, 16, 19], "scheme": [3, 6, 7, 18, 22, 23], "comput": [3, 7, 8, 13, 15, 16, 18, 22, 24], "ist": 3, "condtion": 3, "subsitut": 3, "intial": 3, "thei": [3, 4, 6, 8, 11, 19, 20, 21, 22, 23, 24], "avoid": [3, 8, 16], "retranscrib": 3, "subvari": [3, 13], "forc": [3, 13, 22, 23], "retranscript": 3, "perid": 3, "keep": [3, 6, 7, 16, 17, 22], "strictli": [3, 23, 24, 25], "transcrib": [3, 13, 22], "t0": [3, 7, 8, 13, 18, 21, 23], "perf_count": 3, "convergenceflag": [3, 22], "notconverg": [3, 22], "returnlinkparam": [3, 13, 20], "loop": [3, 6, 8, 20], "execut": 3, "like": [3, 4, 6, 7, 18, 22, 23, 24], "simplest": [3, 23], "logic": [3, 7], "manner": 3, "hardest": 3, "better": [3, 17], "satisfi": [3, 4, 7, 8, 13, 22], "even": [3, 7, 16, 19], "curiou": 3, "about": [3, 8, 13, 20, 22, 23, 24], "total": [3, 4, 19, 20, 23], "timer": 3, "python": [3, 6, 9, 10, 11, 16, 17, 18, 22, 23, 25], "how": [3, 4, 6, 7, 8, 11, 18, 20, 21, 23, 24], "much": [3, 6, 8, 23, 24], "taken": [3, 18, 23], "again": [3, 6, 7, 10, 16, 20], "Then": [3, 6, 7, 8, 10], "format": [3, 17, 21, 23, 24], "easier": [3, 6, 8], "user": [3, 7, 9, 10, 11, 16, 20, 22, 23, 24], "most": [3, 6, 7, 10, 17, 18, 20, 21, 22, 23, 24], "comfort": [3, 16], "own": [3, 6, 7, 11, 17, 22, 23], "purpos": 3, "util": [3, 9, 13, 19, 20, 22, 23, 25], "colorscal": [3, 7, 8], "left": [3, 4, 7, 8], "48": [3, 7, 8], "59": [3, 7, 8], "194": [3, 7, 8], "right": [3, 4, 7, 8, 21, 22, 24], "208": [3, 7, 8], "35": [3, 7, 8], "70": [3, 4, 7, 8], "int": [3, 7, 8, 12, 13, 15, 22], "round": [3, 7, 8, 16], "256": [3, 7, 8], "plotphaseandthrottl": 3, "tlist": [3, 6, 7, 8], "calcul": [3, 6, 18, 21, 22], "angl": [3, 4, 7], "ang": [3, 7, 8], "_": [3, 20, 22, 23], "unitj": 3, "figsiz": [3, 6, 7, 8], "12": [3, 6, 7, 8, 13, 18, 22, 23, 24], "clr": [3, 7, 8], "x1": [3, 20, 23, 24], "y1": 3, "color": [3, 4, 6, 7, 8, 22], "str": [3, 7, 8, 13, 15], "x2": [3, 20, 23, 24], "y2": 3, "rad": [3, 7, 8], "nd": 3, "savefig": [3, 6, 7, 8], "multispacecraftoptim": 3, "pdf": 3, "dpi": [3, 6, 7, 8], "500": [3, 6, 7, 8, 17, 22, 23, 24], "bring": [3, 8], "main": [3, 7, 8], "decid": [3, 8], "space": [3, 5, 7, 9, 13, 18, 19, 22, 23], "20": [3, 7, 8, 18, 21, 22], "degre": [3, 4, 7, 22], "increment": [3, 6, 8], "These": [3, 6, 7, 11, 18, 19, 20, 22, 23, 24], "trajsig": 3, "300": [3, 4, 22, 23], "allig": 3, "015": 3, "005": 3, "setpoint": 3, "plottraj": 3, "middl": 3, "its": [3, 6, 7, 17, 20, 21, 22, 23, 24], "correspond": [3, 13, 18, 22, 23], "vehicl": [3, 4], "affect": [3, 8], "abil": [3, 24], "rendezv": 3, "variou": [3, 7, 23, 24], "iter": [3, 4, 6, 8, 18, 20, 22], "get": [3, 4, 6, 7, 8, 10, 13, 16, 22], "simultan": [3, 22, 23], "converg": [3, 4, 6, 7, 20, 21, 23], "indic": [3, 6, 8, 13, 18, 20, 21, 23], "decreas": [3, 17, 18, 22], "toward": 3, "bottom": [3, 4], "complex": [3, 9], "manuev": 3, "tandem": 3, "further": [3, 8, 23, 24], "analysi": [3, 4, 7, 8], "scope": [3, 24], "tutori": [3, 6, 7, 9, 11, 16, 17], "reader": [3, 7, 25], "svg": [3, 6, 7, 8], "outlin": [4, 6], "dure": [4, 6, 7, 10, 11, 16, 17, 18, 22], "spheric": 4, "empir": 4, "lift": 4, "characterist": [4, 6, 11], "gamma": 4, "azimuth": 4, "psi": 4, "attack": 4, "alpha": 4, "bank": 4, "beta": [4, 17], "l": [4, 11, 20, 22], "mv": 4, "c_": 4, "c_l": 4, "a_0": 4, "a_1": 4, "b_0": 4, "b_1": 4, "b_2": 4, "260000": 4, "ft": 4, "quad": [4, 20, 22, 23], "25600": 4, "phi": 4, "80000": 4, "2500": 4, "equival": [4, 18, 20, 22, 23, 24], "examin": [4, 18], "both": [4, 13, 17, 18, 20, 22, 23, 24], "wing": 4, "lead": [4, 22], "edg": [4, 22], "heat": 4, "q": [4, 24], "q_r": 4, "q_": 4, "btu": 4, "17700": 4, "0001": [4, 15], "07": 4, "c_0": 4, "c_1": 4, "c_2": 4, "c_3": 4, "mention": 4, "previous": [4, 8, 13, 17, 18, 20, 23, 24], "mile": 4, "fp": 4, "etc": [4, 7, 11, 13, 24], "typic": [4, 13, 17, 18, 22, 23], "ill": [4, 23], "degrad": [4, 22, 24], "otherwis": [4, 13, 20, 22, 24], "pose": 4, "therefor": [4, 8, 19, 22, 23], "order": [4, 6, 7, 16, 17, 18, 19, 20, 22, 23, 24], "uniti": 4, "other": [4, 8, 11, 13, 16, 18, 20, 22, 23, 24], "100": [4, 17, 18, 22, 23], "000": 4, "feet": 4, "divid": [4, 16, 22, 23, 24], "physic": [4, 6, 7, 8, 22], "appropri": [4, 6, 11, 16, 22, 24], "32": 4, "203000": 4, "100000": 4, "slug": 4, "btustar": 4, "778": 4, "tmax": 4, "20902900": 4, "2690": 4, "140765e17": 4, "rho0": 4, "002378": 4, "h_ref": 4, "23800": 4, "a0": 4, "20704": 4, "a1": 4, "029244": 4, "b0": 4, "07854": 4, "b1": 4, "61592e": 4, "b2": 4, "621408e": 4, "c0": 4, "0672181": 4, "c1": 4, "19213774e": 4, "c2": [4, 24], "21286289e": 4, "c3": [4, 24], "10117e": 4, "qlimit": 4, "eom": 4, "five": 4, "shuttlereentri": 4, "alphadeg": 4, "cl": 4, "sgam": 4, "cgam": 4, "sbet": 4, "cbet": 4, "spsi": 4, "cpsi": 4, "tantheta": 4, "tan": [4, 14, 15, 24], "hdot": 4, "thetadot": 4, "gammadot": 4, "psidot": 4, "qfunc": 4, "rhodim": 4, "vdim": 4, "qr": 4, "qa": 4, "limit": [4, 6, 17, 22, 24], "natur": [4, 23, 24], "linear": [4, 22, 23, 24], "interv": [4, 23], "intuit": 4, "evolv": 4, "ht0": 4, "htf": 4, "vt0": 4, "vtf": 4, "gammat0": 4, "gammatf": 4, "psit0": 4, "200": [4, 22, 23], "trajig": 4, "00": 4, "copi": [4, 6, 20], "preliminari": [4, 6], "discret": [4, 23], "minim": [4, 6, 7, 8, 20, 22, 23], "delta": [4, 5, 6, 9, 13, 22, 23], "rather": [4, 7, 8, 16, 18, 19, 20, 22, 23, 24], "poor": [4, 22, 23], "psiopt": [4, 9, 20, 23, 25], "invok": [4, 6, 13, 22], "feasibl": [4, 8, 20, 22, 23], "safe": 4, "guard": 4, "addluvarbound": [4, 7, 8, 13, 23], "89": 4, "addupperdeltatimebound": [4, 13, 23], "adddeltavarobject": [4, 13, 23], "setthread": [4, 22], "ig": [4, 6, 17, 23], "bad": [4, 24], "turn": [4, 8], "refin": [4, 13, 20, 23], "more": [4, 5, 6, 7, 11, 17, 20, 22, 23, 24], "reoptim": 4, "refinetrajmanu": [4, 13, 20, 23], "traj1": [4, 21], "scale": [4, 6, 11, 13, 17, 18, 22, 23, 24], "rh": 4, "addupperfuncbound": [4, 13, 23], "traj2": [4, 21], "deg": 4, "abl": [4, 22, 23, 24], "29": 4, "algorithm": [4, 13, 18, 22, 23], "optimum": [4, 22], "98": [4, 22], "higher": [4, 22, 23], "34": 4, "141": 4, "ow": [4, 18], "excel": [4, 22], "24": 4, "reduc": [4, 6, 22, 24], "maximum": [4, 6, 18, 19, 22, 23], "63": 4, "formul": [4, 17, 20, 22, 23, 24], "page": [4, 7, 9, 16], "falck": 4, "2022": [4, 9, 16], "http": 4, "openmdao": 4, "io": 4, "dymo": 4, "html": 4, "tt1": 4, "tt2": 4, "5280": 4, "No": [4, 7, 8, 21], "b": [4, 7, 8, 9, 16, 22, 24], "linestyl": 4, "eval": [4, 15], "qs1": 4, "qs2": 4, "ones_lik": 4, "k": [4, 20, 23, 24], "dash": 4, "min": [4, 7, 8, 15, 18, 22], "depth": [5, 24], "meant": [5, 25], "demonstr": [5, 7, 11, 22], "capabl": [5, 6, 16, 17, 22], "mani": [5, 6, 8, 17, 18, 22, 23, 24], "repo": [5, 16], "multi": [5, 9, 18, 20, 22], "gto": [5, 9], "transfer": [5, 9, 17], "refer": [5, 7, 13, 20, 22, 23, 24], "full": [5, 13, 18, 19, 21, 22, 23, 24], "shuttl": [5, 9], "reentri": [5, 9], "famili": [5, 7, 9], "period": [5, 7, 18], "spacecraft": [5, 9, 18], "astrodynamicist": 6, "reconverg": 6, "perturb": [6, 22, 23], "quick": [6, 7, 9], "common": [6, 7, 17, 19, 20, 22, 23, 24], "idiom": [6, 7], "scenario": [6, 9, 17], "investig": 6, "moon": [6, 11], "cr3bp": 6, "build": [6, 7, 10, 16, 25], "northern": 6, "halo": [6, 7], "extern": [6, 7], "obvious": [6, 24], "graph": [6, 7], "astromodel": [6, 11], "shorthand": [6, 7, 24], "abbrevi": 6, "primari": [6, 8, 11, 19], "submodul": [6, 10, 13, 15], "don": [6, 7, 23, 25], "name": [6, 13, 15, 16, 20, 22, 23, 24], "transcriptionmod": [6, 7, 8, 13, 14, 17], "behavior": [6, 23], "unfamiliar": 6, "introductori": 6, "quantiti": 6, "ahead": [6, 7], "chang": [6, 7, 8, 11, 13, 16, 17, 23], "cours": [6, 11, 17], "test": [6, 7], "analyz": 6, "distanc": [6, 7, 11, 22], "mue": 6, "muearth": [6, 11], "gravit": [6, 18, 19], "mum": 6, "mumoon": [6, 11], "ld": 6, "dt": [6, 23], "1415": 6, "10000": [6, 18, 22, 23], "level": [6, 24], "tailor": 6, "built": [6, 7, 16, 20, 22], "instanc": [6, 7, 8, 17, 20, 21, 22, 23, 24], "ordinari": [6, 19], "differenti": [6, 9, 19, 24], "averag": [6, 23], "meter": [6, 11], "store": [6, 11, 21, 23, 24], "member": [6, 13, 22, 24], "whenev": [6, 22, 23], "odeitg": 6, "certainli": 6, "awar": 6, "orthogon": 6, "plane": 6, "usabl": 6, "durat": [6, 23], "signatur": [6, 7, 13, 20, 22, 23, 24], "solveperiod": 6, "fixinit": 6, "v_x": 6, "v_y": 6, "v_z": 6, "t_0": [6, 23], "best": [6, 7, 22], "half": [6, 23], "third": [6, 23], "term": [6, 7, 13, 20, 22, 23, 24], "Or": [6, 18, 22, 24], "suppos": [6, 7], "certain": [6, 20, 22, 23, 24], "could": [6, 8, 19, 20, 23, 24], "initail": 6, "implement": [6, 9, 11, 13, 20, 23, 24], "discuss": [6, 8, 18, 19, 20, 21, 23, 24], "trajguess": 6, "odephas": 6, "lgl": [6, 23], "thread": [6, 7, 8, 16, 17, 18], "core": [6, 7, 8, 9, 17, 22, 24], "idx": 6, "vx": 6, "vz": 6, "tol": [6, 7, 8, 22], "1e": [6, 7, 8, 15, 18], "econtol": [6, 22], "trajsol": 6, "overrid": [6, 13, 18], "compos": [6, 24], "arc": 6, "split": [6, 24], "high": [6, 9, 24], "enough": [6, 11, 22, 23], "accur": [6, 13, 21, 23], "real": [6, 8, 23, 24], "neg": [6, 8, 13, 22, 23], "impact": 6, "runtim": 6, "basic": [6, 7, 20, 23], "trial": [6, 18], "error": [6, 13, 18, 20, 22, 23, 24], "suffici": [6, 23], "tune": [6, 7], "told": 6, "cpu": [6, 16, 22], "fit": [6, 22], "hold": 6, "cannot": [6, 22], "trivial": [6, 20, 22, 23, 24], "constitut": 6, "valid": [6, 22], "extract": 6, "rudimentari": 6, "forev": 6, "stop": [6, 11, 17, 18], "progress": [6, 22], "factor": [6, 13, 22, 23], "mind": [6, 7, 17], "reserv": 6, "keyword": 6, "contin": 6, "cidx": 6, "dx": [6, 22], "lim": [6, 24], "th": [6, 7, 8], "default": [6, 7, 10, 13, 16, 17, 18, 22, 23, 24], "present": 6, "trajlist": 6, "sign": [6, 14, 15, 24], "signlast": 6, "while": [6, 8, 11, 22, 23, 24], "sol": 6, "deepcopi": 6, "obtain": [6, 7, 13], "pull": 6, "Of": 6, "approach": [6, 7, 8, 22], "doesn": [6, 8], "ve": 6, "knowledg": 6, "put": [6, 7, 22, 24], "captur": [6, 7, 18, 22], "concept": [6, 9, 20], "expect": [6, 20, 22, 23], "reciev": 6, "plottrajlist": 6, "proj": 6, "red": [6, 22, 23], "orbitcontinu": 6, "lyapunov": 6, "fig2": 6, "add_subplot": 6, "3d": [6, 24], "plot3d": 6, "blue": [6, 7, 8], "set_zlabel": 6, "skip": [6, 16], "detail": [6, 15, 20, 23], "document": [6, 10], "promis": 6, "8234": 6, "1263": 6, "vy": 6, "tj": 6, "tl": 6, "001": 6, "77": 6, "tlp": 6, "revers": 6, "reput": [6, 7], "grebow": 6, "hot": 6, "implicitli": [6, 19, 20, 23, 24], "twice": [6, 20, 24], "smarter": 6, "extrem": [6, 7], "trickeri": 6, "stabl": 6, "duplic": [6, 20], "almost": [6, 16, 17, 22, 23, 24], "One": [6, 19, 23, 24], "notabl": 6, "explicit": [6, 19, 23, 24], "adjust": [6, 18], "shape": 6, "truncat": 6, "earli": [6, 13], "3715": 6, "214": 6, "set_econtol": [6, 7, 8], "plotli": 6, "ernst": 7, "question": [7, 9, 23], "navig": [7, 8, 16], "field": [7, 8, 18, 20, 23, 24], "modular": [7, 9], "easili": 7, "manipul": [7, 20, 23], "were": [7, 8, 19, 20, 23, 24], "motiv": 7, "develop": [7, 9, 11, 16, 22], "although": [7, 10], "intermedi": [7, 18], "techniqu": [7, 19], "invest": 7, "compel": 7, "move": [7, 8, 24], "faster": [7, 22, 23, 24], "than": [7, 8, 16, 18, 19, 20, 22, 23, 24], "focus": 7, "instead": [7, 8, 23, 24], "overview": [7, 23, 24], "boat": [7, 8], "speed": [7, 8, 17, 22, 24], "subject": [7, 20, 22, 23], "wind": [7, 8], "steer": 7, "fastest": [7, 23], "probabl": [7, 22], "my": 7, "prefer": [7, 17, 20, 23, 24], "mpl": [7, 8], "size": [7, 8, 13, 17, 18, 19, 21, 22, 23, 25], "eas": [7, 8, 24], "read": [7, 8], "xtick": [7, 8], "labels": [7, 8], "ytick": [7, 8], "fontsiz": [7, 8], "rcparam": [7, 8], "person": [7, 24], "organiz": 7, "style": [7, 19, 25], "though": [7, 20, 24], "item": [7, 11], "There": [7, 22, 24], "nvecplot": [7, 8], "vecplotscal": [7, 8], "250": 7, "2d": [7, 8, 24], "motion": 7, "yet": 7, "blow": 7, "fortun": [7, 23], "accept": [7, 8, 11, 22, 24], "pattern": 7, "itself": [7, 11, 20, 23, 24], "look": [7, 8, 22, 24], "vmax": [7, 8], "wfunc": [7, 8], "oppos": [7, 8, 17], "depend": [7, 8, 16, 21, 22, 23, 24], "xyt": [7, 8], "head_3": [7, 8, 15, 17], "wx": [7, 8], "wy": [7, 8], "xd": [7, 8], "yd": [7, 8], "constructor": [7, 17, 18, 21, 23, 24], "compon": [7, 24], "oper": [7, 19, 21, 25], "parameter": [7, 23], "someth": [7, 8, 23], "zerm_od": 7, "mywindfunct": 7, "reiter": 7, "formal": [7, 9, 19], "remind": 7, "fresh": 7, "numer": [7, 17, 24], "nowind": [7, 8], "And": [7, 20], "uniformwind": [7, 8], "135": [7, 8], "vel": [7, 8], "astut": 7, "among": 7, "despit": 7, "warn": [7, 24], "permit": 7, "neither": 7, "bypass": [7, 24], "deal": 7, "danger": 7, "disallow": 7, "scroll": [7, 22, 23], "okai": 7, "trick": 7, "sai": [7, 8, 16, 23], "cosin": [7, 24], "origin": [7, 20, 24], "close": [7, 16, 22], "ey": 7, "plain": 7, "old": 7, "constantdirwind": [7, 8], "head2": [7, 8, 15], "trig": 7, "suit": 7, "vari": [7, 8, 19, 20, 23], "variabledirwind": [7, 8], "finish": [7, 16], "fast": [7, 22], "vm": [7, 8], "wf": [7, 8], "straight": 7, "dist": [7, 8], "trajg": [7, 8], "num": [7, 8], "simpler": 7, "lower": [7, 13, 22, 23], "reason": 7, "restrict": [7, 11, 22, 23], "fundament": [7, 24], "hardli": 7, "directli": [7, 17, 19, 22, 23], "kkttol": [7, 22], "satisfactori": 7, "stuff": [7, 24], "thing": [7, 20, 21, 23, 24], "quickli": 7, "concis": 7, "explor": [7, 8], "compar": [7, 8, 10, 14, 15, 22], "omit": [7, 20], "comparewind": [7, 8], "25": [7, 8], "test1": [7, 8], "test2": [7, 8], "lambda": [7, 8, 13, 22], "test3": [7, 8], "test4": [7, 8], "plot2dtrajlist": [7, 8], "happen": [7, 22, 24], "isn": 7, "technic": [7, 8], "paper": [7, 9], "enjoi": 7, "comparespe": [7, 8], "vmrang": [7, 8], "vdwx": [7, 8], "vdwy": [7, 8], "plot2dtrajlistvf": [7, 8], "around": [7, 19, 22], "syntax": [7, 24], "behav": [7, 24], "That": [7, 8, 11, 19, 24], "job": [7, 22], "tri": 7, "help": [7, 13, 23], "exercis": 7, "incentiv": 7, "delai": 7, "comparewindmodel": 7, "wfunc_num": [7, 8], "make_subplot": 7, "col": [7, 24], "maxx": [7, 8], "max": [7, 8, 15, 18], "minx": [7, 8], "maxi": [7, 8], "mini": [7, 8], "xrang": [7, 8], "yrang": [7, 8], "xplot": [7, 8], "yplot": [7, 8], "meshgrid": [7, 8, 24], "uplot": [7, 8], "zeros_lik": [7, 8], "vplot": [7, 8], "u_ij": [7, 8], "v_ij": [7, 8], "qv": [7, 8, 24], "quiver": [7, 8], "overlai": [7, 8], "ncol": [7, 8], "compareboatspe": 7, "haven": [8, 17], "highli": [8, 11, 17, 24], "recommend": [8, 11, 16, 17, 22, 24], "background": 8, "inform": [8, 11, 13], "modifi": [8, 13, 17, 18, 22, 23], "travel": 8, "arbitrari": [8, 9, 20, 21, 24], "destin": 8, "pursuit": 8, "expand": [8, 22], "occur": [8, 18, 22, 23, 24], "numphas": 8, "straigh": 8, "highlight": [8, 16], "made": [8, 22, 24], "consecut": [8, 22], "minor": 8, "accompani": 8, "addlowerdeltatimebound": [8, 13, 23], "meat": 8, "redefin": 8, "intersect": 8, "carefulli": 8, "consid": [8, 11, 24], "match": [8, 17, 21, 23, 24], "achiev": 8, "stai": 8, "noth": [8, 13, 23, 24], "wrong": [8, 23], "sens": [8, 22, 24], "perfectlli": 8, "never": [8, 19, 24], "overal": 8, "ph": 8, "bracket": [8, 24], "aftward": 8, "singular": [8, 23], "quit": [8, 21, 22, 24], "maneuv": 8, "exist": [8, 11, 13, 22], "comparison": [8, 24], "movement": 8, "leav": [8, 20], "comparewindmodelslink": 8, "compareboatspeedlink": 8, "85": 8, "scienc": 9, "extens": [9, 11, 16, 24], "rapid": 9, "automat": [9, 10, 21, 22, 23, 24], "newli": [9, 13], "interior": [9, 22], "turnaround": 9, "cite": 9, "inproceed": 9, "pezent2022": 9, "author": [9, 22], "jame": 9, "pezent": 9, "jare": 9, "sike": 9, "william": 9, "ledbett": 9, "rohan": 9, "sood": 9, "kathleen": 9, "howel": 9, "jeffrei": 9, "stuart": 9, "booktitl": 9, "aiaa": 9, "scitech": 9, "forum": 9, "1131": 9, "year": 9, "doi": 9, "2514": 9, "pleas": [9, 24], "email": 9, "jbpezent": 9, "crimson": 9, "ua": 9, "edu": 9, "jdsikes1": 9, "wgledbett": 9, "modul": [9, 17, 19, 21, 22, 24], "process": [10, 16, 19, 22, 23], "git": 10, "repositori": 10, "manual": [10, 13, 18, 21, 22, 23], "mandatori": 10, "x86": 10, "offici": 10, "support": [10, 17, 24], "dev": 10, "team": 10, "amd": 10, "arm": 10, "architectur": [10, 25], "appl": 10, "m1": 10, "opinion": [10, 22, 24], "easiest": 10, "anaconda": [10, 16], "channel": 10, "conda": [10, 16], "devel": 10, "platform": 10, "mklroot": 10, "unix": 10, "root": [10, 18, 24], "env": 10, "plan": 10, "local": [10, 23, 25], "subset": [11, 24], "src": 11, "sampl": [11, 23], "layout": 11, "risk": 11, "maintain": 11, "compat": 11, "intern": [11, 13, 22], "frame": [11, 24], "respect": [11, 17, 18, 22], "conist": 11, "incorrect": [11, 24], "pertain": 11, "proceed": [11, 17], "spice": 11, "julian": 11, "dai": [11, 23], "attempt": [11, 20, 22, 23, 24], "erron": 11, "massless": 11, "expenditur": 11, "thruster": 11, "littl": 11, "fuel": 11, "consider": [11, 22, 24], "reccomend": 11, "BE": 11, "radiusearth": 11, "twobody_lt": 11, "thrustermodel": 11, "lowthrustacc": 11, "nondim_ltacc": 11, "ltmodel": 11, "mu1": 11, "mu2": 11, "385000": 11, "cr3bp_lt": 11, "spiceypi": [11, 16], "regard": [11, 20], "epprfram": 11, "sppy": 11, "de432": 11, "furnsh": 11, "directory_to_your_kernel": 11, "bsp": 11, "jd0": 11, "2451545": 11, "jdf": 11, "365": 11, "4000": 11, "spicefram": 11, "j2000": 11, "sun": 11, "efram": 11, "musun": 11, "au": 11, "besid": 11, "jupit": 11, "barycent": 11, "venu": 11, "addspicebodi": 11, "eppr_lt": 11, "nbodyfram": 11, "nbframe": 11, "nbody_lt": 11, "pymain": [12, 14], "__delattr__": [13, 14], "delattr": 13, "__dir__": [13, 14], "dir": 13, "__eq__": [13, 14], "__format__": [13, 14], "format_spec": 13, "formatt": 13, "__ge__": [13, 14, 15], "__getattribute__": [13, 14], "getattr": 13, "__gt__": [13, 14, 15], "__hash__": [13, 14], "hash": [13, 22], "__init_subclass__": [13, 14], "subclass": 13, "overridden": [13, 22], "extend": [13, 25], "__le__": [13, 14, 15], "__lt__": [13, 14, 15], "__ne__": [13, 14], "__new__": [13, 14], "kwarg": [13, 15], "__reduce__": [13, 14], "helper": 13, "pickl": 13, "__reduce_ex__": [13, 14], "protocol": 13, "__repr__": [13, 14], "repr": 13, "__setattr__": [13, 14], "setattr": 13, "__sizeof__": [13, 14], "memori": 13, "byte": 13, "__str__": [13, 14], "__subclasshook__": [13, 14], "abstract": 13, "issubclass": 13, "abc": 13, "abcmeta": 13, "__subclasscheck__": 13, "notimpl": 13, "outcom": 13, "cach": [13, 16], "controlmod": [13, 14, 23], "pybind11_object": [13, 15], "firstordersplin": [13, 23], "nosplin": [13, 23], "bool": [13, 15, 22], "__getstate__": 13, "__index__": 13, "__int__": 13, "__members__": 13, "__module__": [13, 15], "__setstate__": 13, "properti": [13, 15], "finitedifft": [13, 14], "arg0": [13, 15], "arg1": [13, 15], "ndarrai": [13, 15], "float64": [13, 15], "all_deriv": 13, "arg2": [13, 15], "integralmod": [13, 14], "baseintegr": 13, "trapintegr": 13, "interpfunct": [13, 14, 15, 23, 25], "irow": [13, 15], "orow": [13, 15], "__call__": [13, 15], "overload": [13, 15, 24], "scalarfunct": [13, 14, 15, 18, 20, 23, 24], "lglinterpt": [13, 14, 23, 25], "int32": [13, 15], "adjointgradi": [13, 15], "adjointhessian": [13, 15, 18, 24], "computeal": [13, 15], "tupl": [13, 15, 17, 18, 20, 22, 24], "jacobian": [13, 15, 18, 24], "rpt": [13, 15], "interpfunction_1": [13, 14, 15], "sf": [13, 15], "interpfunction_3": [13, 14, 15], "interpfunction_6": [13, 14, 15], "errorintegr": 13, "interpnondim": 13, "interprang": 13, "interpwholerang": 13, "interpolatederiv": 13, "arg3": [13, 15], "arg4": 13, "arg5": 13, "arg6": 13, "gettableptr": 13, "loadevendata": 13, "loadunevendata": 13, "makeperiod": 13, "linkflag": [13, 14], "backtofront": 13, "backtoback": 13, "fronttoback": 13, "paramstoparam": 13, "fronttofront": 13, "pathtopath": 13, "backtwototwofront": 13, "fronttwototwoback": 13, "linkobject": [13, 14], "pvar": [13, 19], "pvec": [13, 19], "tvar": [13, 15, 19, 24], "xtvec": 13, "optimizationproblembas": 13, "phaseinterfac": [13, 14], "rtype": 13, "adddirectlinkequalcon": [13, 20], "phaseregion": [13, 23], "predefin": 13, "arg7": 13, "arg8": 13, "arg9": 13, "arg10": 13, "arg11": 13, "addlinkinequalcon": [13, 20], "inequ": [13, 22], "fulli": [13, 20, 22, 23, 24], "form": [13, 17, 20, 22, 23, 24], "addlinkobject": [13, 20], "share": 13, "addlinkparaminequalcon": [13, 20], "addlinkparamobject": [13, 20], "getphasenum": 13, "removelinkequalcon": 13, "discard": 13, "remov": 13, "void": 13, "removelinkinequalcon": 13, "removelinkobject": 13, "removephas": 13, "nonlinearprogram": 13, "whether": [13, 18, 22, 24], "statist": 13, "option": [13, 16, 22, 24], "odeparam": [13, 20, 23], "staticparam": [13, 23], "doubl": [13, 22, 23], "adddeltatimeequalcon": [13, 23], "region": [13, 20, 22], "usual": [13, 18, 22], "adddeltavarequalcon": [13, 23], "frontandback": [13, 23], "backandfront": 13, "backfront": 13, "stateconstraint": [13, 14], "addinequalcon": [13, 23], "ineq": 13, "addintegralobject": [13, 23], "stateobject": [13, 14], "addintegralparamfunct": [13, 23], "pv": [13, 20, 23], "neccessarili": 13, "scalar": [13, 15, 20, 22, 23, 25], "addlufuncbound": [13, 23], "lunorm": 13, "addlusquarednormbound": [13, 23], "seper": 13, "sever": [13, 22, 23], "addlowerdeltavarbound": [13, 23], "addlowerfuncbound": [13, 23], "addlowersquarednormbound": 13, "addlowervarbound": [13, 23], "addperiodicitycon": 13, "addstateobject": [13, 23], "addupperdeltavarbound": [13, 23], "adduppernormbound": [13, 23], "adduppersquarednormbound": 13, "enumur": 13, "enable_vector": 13, "refinetrajequ": [13, 23], "defect": [13, 23], "per": [13, 23], "removeequalcon": 13, "removeinequalcon": 13, "removeintegralobject": 13, "removeintegralparamfunct": 13, "removestateobject": 13, "returncostatetraj": [13, 20, 23], "costat": [13, 23], "returnequalconlmult": 13, "multipli": [13, 20, 22, 23, 24], "lamda": 13, "returninequalconlmult": 13, "returnstaticparam": [13, 20, 23], "activ": [13, 22], "returntrajrang": 13, "returntrajrangend": 13, "nondimension": 13, "returntrajt": [13, 23], "setintegralmod": 13, "simpsonintegr": 13, "setstaticparam": [13, 20, 23], "statc": 13, "paramat": 13, "mesh": [13, 20, 23], "substaticparam": 13, "switch": 13, "replac": [13, 22], "switchtranscriptionmod": 13, "lgl7": [13, 23], "trapezoid": [13, 23], "centralshoot": [13, 23], "test_thread": 13, "shouldn": 13, "displai": [13, 22], "attach": [13, 17, 20, 22, 23], "vindic": 13, "cindec": 13, "nodalpath": 13, "innerpath": [13, 23], "pairwisepath": [13, 23], "13": [13, 18, 20, 23], "rkoption": [13, 14], "rk4": 13, "dopri54": [13, 18], "dopri87": [13, 18, 19, 23], "strto_phaseregionflag": [13, 14], "colmatrix": [14, 15, 24], "constantscalar": [14, 15], "constantvector": [14, 15], "dynamicstacktest": [14, 15], "interptable1d": [14, 15, 21, 24], "interptable2d": [14, 15, 24], "pyscalarfunct": [14, 15, 24], "pyvectorfunct": [14, 15, 24], "rowmatrix": [14, 15, 24], "scalardynamicstacktest": [14, 15], "scalarrootfind": [14, 15], "segment2": [14, 15], "stackscalar": [14, 15], "sum": [14, 15, 19, 20, 22, 23], "sumelem": [14, 15], "sumscalar": [14, 15], "ab": [14, 15, 24], "arccosh": [14, 15, 24], "arcsinh": [14, 15, 24], "arctan": [14, 15, 24], "arctanh": [14, 15, 24], "cosh": [14, 15, 24], "cubed_norm": [14, 15, 24], "cwiseproduct": [14, 15, 24], "cwisequoti": [14, 15, 24], "divtest": [14, 15], "doublecross": [14, 15], "inverse_cubed_norm": [14, 15, 24], "inverse_four_norm": [14, 15, 17], "inverse_norm": [14, 15, 24], "inverse_squared_norm": [14, 15, 24], "log": [14, 15, 22, 24], "matmul": [14, 15], "normalized_power2": [14, 15, 24], "normalized_power4": [14, 15, 24], "normalized_power5": [14, 15, 24], "pow": [14, 15], "quatproduct": [14, 15, 24], "quatrot": [14, 15, 24], "sinh": [14, 15, 24], "squar": [14, 15, 17, 23, 24], "squared_norm": [14, 15, 23, 24], "stack_scalar": [14, 15], "tanh": [14, 15, 24], "ephemeri": 14, "__add__": 15, "__array_ufunc__": 15, "__getitem__": 15, "slice": 15, "__mul__": 15, "__neg__": 15, "__radd__": 15, "__rmul__": 15, "__rsub__": 15, "__sub__": 15, "__truediv__": 15, "coeff": 15, "head_2": 15, "pad": [15, 24], "padded_low": 15, "padded_upp": 15, "segment_2": 15, "segment_3": [15, 17], "tail2": 15, "tail_2": 15, "tail_3": [15, 17], "matrixfunctionview": 15, "genericfunct": 15, "invers": [15, 24], "__and__": 15, "__or__": 15, "__abs__": 15, "genericcondit": 15, "__pow__": 15, "__rgt__": 15, "__rlt__": 15, "__rtruediv__": 15, "throwoutofbound": [15, 24], "warnoutofbound": [15, 24], "kind": [15, 24], "cubic": [15, 21, 23, 24], "vt": 15, "interp": [15, 23], "interp_deriv1": 15, "interp_deriv2": 15, "find_elem": 15, "func": [15, 24], "callabl": 15, "args_proxi": 15, "jstepsiz": [15, 24], "06": 15, "hstepsiz": [15, 24], "speedtest": 15, "supertest": 15, "input_domain": 15, "is_linear": 15, "ode_x": 15, "ode_x_u_p": 15, "ode_6_3": 15, "ode_7_3": 15, "ode_2_1": 15, "ode_6": 15, "ode_4": 15, "kepler": 15, "keplerpropag": 15, "modifiedtocartesian": 15, "cartesiantoclass": 15, "scratch": [16, 24], "visual": 16, "studio": 16, "2017": 16, "greater": [16, 22], "commun": 16, "compil": 16, "oneapi": 16, "sphinx": 16, "furo": 16, "prompt": 16, "desktop": [16, 22], "un": 16, "clang": 16, "cmake": 16, "latest": 16, "version": [16, 18, 24], "possibl": [16, 22, 23, 24], "releas": [16, 24], "win64": 16, "ex": [16, 22, 23], "proce": 16, "offlin": 16, "programdata": 16, "anaconda3": 16, "upgrad": 16, "compatib": 16, "aren": [16, 19], "oneapi_root": 16, "alreadi": [16, 20, 22, 23, 24], "alder": 16, "lake": 16, "raptor": 16, "benefici": 16, "mkl_enable_instruct": 16, "avx": 16, "onc": [16, 17, 20, 23, 24], "relev": [16, 17, 19, 22], "clone": 16, "live": 16, "open": [16, 22, 25], "administr": 16, "id": 16, "wait": 16, "cmakeset": 16, "json": 16, "amount": [16, 17, 22], "ram": 16, "dropdown": 16, "menu": 16, "messag": 16, "ctrl": 16, "shift": 16, "readi": 16, "gcc": 16, "ubuntu": 16, "command": 16, "16": [16, 22], "vscode": 16, "vsc": 16, "manag": 16, "sudo": 16, "apt": 16, "lldb": 16, "lld": 16, "essenti": [16, 23], "gui": 16, "websit": 16, "bash": 16, "openmp": 16, "nomkl": 16, "properli": 16, "opt": 16, "setvar": 16, "sh": 16, "ninja": 16, "kit": 16, "review": 16, "feel": 16, "paradigm": 16, "featur": [16, 17], "advanc": 17, "criteria": 17, "cover": [17, 18, 20, 22, 23, 24], "solar": 17, "sail": 17, "solarsail_acc": 17, "ndr2": 17, "full_twobody_solarsail_model": 17, "two_body_solarsail_od": 17, "02": 17, "often": [17, 22, 23, 24], "applic": [17, 18, 20, 23, 24], "By": [17, 18, 22, 23, 24], "r0": [17, 19, 24], "v0": [17, 19, 20, 24], "rf": 17, "finaltim": 17, "numstat": 17, "popul": 17, "But": 17, "throughout": [17, 22, 24], "chaotic": 17, "orient": [17, 22], "prograd": 17, "fly": [17, 22, 23], "progradefunc": 17, "rhat": [17, 24], "vhat": [17, 24], "capbl": 17, "stm": [17, 18], "sake": 17, "being": [17, 22, 23], "integrate_stm": [17, 18], "unpack": [17, 24], "finalst": 17, "stmsingl": 17, "statelist": 17, "timelist": 17, "integrate_stm_parallel": [17, 18], "filestatevec": 17, "stmvec": 17, "integrate_dense_parallel": [17, 18], "numthread": 17, "ig_parallel": 17, "likewis": [17, 20, 22], "word": [17, 23], "caution": 17, "usag": [18, 19, 21, 23, 25], "ballist": [18, 19], "whose": [18, 24], "central": [18, 19, 22, 23], "canon": 18, "string": [18, 22, 23], "moment": [18, 23], "dormand": [18, 23], "princ": [18, 23], "defsteps": 18, "meet": 18, "minimum": [18, 22, 23], "smaller": [18, 24], "larger": [18, 22, 24], "setsteps": [18, 23], "tbode": 18, "tbinteg": 18, "stepsiz": 18, "minsteps": 18, "maxsteps": 18, "absolut": [18, 24], "metric": 18, "assess": 18, "accuraci": [18, 23], "yourself": [18, 24], "setab": 18, "reltol": 18, "abstol": 18, "getabstol": 18, "getreltol": 18, "uniformli": 18, "setabstol": [18, 23], "setreltol": 18, "individu": [18, 20, 22, 24], "far": [18, 23], "fifth": [18, 23, 24], "x0t0": 18, "xftf": 18, "trajexact": 18, "trajinterpn": 18, "ascend": 18, "descend": 18, "signifi": 18, "encount": [18, 22, 23], "underli": 18, "increas": [18, 22, 23], "stopcod": 18, "occurr": 18, "apoaps": 18, "newton": [18, 22], "raphson": 18, "spline": [18, 21, 23], "represent": [18, 21, 23], "eventtol": 18, "maxeventit": 18, "apsefunc": 18, "apoapseev": 18, "periapseev": 18, "aps": 18, "allapseev": 18, "eventloc": 18, "empti": [18, 20], "apoapseeventloc": 18, "periapseeventloc": 18, "allapseeventloc": 18, "themselv": [18, 20, 23, 24], "analyt": [18, 21, 22], "x0t0tf": 18, "jac": 18, "hess": 18, "transit": 18, "matrix": [18, 22, 25], "critic": [18, 22], "stabil": 18, "_parallel": 18, "parallel": [18, 22, 24], "regular": [18, 19, 22, 23, 24], "ith": 18, "nthread": [18, 22], "integrate_parallel": 18, "xftf_jac": 18, "xftf_jac_eventloc": 18, "traj_eventloc": 18, "oftentim": 18, "reus": [18, 24], "twobodyltod": [18, 19, 21], "maxltacc": [18, 19, 21], "align": 18, "instantan": [18, 23], "ulaw": [18, 21], "integnoulaw": 18, "integulaw": [18, 21], "x0t0u0": [18, 21], "trajnoulaw": 18, "trajulaw": 18, "goal": [19, 20, 24], "facilit": [19, 21, 23], "adher": 19, "autonom": 19, "unus": 19, "obei": 19, "exce": [19, 22], "twobodyltfunc": 19, "thin": 19, "wrapper": 19, "sub": [19, 25], "clearer": 19, "address": [19, 24], "similarli": [19, 24], "r1": [19, 24], "r2": [19, 24], "v1": [19, 20, 24], "v2": [19, 24], "u0": 19, "u1": [19, 24], "u2": [19, 24], "inspect": 19, "idea": [19, 24], "recogn": 19, "inherit": [19, 24], "twobodylt": 19, "fledg": 19, "dispatch": [19, 24], "walk": 20, "optimalcontrolpoblem": 20, "api": [20, 23], "dummyod": [20, 23], "xv": [20, 23], "uv": [20, 23], "odex": 20, "odexu": 20, "odexup": 20, "phase0": 20, "phase5": 20, "Be": 20, "uniqu": [20, 23, 24], "detect": [20, 22, 25], "throw": [20, 23, 24], "comment": 20, "elsewher": 20, "care": [20, 22, 23], "accident": [20, 23], "rule": [20, 23, 24], "thumb": [20, 24], "intent": 20, "elaps": [20, 23], "analog": 20, "upon": 20, "bmatrix": [20, 22, 23], "text": [20, 23], "_1": [20, 23], "_2": [20, 23], "v_n": [20, 23], "constitu": 20, "lor": 20, "ldot": [20, 23], "contriv": [20, 23], "illustr": [20, 21, 23, 24], "0th": [20, 23], "lvar": 20, "alinkequalcon": 20, "27": 20, "26": 20, "xtuvars0": 20, "opvars0": 20, "spvars0": 20, "xtuvars1": 20, "opvars1": 20, "spvars1": 20, "lpvar": 20, "mix": [20, 24], "group": [20, 23, 24], "vs0": 20, "vp1": 20, "product": [20, 22, 25], "somefunc": 20, "xtuvar": [20, 23], "someotherfunc": 20, "triplephaselink": 20, "x0": [20, 24], "spvar": [20, 23], "opvar": [20, 23], "lpvec": 20, "complic": [20, 24], "linkag": 20, "accomplish": [20, 23, 24], "adjac": [20, 23], "altern": [20, 21, 22, 23], "conveni": 20, "fall": 20, "special": [20, 23], "leq": [20, 23], "alinkinequalcon": 20, "procuct": 20, "triplephaseinequ": 20, "alinkobject": 20, "topic": [20, 25], "fail": [20, 22, 23], "solve_optimize_solv": [20, 22, 23], "retriev": [20, 23], "either": [20, 22, 23, 24], "traj0": 20, "rememb": 20, "statparams1": 20, "5000": 20, "ctraj": 20, "seri": 21, "distinct": [21, 23, 24], "reintegr": 21, "law": [21, 23, 25], "dimens": [21, 24], "hermit": 21, "necessarili": 21, "tabl": [21, 22, 23, 24], "dp54": 21, "traji": 21, "6000": 21, "tab1": 21, "less": [21, 22, 23], "justut": 21, "tab2": 21, "interpret": [21, 23, 24], "integtab1": 21, "integtab2": 21, "held": 21, "rendfunc": 21, "tab": [21, 23, 24], "x_tfunc": 21, "rfunc": 21, "effici": [22, 24], "success": [22, 24], "commerci": 22, "knitro": 22, "snopt": 22, "reliant": 22, "licens": 22, "ipopt": 22, "nlp": 22, "eq": 22, "short": 22, "seek": 22, "primal": 22, "dual": 22, "saddl": 22, "lagrangian": 22, "nu": 22, "ln": 22, "s_i": 22, "cdot": 22, "slack": 22, "barrier": 22, "penal": 22, "lagrang": [22, 24], "stationari": 22, "hessian": [22, 24], "inertia": 22, "nabla_x": 22, "nabla_": 22, "xx": 22, "appear": [22, 24], "computation": 22, "expens": [22, 24], "independ": 22, "leverag": 22, "art": 22, "symmetr": [22, 24], "indefinit": 22, "pardiso": 22, "suggest": [22, 23, 25], "set_xxx": 22, "xxx": 22, "set_maxit": 22, "auglang": 22, "99": 22, "descript": [22, 23, 24], "tip": 22, "maxit": 22, "NO": 22, "maxaccit": 22, "econsinf": 22, "iconsinf": 22, "kktinf": 22, "disabl": [22, 24], "kkt": [22, 23], "econ": 22, "icon": 22, "bar": 22, "infeas": 22, "div": 22, "diverg": [22, 23], "0e15": 22, "0e10": 22, "maxlsit": 22, "alphar": 22, "merit": 22, "penalti": 22, "augment": 22, "sensit": 22, "nol": 22, "soelsmod": 22, "optbarmod": 22, "loqo": 22, "heurist": 22, "probe": 22, "mehrotra": 22, "fewer": 22, "circumst": 22, "slower": [22, 24], "soebarmod": 22, "deltah": 22, "smallest": 22, "diagon": 22, "incrh": 22, "decrh": 22, "33": 22, "boundfract": 22, "fraction": 22, "harm": 22, "robust": [22, 23], "95": 22, "999": 22, "qporderingmod": 22, "fill": 22, "meti": 22, "nest": 22, "dissect": 22, "mindeg": 22, "count": 22, "verbos": 22, "consol": 22, "sequenc": 22, "ignor": 22, "difficulti": 22, "feed": 22, "hope": 22, "nearbi": 22, "IF": 22, "optimize_solv": 22, "futur": [22, 24], "cflag": 22, "exit": 22, "icontol": 22, "bartol": 22, "observ": 22, "accecontol": 22, "accicontol": 22, "accbartol": 22, "acckkttol": 22, "immedi": [22, 23, 24], "inf": 22, "divecontol": 22, "divicontol": 22, "divbartol": 22, "divkkttol": 22, "gradient": 22, "hardwar": 22, "10900k": 22, "matric": [22, 23, 24], "experi": [22, 23, 24], "alloc": 22, "beyond": 22, "medium": 22, "concern": [22, 24], "plai": 22, "throughput": 22, "server": 22, "serial": 22, "subscript": 22, "functhread": 22, "kktthread": 22, "column": [22, 24], "accord": [22, 24], "dark": 22, "orang": 22, "yellow": 22, "green": 22, "mark": 22, "prim": 22, "obj": 22, "barr": 22, "119": 22, "charact": 22, "wide": 22, "window": [22, 25], "linux": [22, 25], "widen": 22, "nice": [22, 24], "neglig": 22, "cost": [22, 24], "suppress": 22, "val": 22, "infti": 22, "otim": 22, "alphap": 22, "alphad": 22, "lsi": 22, "pp": 22, "pivot": [22, 23], "hfi": 22, "hpert": 22, "tackl": [22, 24], "workload": 22, "resort": 22, "multiprocess": 22, "setjetjobmod": 22, "map": 22, "get_convergenceflag": 22, "Not": 22, "jetjobmod": 22, "donoth": 22, "printconsol": 22, "problemgener": 22, "problemarg": 22, "particularli": 22, "preprocess": 22, "alert": [22, 24], "anymor": 22, "somewher": 22, "2000": 22, "seriou": [22, 23], "strain": 22, "heap": 22, "heterogen": 23, "chosen": 23, "legendr": 23, "lobatto": 23, "piecewis": 23, "5th": 23, "superior": 23, "significantli": 23, "intgrate_dens": 23, "nor": 23, "decent": 23, "xtup": 23, "initialguess": 23, "segbinspac": 23, "segsperbin": 23, "replic": 23, "densiti": 23, "smooth": [23, 24], "chatter": 23, "quadrat": 23, "caveat": 23, "simpson": 23, "seventh": 23, "unnam": 23, "fourth": [23, 24], "briefli": 23, "portion": 23, "invari": 23, "gather": [23, 24], "_n": 23, "exclud": 23, "firstandlast": 23, "pair": 23, "particular": [23, 24], "anequalcon": 23, "xtu_op_sp": 23, "emphas": 23, "anotherequalcon": 23, "op0": 23, "sp1": 23, "42": [23, 24], "indcic": 23, "frontbackeqcon": 23, "x_0": 23, "x_f": 23, "sp0": 23, "eq1": [23, 24], "eq2": [23, 24], "commonli": [23, 24], "034": 23, "deltaequalcon": 23, "did": [23, 24], "aninequalcon": 23, "somewhat": 23, "cumbersom": 23, "offer": [23, 24], "addlow": 23, "luvarbound": 23, "varindex": 23, "lowerbound": 23, "upperbound": 23, "violat": 23, "lufuncbound": 23, "scalarfunc": 23, "normbound": 23, "squarednormbound": 23, "varidx": 23, "upperdeltatimebound": 23, "permut": 23, "astateobject": 23, "encompass": [23, 24], "x2_f": 23, "x2_0": 23, "x4_f": 23, "x4_0": 23, "int_": 23, "integrand": 23, "anintegrand": 23, "s_k": 23, "NOT": 23, "THE": 23, "ONE": 23, "intspvar": 23, "indirect": 23, "statparam": 23, "costatetraj": 23, "ct": 23, "refinetraj": 23, "improv": 23, "viabl": 23, "quadrupl": 23, "remesh": 23, "600": 23, "400": 23, "trajref": 23, "hood": [23, 24], "anticip": 23, "defstep": 23, "minstep": 23, "maxstep": 23, "uratebound": 23, "lboundvec": 23, "uboundvec": 23, "tutu": 23, "ti": 23, "ui": 23, "tip1": 23, "uip1": 23, "urat": 23, "piec": 23, "wise": [23, 24], "fine": [23, 24], "die": 23, "violent": 23, "promot": 23, "subtl": 23, "forget": [23, 24], "bam": 23, "mistak": [23, 24], "excess": 23, "errat": 23, "sometim": 23, "cope": 23, "conclus": 23, "tabular": [23, 25], "caus": 23, "jump": 23, "adjoin": 23, "elimin": 23, "precis": [23, 24], "convtraj": 23, "recal": 23, "reinttraj1": 23, "reinttraj2": 23, "benefit": 24, "give": 24, "domain": 24, "languag": 24, "serv": 24, "thats": 24, "tensor": 24, "won": 24, "ever": 24, "xval": 24, "lval": 24, "identii": 24, "anyth": [24, 25], "referenc": 24, "offend": 24, "x5": 24, "x42": 24, "concaten": 24, "x3": 24, "x4": 24, "contigu": 24, "treat": 24, "mirror": 24, "eigen": 24, "sort": 24, "subseg": 24, "v12": 24, "relat": 24, "meaning": 24, "rpv": 24, "rmc": 24, "rtv0": 24, "rtc": 24, "rdc": 24, "vdr0": 24, "v1pv0": 24, "inv0": 24, "rmv": 24, "rdv": 24, "power": 24, "sine": 24, "tangent": 24, "hyperbol": 24, "logarithm": 24, "exponenti": 24, "transform": 24, "r3": 24, "grav": 24, "grav2": 24, "euclidean": 24, "cube": 24, "binari": 24, "quaternion": 24, "coeffici": 24, "thrown": 24, "4th": 24, "q4": 24, "c4": 24, "drv": 24, "drc": 24, "rcrossv": 24, "rcrossc3": 24, "rcvcndc3": 24, "rcrossc4": 24, "kqpn": 24, "hamiltonian": 24, "krn": 24, "rotat": 24, "3x1": 24, "kpn": 24, "npc4": 24, "kdn": 24, "f1": 24, "f2": 24, "enclos": 24, "nhat": 24, "rtn": 24, "err": 24, "71": 24, "grow": 24, "wherea": 24, "invert": 24, "orthonorm": 24, "basi": 24, "rtncoeff": 24, "rtnmatc": 24, "3x3": 24, "rtnmatr": 24, "m2": 24, "u3": 24, "intend": 24, "eventu": 24, "reformul": 24, "boolean": 24, "bitwis": 24, "output_if_tru": 24, "output_if_fals": 24, "combo_condit": 24, "ask": 24, "predic": 24, "fact": 24, "pointless": 24, "v3": 24, "recip": 24, "longterm": 24, "inlin": 24, "wherev": 24, "encapsul": 24, "meta": 24, "funcmethod": 24, "funcclass": 24, "ctor": 24, "get_a": 24, "understand": [24, 25], "concret": 24, "rtnbasi": 24, "rv": 24, "rtntransform": 24, "rtnbasisfunc": 24, "rtnmat": 24, "u_rtn": 24, "Being": 24, "everywher": 24, "notion": 24, "temporari": 24, "recalcul": 24, "answer": 24, "vast": 24, "worri": 24, "reevalu": 24, "subexpress": 24, "margin": 24, "r_temp": 24, "expensive_tmp": 24, "answer_tmp": 24, "scipi": 24, "interp1d": 24, "vecdat": 24, "transpos": 24, "veclist": 24, "scaldat": 24, "stab": 24, "inaccur": 24, "extrapol": 24, "screen": 24, "nx": 24, "ny": 24, "800": 24, "tab2d": 24, "tabsf": 24, "dens": 24, "seem": 24, "strang": 24, "ostensibli": 24, "monolith": 24, "decompos": 24, "partial": 24, "scatter": 24, "legal": 24, "finit": 24, "vfunc": 24, "inputs": 24, "outputs": 24, "pyvfunc": 24, "sfunc": 24, "1x1": 24, "pysfunc": 24, "slow": 24, "parralleliz": 24, "inexact": 24, "situat": 24, "think": 24, "submit": 24, "happili": 24, "truli": 24, "miss": 24, "introduc": 25, "context": 25, "organ": 25, "composit": 25, "repeat": 25, "bind": 25, "raw": 25, "event": 25, "parrallel": 25, "miscellan": 25, "jet": 25}, "objects": {"": [[12, 0, 0, "-", "asset"]], "asset": [[13, 0, 0, "-", "OptimalControl"], [12, 5, 1, "", "PyMain"], [12, 5, 1, "", "SoftwareInfo"], [15, 0, 0, "-", "VectorFunctions"]], "asset.OptimalControl": [[13, 1, 1, "", "ControlModes"], [13, 1, 1, "", "FiniteDiffTable"], [13, 1, 1, "", "IntegralModes"], [13, 1, 1, "", "InterpFunction"], [13, 1, 1, "", "InterpFunction_1"], [13, 1, 1, "", "InterpFunction_3"], [13, 1, 1, "", "InterpFunction_6"], [13, 1, 1, "", "LGLInterpTable"], [13, 1, 1, "", "LinkConstraint"], [13, 1, 1, "", "LinkFlags"], [13, 1, 1, "", "LinkObjective"], [13, 1, 1, "", "ODEArguments"], [13, 1, 1, "", "OptimalControlProblem"], [13, 1, 1, "", "PhaseInterface"], [13, 1, 1, "", "PhaseRegionFlags"], [13, 1, 1, "", "RKOptions"], [13, 1, 1, "", "StateConstraint"], [13, 1, 1, "", "StateObjective"], [13, 1, 1, "", "TranscriptionModes"], [13, 5, 1, "", "strto_PhaseRegionFlag"]], "asset.OptimalControl.ControlModes": [[13, 2, 1, "", "BlockConstant"], [13, 2, 1, "", "FirstOrderSpline"], [13, 2, 1, "", "HighestOrderSpline"], [13, 2, 1, "", "NoSpline"], [13, 3, 1, "", "__eq__"], [13, 3, 1, "", "__getstate__"], [13, 3, 1, "", "__hash__"], [13, 3, 1, "", "__index__"], [13, 3, 1, "", "__init__"], [13, 3, 1, "", "__int__"], [13, 2, 1, "", "__members__"], [13, 2, 1, "", "__module__"], [13, 3, 1, "", "__ne__"], [13, 3, 1, "", "__repr__"], [13, 3, 1, "", "__setstate__"], [13, 3, 1, "", "__str__"], [13, 4, 1, "", "name"], [13, 4, 1, "", "value"]], "asset.OptimalControl.FiniteDiffTable": [[13, 3, 1, "", "__init__"], [13, 2, 1, "", "__module__"], [13, 3, 1, "", "all_derivs"], [13, 3, 1, "", "deriv"]], "asset.OptimalControl.IntegralModes": [[13, 2, 1, "", "BaseIntegral"], [13, 2, 1, "", "TrapIntegral"], [13, 3, 1, "", "__eq__"], [13, 3, 1, "", "__getstate__"], [13, 3, 1, "", "__hash__"], [13, 3, 1, "", "__index__"], [13, 3, 1, "", "__init__"], [13, 3, 1, "", "__int__"], [13, 2, 1, "", "__members__"], [13, 2, 1, "", "__module__"], [13, 3, 1, "", "__ne__"], [13, 3, 1, "", "__repr__"], [13, 3, 1, "", "__setstate__"], [13, 3, 1, "", "__str__"], [13, 4, 1, "", "name"], [13, 4, 1, "", "value"]], "asset.OptimalControl.InterpFunction": [[13, 3, 1, "", "IRows"], [13, 3, 1, "", "ORows"], [13, 3, 1, "", "__call__"], [13, 3, 1, "", "__init__"], [13, 2, 1, "", "__module__"], [13, 3, 1, "", "adjointgradient"], [13, 3, 1, "", "adjointhessian"], [13, 3, 1, "", "compute"], [13, 3, 1, "", "computeall"], [13, 3, 1, "", "jacobian"], [13, 3, 1, "", "name"], [13, 3, 1, "", "rpt"], [13, 3, 1, "", "vf"]], "asset.OptimalControl.InterpFunction_1": [[13, 3, 1, "", "IRows"], [13, 3, 1, "", "ORows"], [13, 3, 1, "", "__call__"], [13, 3, 1, "", "__init__"], [13, 2, 1, "", "__module__"], [13, 3, 1, "", "adjointgradient"], [13, 3, 1, "", "adjointhessian"], [13, 3, 1, "", "compute"], [13, 3, 1, "", "computeall"], [13, 3, 1, "", "jacobian"], [13, 3, 1, "", "name"], [13, 3, 1, "", "rpt"], [13, 3, 1, "", "sf"], [13, 3, 1, "", "vf"]], "asset.OptimalControl.InterpFunction_3": [[13, 3, 1, "", "IRows"], [13, 3, 1, "", "ORows"], [13, 3, 1, "", "__call__"], [13, 3, 1, "", "__init__"], [13, 2, 1, "", "__module__"], [13, 3, 1, "", "adjointgradient"], [13, 3, 1, "", "adjointhessian"], [13, 3, 1, "", "compute"], [13, 3, 1, "", "computeall"], [13, 3, 1, "", "jacobian"], [13, 3, 1, "", "name"], [13, 3, 1, "", "rpt"], [13, 3, 1, "", "vf"]], "asset.OptimalControl.InterpFunction_6": [[13, 3, 1, "", "IRows"], [13, 3, 1, "", "ORows"], [13, 3, 1, "", "__call__"], [13, 3, 1, "", "__init__"], [13, 2, 1, "", "__module__"], [13, 3, 1, "", "adjointgradient"], [13, 3, 1, "", "adjointhessian"], [13, 3, 1, "", "compute"], [13, 3, 1, "", "computeall"], [13, 3, 1, "", "jacobian"], [13, 3, 1, "", "name"], [13, 3, 1, "", "rpt"], [13, 3, 1, "", "vf"]], "asset.OptimalControl.LGLInterpTable": [[13, 3, 1, "", "ErrorIntegral"], [13, 3, 1, "", "InterpNonDim"], [13, 3, 1, "", "InterpRange"], [13, 3, 1, "", "InterpWholeRange"], [13, 3, 1, "", "Interpolate"], [13, 3, 1, "", "InterpolateDeriv"], [13, 4, 1, "", "T0"], [13, 4, 1, "", "TF"], [13, 3, 1, "", "__call__"], [13, 3, 1, "", "__init__"], [13, 2, 1, "", "__module__"], [13, 3, 1, "", "getTablePtr"], [13, 3, 1, "", "loadEvenData"], [13, 3, 1, "", "loadUnevenData"], [13, 3, 1, "", "makePeriodic"]], "asset.OptimalControl.LinkConstraint": [[13, 3, 1, "", "__init__"], [13, 2, 1, "", "__module__"]], "asset.OptimalControl.LinkFlags": [[13, 2, 1, "", "BackToBack"], [13, 2, 1, "", "BackToFront"], [13, 2, 1, "", "BackTwoToTwoFront"], [13, 2, 1, "", "FrontToBack"], [13, 2, 1, "", "FrontToFront"], [13, 2, 1, "", "FrontTwoToTwoBack"], [13, 2, 1, "", "LinkParams"], [13, 2, 1, "", "ParamsToParams"], [13, 2, 1, "", "PathToPath"], [13, 3, 1, "", "__eq__"], [13, 3, 1, "", "__getstate__"], [13, 3, 1, "", "__hash__"], [13, 3, 1, "", "__index__"], [13, 3, 1, "", "__init__"], [13, 3, 1, "", "__int__"], [13, 2, 1, "", "__members__"], [13, 2, 1, "", "__module__"], [13, 3, 1, "", "__ne__"], [13, 3, 1, "", "__repr__"], [13, 3, 1, "", "__setstate__"], [13, 3, 1, "", "__str__"], [13, 4, 1, "", "name"], [13, 4, 1, "", "value"]], "asset.OptimalControl.LinkObjective": [[13, 3, 1, "", "__init__"], [13, 2, 1, "", "__module__"]], "asset.OptimalControl.ODEArguments": [[13, 3, 1, "", "IRows"], [13, 3, 1, "", "ORows"], [13, 3, 1, "", "PVar"], [13, 3, 1, "", "PVec"], [13, 3, 1, "", "TVar"], [13, 3, 1, "", "UVar"], [13, 3, 1, "", "UVec"], [13, 3, 1, "", "XVar"], [13, 3, 1, "", "XVec"], [13, 3, 1, "", "XtVec"], [13, 3, 1, "", "__call__"], [13, 3, 1, "", "__init__"], [13, 2, 1, "", "__module__"], [13, 3, 1, "", "adjointgradient"], [13, 3, 1, "", "adjointhessian"], [13, 3, 1, "", "compute"], [13, 3, 1, "", "computeall"], [13, 3, 1, "", "jacobian"], [13, 3, 1, "", "name"], [13, 3, 1, "", "rpt"], [13, 3, 1, "", "vf"]], "asset.OptimalControl.OptimalControlProblem": [[13, 3, 1, "", "Phase"], [13, 4, 1, "", "Phases"], [13, 3, 1, "", "__init__"], [13, 2, 1, "", "__module__"], [13, 3, 1, "", "addDirectLinkEqualCon"], [13, 3, 1, "", "addForwardLinkEqualCon"], [13, 3, 1, "", "addLinkEqualCon"], [13, 3, 1, "", "addLinkInequalCon"], [13, 3, 1, "", "addLinkObjective"], [13, 3, 1, "", "addLinkParamEqualCon"], [13, 3, 1, "", "addLinkParamInequalCon"], [13, 3, 1, "", "addLinkParamObjective"], [13, 3, 1, "", "addPhase"], [13, 3, 1, "", "getPhaseNum"], [13, 3, 1, "", "removeLinkEqualCon"], [13, 3, 1, "", "removeLinkInequalCon"], [13, 3, 1, "", "removeLinkObjective"], [13, 3, 1, "", "removePhase"], [13, 3, 1, "", "returnLinkParams"], [13, 3, 1, "", "setLinkParams"], [13, 3, 1, "", "transcribe"]], "asset.OptimalControl.PhaseInterface": [[13, 3, 1, "", "__init__"], [13, 2, 1, "", "__module__"], [13, 3, 1, "", "addBoundaryValue"], [13, 3, 1, "", "addBoundaryValues"], [13, 3, 1, "", "addDeltaTimeEqualCon"], [13, 3, 1, "", "addDeltaTimeObjective"], [13, 3, 1, "", "addDeltaVarEqualCon"], [13, 3, 1, "", "addDeltaVarObjective"], [13, 3, 1, "", "addEqualCon"], [13, 3, 1, "", "addInequalCon"], [13, 3, 1, "", "addIntegralObjective"], [13, 3, 1, "", "addIntegralParamFunction"], [13, 3, 1, "", "addLUFuncBound"], [13, 3, 1, "", "addLUNormBound"], [13, 3, 1, "", "addLUSquaredNormBound"], [13, 3, 1, "", "addLUVarBound"], [13, 3, 1, "", "addLUVarBounds"], [13, 3, 1, "", "addLowerDeltaTimeBound"], [13, 3, 1, "", "addLowerDeltaVarBound"], [13, 3, 1, "", "addLowerFuncBound"], [13, 3, 1, "", "addLowerNormBound"], [13, 3, 1, "", "addLowerSquaredNormBound"], [13, 3, 1, "", "addLowerVarBound"], [13, 3, 1, "", "addPeriodicityCon"], [13, 3, 1, "", "addStateObjective"], [13, 3, 1, "", "addUpperDeltaTimeBound"], [13, 3, 1, "", "addUpperDeltaVarBound"], [13, 3, 1, "", "addUpperFuncBound"], [13, 3, 1, "", "addUpperNormBound"], [13, 3, 1, "", "addUpperSquaredNormBound"], [13, 3, 1, "", "addUpperVarBound"], [13, 3, 1, "", "addValueLock"], [13, 3, 1, "", "addValueObjective"], [13, 3, 1, "", "enable_vectorization"], [13, 3, 1, "", "refineTrajEqual"], [13, 3, 1, "", "refineTrajManual"], [13, 3, 1, "", "removeEqualCon"], [13, 3, 1, "", "removeInequalCon"], [13, 3, 1, "", "removeIntegralObjective"], [13, 3, 1, "", "removeIntegralParamFunction"], [13, 3, 1, "", "removeStateObjective"], [13, 3, 1, "", "returnCostateTraj"], [13, 3, 1, "", "returnEqualConLmults"], [13, 3, 1, "", "returnInequalConLmults"], [13, 3, 1, "", "returnStaticParams"], [13, 3, 1, "", "returnTraj"], [13, 3, 1, "", "returnTrajRange"], [13, 3, 1, "", "returnTrajRangeND"], [13, 3, 1, "", "returnTrajTable"], [13, 3, 1, "", "setControlMode"], [13, 3, 1, "", "setIntegralMode"], [13, 3, 1, "", "setStaticParams"], [13, 3, 1, "", "setTraj"], [13, 3, 1, "", "subStaticParams"], [13, 3, 1, "", "subVariable"], [13, 3, 1, "", "subVariables"], [13, 3, 1, "", "switchTranscriptionMode"], [13, 3, 1, "", "test_threads"], [13, 3, 1, "", "transcribe"]], "asset.OptimalControl.PhaseRegionFlags": [[13, 2, 1, "", "Back"], [13, 2, 1, "", "BackandFront"], [13, 2, 1, "", "Front"], [13, 2, 1, "", "FrontandBack"], [13, 2, 1, "", "InnerPath"], [13, 2, 1, "", "NodalPath"], [13, 2, 1, "", "ODEParams"], [13, 2, 1, "", "PairWisePath"], [13, 2, 1, "", "Params"], [13, 2, 1, "", "Path"], [13, 2, 1, "", "StaticParams"], [13, 3, 1, "", "__eq__"], [13, 3, 1, "", "__getstate__"], [13, 3, 1, "", "__hash__"], [13, 3, 1, "", "__index__"], [13, 3, 1, "", "__init__"], [13, 3, 1, "", "__int__"], [13, 2, 1, "", "__members__"], [13, 2, 1, "", "__module__"], [13, 3, 1, "", "__ne__"], [13, 3, 1, "", "__repr__"], [13, 3, 1, "", "__setstate__"], [13, 3, 1, "", "__str__"], [13, 4, 1, "", "name"], [13, 4, 1, "", "value"]], "asset.OptimalControl.RKOptions": [[13, 2, 1, "", "DOPRI54"], [13, 2, 1, "", "DOPRI87"], [13, 2, 1, "", "RK4"], [13, 3, 1, "", "__eq__"], [13, 3, 1, "", "__getstate__"], [13, 3, 1, "", "__hash__"], [13, 3, 1, "", "__index__"], [13, 3, 1, "", "__init__"], [13, 3, 1, "", "__int__"], [13, 2, 1, "", "__members__"], [13, 2, 1, "", "__module__"], [13, 3, 1, "", "__ne__"], [13, 3, 1, "", "__repr__"], [13, 3, 1, "", "__setstate__"], [13, 3, 1, "", "__str__"], [13, 4, 1, "", "name"], [13, 4, 1, "", "value"]], "asset.OptimalControl.StateConstraint": [[13, 3, 1, "", "__init__"], [13, 2, 1, "", "__module__"]], "asset.OptimalControl.StateObjective": [[13, 3, 1, "", "__init__"], [13, 2, 1, "", "__module__"]], "asset.OptimalControl.TranscriptionModes": [[13, 2, 1, "", "CentralShooting"], [13, 2, 1, "", "LGL3"], [13, 2, 1, "", "LGL5"], [13, 2, 1, "", "LGL7"], [13, 2, 1, "", "Trapezoidal"], [13, 3, 1, "", "__eq__"], [13, 3, 1, "", "__getstate__"], [13, 3, 1, "", "__hash__"], [13, 3, 1, "", "__index__"], [13, 3, 1, "", "__init__"], [13, 3, 1, "", "__int__"], [13, 2, 1, "", "__members__"], [13, 2, 1, "", "__module__"], [13, 3, 1, "", "__ne__"], [13, 3, 1, "", "__repr__"], [13, 3, 1, "", "__setstate__"], [13, 3, 1, "", "__str__"], [13, 4, 1, "", "name"], [13, 4, 1, "", "value"]], "asset.VectorFunctions": [[15, 1, 1, "", "Arguments"], [15, 1, 1, "", "ColMatrix"], [15, 1, 1, "", "Comparative"], [15, 1, 1, "", "Conditional"], [15, 1, 1, "", "ConstantScalar"], [15, 1, 1, "", "ConstantVector"], [15, 5, 1, "", "DynamicStackTest"], [15, 1, 1, "", "Element"], [15, 1, 1, "", "InterpTable1D"], [15, 1, 1, "", "InterpTable2D"], [15, 1, 1, "", "PyScalarFunction"], [15, 1, 1, "", "PyVectorFunction"], [15, 1, 1, "", "RowMatrix"], [15, 5, 1, "", "ScalarDynamicStackTest"], [15, 1, 1, "", "ScalarFunction"], [15, 5, 1, "", "ScalarRootFinder"], [15, 1, 1, "", "Segment"], [15, 1, 1, "", "Segment2"], [15, 1, 1, "", "Segment3"], [15, 5, 1, "", "Stack"], [15, 5, 1, "", "StackScalar"], [15, 5, 1, "", "Sum"], [15, 5, 1, "", "SumElems"], [15, 5, 1, "", "SumScalar"], [15, 1, 1, "", "VectorFunction"], [15, 5, 1, "", "abs"], [15, 5, 1, "", "arccos"], [15, 5, 1, "", "arccosh"], [15, 5, 1, "", "arcsin"], [15, 5, 1, "", "arcsinh"], [15, 5, 1, "", "arctan"], [15, 5, 1, "", "arctan2"], [15, 5, 1, "", "arctanh"], [15, 5, 1, "", "cos"], [15, 5, 1, "", "cosh"], [15, 5, 1, "", "cross"], [15, 5, 1, "", "cubed_norm"], [15, 5, 1, "", "cwiseProduct"], [15, 5, 1, "", "cwiseQuotient"], [15, 5, 1, "", "divtest"], [15, 5, 1, "", "dot"], [15, 5, 1, "", "doublecross"], [15, 5, 1, "", "exp"], [15, 5, 1, "", "ifelse"], [15, 5, 1, "", "inverse_cubed_norm"], [15, 5, 1, "", "inverse_four_norm"], [15, 5, 1, "", "inverse_norm"], [15, 5, 1, "", "inverse_squared_norm"], [15, 5, 1, "", "log"], [15, 5, 1, "", "matmul"], [15, 5, 1, "", "norm"], [15, 5, 1, "", "normalize"], [15, 5, 1, "", "normalized"], [15, 5, 1, "", "normalized_power2"], [15, 5, 1, "", "normalized_power3"], [15, 5, 1, "", "normalized_power4"], [15, 5, 1, "", "normalized_power5"], [15, 5, 1, "", "pow"], [15, 5, 1, "", "quatProduct"], [15, 5, 1, "", "quatRotate"], [15, 5, 1, "", "sign"], [15, 5, 1, "", "sin"], [15, 5, 1, "", "sinh"], [15, 5, 1, "", "sqrt"], [15, 5, 1, "", "squared"], [15, 5, 1, "", "squared_norm"], [15, 5, 1, "", "stack"], [15, 5, 1, "", "stack_scalar"], [15, 5, 1, "", "sum"], [15, 5, 1, "", "tan"], [15, 5, 1, "", "tanh"]], "asset.VectorFunctions.Arguments": [[15, 3, 1, "", "Constant"], [15, 3, 1, "", "IRows"], [15, 3, 1, "", "ORows"], [15, 3, 1, "", "__add__"], [15, 2, 1, "", "__array_ufunc__"], [15, 3, 1, "", "__call__"], [15, 3, 1, "", "__getitem__"], [15, 3, 1, "", "__init__"], [15, 2, 1, "", "__module__"], [15, 3, 1, "", "__mul__"], [15, 3, 1, "", "__neg__"], [15, 3, 1, "", "__radd__"], [15, 3, 1, "", "__rmul__"], [15, 3, 1, "", "__rsub__"], [15, 3, 1, "", "__sub__"], [15, 3, 1, "", "__truediv__"], [15, 3, 1, "", "adjointgradient"], [15, 3, 1, "", "adjointhessian"], [15, 3, 1, "", "apply"], [15, 3, 1, "", "coeff"], [15, 3, 1, "", "compute"], [15, 3, 1, "", "computeall"], [15, 3, 1, "", "cross"], [15, 3, 1, "", "cubed_norm"], [15, 3, 1, "", "cwiseProduct"], [15, 3, 1, "", "cwiseQuotient"], [15, 3, 1, "", "dot"], [15, 3, 1, "", "head"], [15, 3, 1, "", "head2"], [15, 3, 1, "", "head3"], [15, 3, 1, "", "head_2"], [15, 3, 1, "", "head_3"], [15, 3, 1, "", "inverse_cubed_norm"], [15, 3, 1, "", "inverse_four_norm"], [15, 3, 1, "", "inverse_norm"], [15, 3, 1, "", "inverse_squared_norm"], [15, 3, 1, "", "jacobian"], [15, 3, 1, "", "name"], [15, 3, 1, "", "norm"], [15, 3, 1, "", "normalized"], [15, 3, 1, "", "normalized_power2"], [15, 3, 1, "", "normalized_power3"], [15, 3, 1, "", "normalized_power4"], [15, 3, 1, "", "normalized_power5"], [15, 3, 1, "", "padded"], [15, 3, 1, "", "padded_lower"], [15, 3, 1, "", "padded_upper"], [15, 3, 1, "", "rpt"], [15, 3, 1, "", "segment"], [15, 3, 1, "", "segment2"], [15, 3, 1, "", "segment3"], [15, 3, 1, "", "segment_2"], [15, 3, 1, "", "segment_3"], [15, 3, 1, "", "squared_norm"], [15, 3, 1, "", "sum"], [15, 3, 1, "", "tail"], [15, 3, 1, "", "tail2"], [15, 3, 1, "", "tail3"], [15, 3, 1, "", "tail_2"], [15, 3, 1, "", "tail_3"], [15, 3, 1, "", "tolist"], [15, 3, 1, "", "vf"]], "asset.VectorFunctions.ColMatrix": [[15, 3, 1, "", "__add__"], [15, 2, 1, "", "__array_ufunc__"], [15, 3, 1, "", "__init__"], [15, 2, 1, "", "__module__"], [15, 3, 1, "", "__mul__"], [15, 3, 1, "", "__radd__"], [15, 3, 1, "", "__rmul__"], [15, 3, 1, "", "inverse"], [15, 3, 1, "", "vf"]], "asset.VectorFunctions.Comparative": [[15, 3, 1, "", "__init__"], [15, 2, 1, "", "__module__"], [15, 3, 1, "", "compute"], [15, 3, 1, "", "max"], [15, 3, 1, "", "min"]], "asset.VectorFunctions.Conditional": [[15, 3, 1, "", "__and__"], [15, 3, 1, "", "__init__"], [15, 2, 1, "", "__module__"], [15, 3, 1, "", "__or__"], [15, 3, 1, "", "compute"], [15, 3, 1, "", "ifelse"]], "asset.VectorFunctions.ConstantScalar": [[15, 3, 1, "", "IRows"], [15, 3, 1, "", "ORows"], [15, 3, 1, "", "__call__"], [15, 3, 1, "", "__init__"], [15, 2, 1, "", "__module__"], [15, 3, 1, "", "adjointgradient"], [15, 3, 1, "", "adjointhessian"], [15, 3, 1, "", "compute"], [15, 3, 1, "", "computeall"], [15, 3, 1, "", "jacobian"], [15, 3, 1, "", "name"], [15, 3, 1, "", "rpt"], [15, 3, 1, "", "sf"], [15, 3, 1, "", "vf"]], "asset.VectorFunctions.ConstantVector": [[15, 3, 1, "", "IRows"], [15, 3, 1, "", "ORows"], [15, 3, 1, "", "__call__"], [15, 3, 1, "", "__init__"], [15, 2, 1, "", "__module__"], [15, 3, 1, "", "adjointgradient"], [15, 3, 1, "", "adjointhessian"], [15, 3, 1, "", "compute"], [15, 3, 1, "", "computeall"], [15, 3, 1, "", "jacobian"], [15, 3, 1, "", "name"], [15, 3, 1, "", "rpt"], [15, 3, 1, "", "vf"]], "asset.VectorFunctions.Element": [[15, 3, 1, "", "IRows"], [15, 3, 1, "", "ORows"], [15, 3, 1, "", "__abs__"], [15, 3, 1, "", "__add__"], [15, 2, 1, "", "__array_ufunc__"], [15, 3, 1, "", "__call__"], [15, 3, 1, "", "__ge__"], [15, 3, 1, "", "__getitem__"], [15, 3, 1, "", "__gt__"], [15, 3, 1, "", "__init__"], [15, 3, 1, "", "__le__"], [15, 3, 1, "", "__lt__"], [15, 2, 1, "", "__module__"], [15, 3, 1, "", "__mul__"], [15, 3, 1, "", "__neg__"], [15, 3, 1, "", "__pow__"], [15, 3, 1, "", "__radd__"], [15, 3, 1, "", "__rgt__"], [15, 3, 1, "", "__rlt__"], [15, 3, 1, "", "__rmul__"], [15, 3, 1, "", "__rsub__"], [15, 3, 1, "", "__rtruediv__"], [15, 3, 1, "", "__sub__"], [15, 3, 1, "", "__truediv__"], [15, 3, 1, "", "adjointgradient"], [15, 3, 1, "", "adjointhessian"], [15, 3, 1, "", "apply"], [15, 3, 1, "", "arccos"], [15, 3, 1, "", "arccosh"], [15, 3, 1, "", "arcsin"], [15, 3, 1, "", "arcsinh"], [15, 3, 1, "", "arctan"], [15, 3, 1, "", "arctanh"], [15, 3, 1, "", "coeff"], [15, 3, 1, "", "compute"], [15, 3, 1, "", "computeall"], [15, 3, 1, "", "cos"], [15, 3, 1, "", "cosh"], [15, 3, 1, "", "cwiseProduct"], [15, 3, 1, "", "cwiseQuotient"], [15, 3, 1, "", "dot"], [15, 3, 1, "", "exp"], [15, 3, 1, "", "head"], [15, 3, 1, "", "jacobian"], [15, 3, 1, "", "log"], [15, 3, 1, "", "name"], [15, 3, 1, "", "padded"], [15, 3, 1, "", "padded_lower"], [15, 3, 1, "", "padded_upper"], [15, 3, 1, "", "pow"], [15, 3, 1, "", "rpt"], [15, 3, 1, "", "segment"], [15, 3, 1, "", "sf"], [15, 3, 1, "", "sign"], [15, 3, 1, "", "sin"], [15, 3, 1, "", "sinh"], [15, 3, 1, "", "sqrt"], [15, 3, 1, "", "squared"], [15, 3, 1, "", "tail"], [15, 3, 1, "", "tan"], [15, 3, 1, "", "tanh"], [15, 3, 1, "", "tolist"], [15, 3, 1, "", "vf"]], "asset.VectorFunctions.InterpTable1D": [[15, 4, 1, "", "ThrowOutOfBounds"], [15, 4, 1, "", "WarnOutOfBounds"], [15, 3, 1, "", "__call__"], [15, 3, 1, "", "__init__"], [15, 2, 1, "", "__module__"], [15, 3, 1, "", "interp"], [15, 3, 1, "", "interp_deriv1"], [15, 3, 1, "", "interp_deriv2"], [15, 3, 1, "", "sf"], [15, 3, 1, "", "vf"]], "asset.VectorFunctions.InterpTable2D": [[15, 4, 1, "", "ThrowOutOfBounds"], [15, 4, 1, "", "WarnOutOfBounds"], [15, 3, 1, "", "__call__"], [15, 3, 1, "", "__init__"], [15, 2, 1, "", "__module__"], [15, 3, 1, "", "find_elem"], [15, 3, 1, "", "interp"], [15, 3, 1, "", "interp_deriv1"], [15, 3, 1, "", "interp_deriv2"], [15, 3, 1, "", "sf"], [15, 3, 1, "", "vf"]], "asset.VectorFunctions.PyScalarFunction": [[15, 3, 1, "", "IRows"], [15, 3, 1, "", "ORows"], [15, 3, 1, "", "__call__"], [15, 3, 1, "", "__init__"], [15, 2, 1, "", "__module__"], [15, 3, 1, "", "adjointgradient"], [15, 3, 1, "", "adjointhessian"], [15, 3, 1, "", "compute"], [15, 3, 1, "", "computeall"], [15, 3, 1, "", "jacobian"], [15, 3, 1, "", "name"], [15, 3, 1, "", "rpt"], [15, 3, 1, "", "sf"], [15, 3, 1, "", "vf"]], "asset.VectorFunctions.PyVectorFunction": [[15, 3, 1, "", "IRows"], [15, 3, 1, "", "ORows"], [15, 3, 1, "", "__call__"], [15, 3, 1, "", "__init__"], [15, 2, 1, "", "__module__"], [15, 3, 1, "", "adjointgradient"], [15, 3, 1, "", "adjointhessian"], [15, 3, 1, "", "compute"], [15, 3, 1, "", "computeall"], [15, 3, 1, "", "jacobian"], [15, 3, 1, "", "name"], [15, 3, 1, "", "rpt"], [15, 3, 1, "", "vf"]], "asset.VectorFunctions.RowMatrix": [[15, 3, 1, "", "__add__"], [15, 2, 1, "", "__array_ufunc__"], [15, 3, 1, "", "__init__"], [15, 2, 1, "", "__module__"], [15, 3, 1, "", "__mul__"], [15, 3, 1, "", "__radd__"], [15, 3, 1, "", "__rmul__"], [15, 3, 1, "", "inverse"], [15, 3, 1, "", "vf"]], "asset.VectorFunctions.ScalarFunction": [[15, 3, 1, "", "IRows"], [15, 3, 1, "", "ORows"], [15, 3, 1, "", "SpeedTest"], [15, 3, 1, "", "SuperTest"], [15, 3, 1, "", "__abs__"], [15, 3, 1, "", "__add__"], [15, 2, 1, "", "__array_ufunc__"], [15, 3, 1, "", "__call__"], [15, 3, 1, "", "__ge__"], [15, 3, 1, "", "__getitem__"], [15, 3, 1, "", "__gt__"], [15, 3, 1, "", "__init__"], [15, 3, 1, "", "__le__"], [15, 3, 1, "", "__lt__"], [15, 2, 1, "", "__module__"], [15, 3, 1, "", "__mul__"], [15, 3, 1, "", "__neg__"], [15, 3, 1, "", "__pow__"], [15, 3, 1, "", "__radd__"], [15, 3, 1, "", "__rgt__"], [15, 3, 1, "", "__rlt__"], [15, 3, 1, "", "__rmul__"], [15, 3, 1, "", "__rsub__"], [15, 3, 1, "", "__rtruediv__"], [15, 3, 1, "", "__sub__"], [15, 3, 1, "", "__truediv__"], [15, 3, 1, "", "adjointgradient"], [15, 3, 1, "", "adjointhessian"], [15, 3, 1, "", "apply"], [15, 3, 1, "", "arccos"], [15, 3, 1, "", "arccosh"], [15, 3, 1, "", "arcsin"], [15, 3, 1, "", "arcsinh"], [15, 3, 1, "", "arctan"], [15, 3, 1, "", "arctanh"], [15, 3, 1, "", "coeff"], [15, 3, 1, "", "compute"], [15, 3, 1, "", "computeall"], [15, 3, 1, "", "cos"], [15, 3, 1, "", "cosh"], [15, 3, 1, "", "cwiseProduct"], [15, 3, 1, "", "cwiseQuotient"], [15, 3, 1, "", "dot"], [15, 3, 1, "", "eval"], [15, 3, 1, "", "exp"], [15, 3, 1, "", "head"], [15, 3, 1, "", "input_domain"], [15, 3, 1, "", "is_linear"], [15, 3, 1, "", "jacobian"], [15, 3, 1, "", "log"], [15, 3, 1, "", "name"], [15, 3, 1, "", "padded"], [15, 3, 1, "", "padded_lower"], [15, 3, 1, "", "padded_upper"], [15, 3, 1, "", "pow"], [15, 3, 1, "", "rpt"], [15, 3, 1, "", "segment"], [15, 3, 1, "", "sf"], [15, 3, 1, "", "sign"], [15, 3, 1, "", "sin"], [15, 3, 1, "", "sinh"], [15, 3, 1, "", "sqrt"], [15, 3, 1, "", "squared"], [15, 3, 1, "", "tail"], [15, 3, 1, "", "tan"], [15, 3, 1, "", "tanh"], [15, 3, 1, "", "vf"]], "asset.VectorFunctions.Segment": [[15, 3, 1, "", "IRows"], [15, 3, 1, "", "ORows"], [15, 3, 1, "", "__add__"], [15, 2, 1, "", "__array_ufunc__"], [15, 3, 1, "", "__call__"], [15, 3, 1, "", "__getitem__"], [15, 3, 1, "", "__init__"], [15, 2, 1, "", "__module__"], [15, 3, 1, "", "__mul__"], [15, 3, 1, "", "__neg__"], [15, 3, 1, "", "__radd__"], [15, 3, 1, "", "__rmul__"], [15, 3, 1, "", "__rsub__"], [15, 3, 1, "", "__sub__"], [15, 3, 1, "", "__truediv__"], [15, 3, 1, "", "adjointgradient"], [15, 3, 1, "", "adjointhessian"], [15, 3, 1, "", "apply"], [15, 3, 1, "", "coeff"], [15, 3, 1, "", "compute"], [15, 3, 1, "", "computeall"], [15, 3, 1, "", "cross"], [15, 3, 1, "", "cubed_norm"], [15, 3, 1, "", "cwiseProduct"], [15, 3, 1, "", "cwiseQuotient"], [15, 3, 1, "", "dot"], [15, 3, 1, "", "head"], [15, 3, 1, "", "head2"], [15, 3, 1, "", "head3"], [15, 3, 1, "", "head_2"], [15, 3, 1, "", "head_3"], [15, 3, 1, "", "inverse_cubed_norm"], [15, 3, 1, "", "inverse_four_norm"], [15, 3, 1, "", "inverse_norm"], [15, 3, 1, "", "inverse_squared_norm"], [15, 3, 1, "", "jacobian"], [15, 3, 1, "", "name"], [15, 3, 1, "", "norm"], [15, 3, 1, "", "normalized"], [15, 3, 1, "", "normalized_power2"], [15, 3, 1, "", "normalized_power3"], [15, 3, 1, "", "normalized_power4"], [15, 3, 1, "", "normalized_power5"], [15, 3, 1, "", "padded"], [15, 3, 1, "", "padded_lower"], [15, 3, 1, "", "padded_upper"], [15, 3, 1, "", "rpt"], [15, 3, 1, "", "segment"], [15, 3, 1, "", "segment2"], [15, 3, 1, "", "segment3"], [15, 3, 1, "", "segment_2"], [15, 3, 1, "", "segment_3"], [15, 3, 1, "", "squared_norm"], [15, 3, 1, "", "sum"], [15, 3, 1, "", "tail"], [15, 3, 1, "", "tail2"], [15, 3, 1, "", "tail3"], [15, 3, 1, "", "tail_2"], [15, 3, 1, "", "tail_3"], [15, 3, 1, "", "tolist"], [15, 3, 1, "", "vf"]], "asset.VectorFunctions.Segment2": [[15, 3, 1, "", "IRows"], [15, 3, 1, "", "ORows"], [15, 3, 1, "", "__add__"], [15, 2, 1, "", "__array_ufunc__"], [15, 3, 1, "", "__call__"], [15, 3, 1, "", "__getitem__"], [15, 3, 1, "", "__init__"], [15, 2, 1, "", "__module__"], [15, 3, 1, "", "__mul__"], [15, 3, 1, "", "__neg__"], [15, 3, 1, "", "__radd__"], [15, 3, 1, "", "__rmul__"], [15, 3, 1, "", "__rsub__"], [15, 3, 1, "", "__sub__"], [15, 3, 1, "", "__truediv__"], [15, 3, 1, "", "adjointgradient"], [15, 3, 1, "", "adjointhessian"], [15, 3, 1, "", "apply"], [15, 3, 1, "", "coeff"], [15, 3, 1, "", "compute"], [15, 3, 1, "", "computeall"], [15, 3, 1, "", "cubed_norm"], [15, 3, 1, "", "cwiseProduct"], [15, 3, 1, "", "cwiseQuotient"], [15, 3, 1, "", "dot"], [15, 3, 1, "", "head"], [15, 3, 1, "", "inverse_cubed_norm"], [15, 3, 1, "", "inverse_four_norm"], [15, 3, 1, "", "inverse_norm"], [15, 3, 1, "", "inverse_squared_norm"], [15, 3, 1, "", "jacobian"], [15, 3, 1, "", "name"], [15, 3, 1, "", "norm"], [15, 3, 1, "", "normalized"], [15, 3, 1, "", "normalized_power2"], [15, 3, 1, "", "normalized_power3"], [15, 3, 1, "", "normalized_power4"], [15, 3, 1, "", "normalized_power5"], [15, 3, 1, "", "padded"], [15, 3, 1, "", "padded_lower"], [15, 3, 1, "", "padded_upper"], [15, 3, 1, "", "rpt"], [15, 3, 1, "", "segment"], [15, 3, 1, "", "squared_norm"], [15, 3, 1, "", "sum"], [15, 3, 1, "", "tail"], [15, 3, 1, "", "tolist"], [15, 3, 1, "", "vf"]], "asset.VectorFunctions.Segment3": [[15, 3, 1, "", "IRows"], [15, 3, 1, "", "ORows"], [15, 3, 1, "", "__add__"], [15, 2, 1, "", "__array_ufunc__"], [15, 3, 1, "", "__call__"], [15, 3, 1, "", "__getitem__"], [15, 3, 1, "", "__init__"], [15, 2, 1, "", "__module__"], [15, 3, 1, "", "__mul__"], [15, 3, 1, "", "__neg__"], [15, 3, 1, "", "__radd__"], [15, 3, 1, "", "__rmul__"], [15, 3, 1, "", "__rsub__"], [15, 3, 1, "", "__sub__"], [15, 3, 1, "", "__truediv__"], [15, 3, 1, "", "adjointgradient"], [15, 3, 1, "", "adjointhessian"], [15, 3, 1, "", "apply"], [15, 3, 1, "", "coeff"], [15, 3, 1, "", "compute"], [15, 3, 1, "", "computeall"], [15, 3, 1, "", "cross"], [15, 3, 1, "", "cubed_norm"], [15, 3, 1, "", "cwiseProduct"], [15, 3, 1, "", "cwiseQuotient"], [15, 3, 1, "", "dot"], [15, 3, 1, "", "head"], [15, 3, 1, "", "head2"], [15, 3, 1, "", "head_2"], [15, 3, 1, "", "inverse_cubed_norm"], [15, 3, 1, "", "inverse_four_norm"], [15, 3, 1, "", "inverse_norm"], [15, 3, 1, "", "inverse_squared_norm"], [15, 3, 1, "", "jacobian"], [15, 3, 1, "", "name"], [15, 3, 1, "", "norm"], [15, 3, 1, "", "normalized"], [15, 3, 1, "", "normalized_power2"], [15, 3, 1, "", "normalized_power3"], [15, 3, 1, "", "normalized_power4"], [15, 3, 1, "", "normalized_power5"], [15, 3, 1, "", "padded"], [15, 3, 1, "", "padded_lower"], [15, 3, 1, "", "padded_upper"], [15, 3, 1, "", "rpt"], [15, 3, 1, "", "segment"], [15, 3, 1, "", "segment2"], [15, 3, 1, "", "segment_2"], [15, 3, 1, "", "squared_norm"], [15, 3, 1, "", "sum"], [15, 3, 1, "", "tail"], [15, 3, 1, "", "tail2"], [15, 3, 1, "", "tail_2"], [15, 3, 1, "", "tolist"], [15, 3, 1, "", "vf"]], "asset.VectorFunctions.VectorFunction": [[15, 3, 1, "", "IRows"], [15, 3, 1, "", "ORows"], [15, 3, 1, "", "SpeedTest"], [15, 3, 1, "", "SuperTest"], [15, 3, 1, "", "__add__"], [15, 2, 1, "", "__array_ufunc__"], [15, 3, 1, "", "__call__"], [15, 3, 1, "", "__getitem__"], [15, 3, 1, "", "__init__"], [15, 2, 1, "", "__module__"], [15, 3, 1, "", "__mul__"], [15, 3, 1, "", "__neg__"], [15, 3, 1, "", "__radd__"], [15, 3, 1, "", "__rmul__"], [15, 3, 1, "", "__rsub__"], [15, 3, 1, "", "__sub__"], [15, 3, 1, "", "__truediv__"], [15, 3, 1, "", "adjointgradient"], [15, 3, 1, "", "adjointhessian"], [15, 3, 1, "", "apply"], [15, 3, 1, "", "coeff"], [15, 3, 1, "", "compute"], [15, 3, 1, "", "computeall"], [15, 3, 1, "", "cross"], [15, 3, 1, "", "cubed_norm"], [15, 3, 1, "", "cwiseProduct"], [15, 3, 1, "", "cwiseQuotient"], [15, 3, 1, "", "dot"], [15, 3, 1, "", "eval"], [15, 3, 1, "", "head"], [15, 3, 1, "", "head2"], [15, 3, 1, "", "head3"], [15, 3, 1, "", "head_2"], [15, 3, 1, "", "head_3"], [15, 3, 1, "", "input_domain"], [15, 3, 1, "", "inverse_cubed_norm"], [15, 3, 1, "", "inverse_four_norm"], [15, 3, 1, "", "inverse_norm"], [15, 3, 1, "", "inverse_squared_norm"], [15, 3, 1, "", "is_linear"], [15, 3, 1, "", "jacobian"], [15, 3, 1, "", "name"], [15, 3, 1, "", "norm"], [15, 3, 1, "", "normalized"], [15, 3, 1, "", "normalized_power2"], [15, 3, 1, "", "normalized_power3"], [15, 3, 1, "", "normalized_power4"], [15, 3, 1, "", "normalized_power5"], [15, 3, 1, "", "padded"], [15, 3, 1, "", "padded_lower"], [15, 3, 1, "", "padded_upper"], [15, 3, 1, "", "rpt"], [15, 3, 1, "", "segment"], [15, 3, 1, "", "segment2"], [15, 3, 1, "", "segment3"], [15, 3, 1, "", "segment_2"], [15, 3, 1, "", "segment_3"], [15, 3, 1, "", "squared_norm"], [15, 3, 1, "", "sum"], [15, 3, 1, "", "tail"], [15, 3, 1, "", "tail2"], [15, 3, 1, "", "tail3"], [15, 3, 1, "", "tail_2"], [15, 3, 1, "", "tail_3"], [15, 3, 1, "", "vf"]], "asset_asrl.OptimalControl": [[13, 0, 0, "-", "ODEBase"]], "asset_asrl.OptimalControl.ODEBase": [[13, 5, 1, "", "__delattr__"], [13, 5, 1, "", "__dir__"], [13, 5, 1, "", "__eq__"], [13, 5, 1, "", "__format__"], [13, 5, 1, "", "__ge__"], [13, 5, 1, "", "__getattribute__"], [13, 5, 1, "", "__gt__"], [13, 5, 1, "", "__hash__"], [13, 5, 1, "", "__init_subclass__"], [13, 5, 1, "", "__le__"], [13, 5, 1, "", "__lt__"], [13, 5, 1, "", "__ne__"], [13, 5, 1, "", "__new__"], [13, 5, 1, "", "__reduce__"], [13, 5, 1, "", "__reduce_ex__"], [13, 5, 1, "", "__repr__"], [13, 5, 1, "", "__setattr__"], [13, 5, 1, "", "__sizeof__"], [13, 5, 1, "", "__str__"], [13, 5, 1, "", "__subclasshook__"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"python": [0, 14, 24], "instal": [0, 10, 16], "asset": [0, 9, 11, 12, 16], "window": [0, 16], "binari": 0, "depend": [0, 10], "guidelin": 1, "contribut": 1, "delta": 2, "3": 2, "multi": [2, 3, 8], "phase": [2, 8, 23], "gto": 2, "transfer": 2, "refer": [2, 4], "full": [2, 3, 4, 6, 7, 8, 17], "code": [2, 3, 4, 6, 8], "spacecraft": 3, "optim": [3, 13, 20, 21, 23], "space": 4, "shuttl": 4, "reentri": 4, "exampl": [5, 11], "orbit": 6, "famili": 6, "continu": 6, "problem": [6, 7, 8, 20, 23], "setup": [6, 7], "construct": 6, "gener": 6, "period": 6, "solver": [6, 7], "perform": 6, "run": [6, 7], "plot": [6, 7], "zermelo": [7, 8], "": [7, 8, 9], "function": [7, 15, 23, 24], "sourc": [7, 17], "list": [7, 17, 23, 24], "link": [8, 20], "constraint": [8, 20, 23], "welcom": 9, "document": [9, 14], "content": 9, "citat": 9, "indic": 9, "tabl": 9, "mkl": 10, "doxygen": 10, "astro": 11, "librari": [11, 14], "model": 11, "two": 11, "bodi": 11, "ballist": 11, "low": 11, "thrust": 11, "cr3bp": 11, "ephemeri": 11, "eppr": 11, "nbodi": 11, "control": [13, 17, 18, 20, 21, 23], "submodul": 14, "vector": [15, 24], "step": 16, "By": 16, "guid": 16, "linux": 16, "next": 16, "integr": [17, 18, 23], "basic": 17, "us": 17, "law": [17, 18], "state": [17, 23], "transit": 17, "matric": 17, "parallel": 17, "tutori": [18, 19, 20, 23, 24, 25], "initi": [18, 20, 23], "event": 18, "detect": 18, "deriv": 18, "parrallel": 18, "local": 18, "od": 19, "odeargu": 19, "defin": 19, "class": 19, "object": [20, 23], "equal": [20, 23], "inequ": [20, 23], "solv": [20, 23], "util": 21, "lglinterpt": 21, "interpfunct": 21, "psiopt": 22, "usag": 22, "set": 22, "converg": 22, "flag": 22, "thread": 22, "output": [22, 24], "print": 22, "jet": 22, "transcript": 23, "option": 23, "region": 23, "paramet": 23, "miscellan": 23, "topic": 23, "shoot": 23, "method": 23, "rate": 23, "what": 23, "happen": 23, "i": 23, "over": 23, "constrain": 23, "my": 23, "add": 23, "multipl": 23, "reintegr": 23, "solut": 23, "argument": 24, "standard": 24, "math": 24, "oper": 24, "scalar": 24, "norm": 24, "normal": 24, "product": 24, "stack": 24, "matrix": 24, "condit": 24, "statement": 24, "some": 24, "note": 24, "input": 24, "suggest": 24, "style": 24, "organ": 24, "composit": 24, "repeat": 24, "sub": 24, "express": 24, "tabular": 24, "data": 24, "interpol": 24, "1": 24, "d": 24, "2": 24, "size": 24, "vectorfunct": 24, "bind": 24, "raw": 24, "don": 24, "t": 24, "do": 24, "thi": 24}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Python: Installing ASSET": [[0, "python-installing-asset"]], "Windows Binary Dependencies": [[0, "windows-binary-dependencies"]], "Guidelines for Contributing": [[1, "guidelines-for-contributing"]], "Delta 3 Multi-phase GTO Transfer": [[2, "delta-3-multi-phase-gto-transfer"]], "References": [[2, "references"], [4, "references"]], "Full Code": [[2, "full-code"], [4, "full-code"], [6, "full-code"], [8, "full-code"]], "Multi-Spacecraft Optimization": [[3, "multi-spacecraft-optimization"]], "Full Code:": [[3, "full-code"]], "Space Shuttle Reentry": [[4, "space-shuttle-reentry"]], "Examples": [[5, "examples"]], "Orbit Family Continuation": [[6, "orbit-family-continuation"]], "Problem Setup": [[6, "problem-setup"], [7, "problem-setup"]], "Constructing a Generic Periodic Solver": [[6, "constructing-a-generic-periodic-solver"]], "Performing Continuation": [[6, "performing-continuation"]], "Running and Plotting": [[6, "running-and-plotting"], [7, "running-and-plotting"]], "Zermelo\u2019s Problem": [[7, "zermelo-s-problem"]], "Solver Function": [[7, "solver-function"]], "Full Source Listing": [[7, "full-source-listing"], [17, "full-source-listing"]], "Multi-Phase Zermelo\u2019s Problem": [[8, "multi-phase-zermelo-s-problem"]], "Link Constraints:": [[8, "link-constraints"]], "Welcome to ASSET\u2019s documentation!": [[9, "welcome-to-asset-s-documentation"]], "Contents:": [[9, null]], "Citation": [[9, "citation"]], "Indices and tables": [[9, "indices-and-tables"]], "Installation": [[10, "installation"]], "Dependencies": [[10, "dependencies"]], "MKL": [[10, "mkl"]], "Doxygen": [[10, "doxygen"]], "ASSET Astro Library": [[11, "asset-astro-library"]], "Example Models": [[11, "example-models"]], "Two-Body Ballistic": [[11, "two-body-ballistic"]], "Two-Body Low-Thrust": [[11, "two-body-low-thrust"]], "CR3BP Ballistic": [[11, "cr3bp-ballistic"]], "CR3BP Low-Thrust": [[11, "cr3bp-low-thrust"]], "Ephemeris Models": [[11, "ephemeris-models"]], "EPPR Ballistic": [[11, "eppr-ballistic"]], "EPPR Low-Thrust": [[11, "eppr-low-thrust"]], "NBody Ballistic": [[11, "nbody-ballistic"]], "NBody Low-Thrust": [[11, "nbody-low-thrust"]], "ASSET": [[12, "module-asset"]], "Optimal Control": [[13, "module-asset_asrl.OptimalControl.ODEBase"]], "Python Library Documentation": [[14, "python-library-documentation"]], "Python Submodules:": [[14, null]], "Vector Functions": [[15, "module-asset.VectorFunctions"]], "Installing ASSET": [[16, "installing-asset"]], "Windows Installation": [[16, "windows-installation"]], "Step-By-Step Guide": [[16, "step-by-step-guide"]], "Linux Installation": [[16, "linux-installation"]], "Step-by-Step Guide": [[16, "id3"]], "Next Steps": [[16, "next-steps"]], "Integrators": [[17, "integrators"]], "Basic Use": [[17, "basic-use"]], "Control Laws": [[17, "control-laws"]], "State Transition Matrices": [[17, "state-transition-matrices"]], "Parallel Integration": [[17, "parallel-integration"]], "Integrator Tutorial": [[18, "integrator-tutorial"]], "Initialization": [[18, "initialization"], [20, "initialization"], [23, "initialization"]], "Integration": [[18, "integration"]], "Event Detection": [[18, "event-detection"]], "Derivatives": [[18, "derivatives"]], "Parrallel Integration": [[18, "parrallel-integration"]], "Local Control Laws": [[18, "local-control-laws"]], "ODE Tutorial": [[19, "ode-tutorial"]], "ODEArguments": [[19, "odearguments"]], "Defining ODE Classes": [[19, "defining-ode-classes"]], "Optimal Control Problem Tutorial": [[20, "optimal-control-problem-tutorial"]], "Link Constraints and Objectives": [[20, "link-constraints-and-objectives"]], "Link Equality Constraints": [[20, "link-equality-constraints"]], "Link Inequality Constraints": [[20, "link-inequality-constraints"]], "Link Objectives": [[20, "link-objectives"]], "Solving and Optimizing": [[20, "solving-and-optimizing"], [23, "solving-and-optimizing"]], "Optimal Control Utilities": [[21, "optimal-control-utilities"]], "LGLInterpTable and InterpFunction": [[21, "lglinterptable-and-interpfunction"]], "PSIOPT": [[22, "psiopt"]], "PSIOPT Usage": [[22, "psiopt-usage"]], "PSIOPT SETTINGS": [[22, "id1"]], "PSIOPT CONVERGENCE FLAGS": [[22, "id2"]], "Threading": [[22, "threading"]], "Output": [[22, "output"]], "PSIOPT Print Output": [[22, "id3"]], "Jet": [[22, "jet"]], "Optimal Control Phase Tutorial": [[23, "optimal-control-phase-tutorial"]], "List of Phase Transcription Options": [[23, "id1"]], "Constraints and Objectives": [[23, "constraints-and-objectives"]], "Phase Regions": [[23, "id2"]], "Equality Constraints": [[23, "equality-constraints"]], "Inequality Constraints": [[23, "inequality-constraints"]], "State Objectives": [[23, "state-objectives"]], "Integral Objectives": [[23, "integral-objectives"]], "Integral Parameter Functions": [[23, "integral-parameter-functions"]], "Miscellaneous Topics": [[23, "miscellaneous-topics"]], "Shooting Method": [[23, "shooting-method"]], "Control Rate Constraints": [[23, "control-rate-constraints"]], "What happens if I over constrain my problem?": [[23, "what-happens-if-i-over-constrain-my-problem"]], "What happens if I add multiple objectives?": [[23, "what-happens-if-i-add-multiple-objectives"]], "Reintegrating Solutions": [[23, "reintegrating-solutions"]], "Vector Function Tutorial": [[24, "vector-function-tutorial"]], "Arguments": [[24, "arguments"]], "Standard Math Operations": [[24, "standard-math-operations"]], "Scalar Math Operations": [[24, "scalar-math-operations"]], "List of Scalar Math Functions": [[24, "id4"]], "Vector Norms and Normalizations": [[24, "vector-norms-and-normalizations"]], "List of Vector Norms and Normalizations": [[24, "id5"]], "Vector Products": [[24, "vector-products"]], "Stacking Outputs": [[24, "stacking-outputs"]], "Matrix Operations": [[24, "matrix-operations"]], "Conditional Statement/Operations": [[24, "conditional-statement-operations"]], "Some Notes on Input Arguments": [[24, "some-notes-on-input-arguments"]], "Suggested Style and Organization": [[24, "suggested-style-and-organization"]], "Function Composition": [[24, "function-composition"]], "Repeated Sub Expressions": [[24, "repeated-sub-expressions"]], "Tabular Data and Interpolation": [[24, "tabular-data-and-interpolation"]], "1-D Interpolation": [[24, "d-interpolation"]], "2-D Interpolation": [[24, "id3"]], "Note on Size of VectorFunctions": [[24, "note-on-size-of-vectorfunctions"]], "Binding Raw Python Functions (DON\u2019T DO THIS)": [[24, "binding-raw-python-functions-don-t-do-this"]], "Tutorials": [[25, "tutorials"]]}, "indexentries": {"pymain() (in module asset)": [[12, "asset.PyMain"]], "softwareinfo() (in module asset)": [[12, "asset.SoftwareInfo"]], "asset": [[12, "module-asset"]], "module": [[12, "module-asset"], [13, "module-asset.OptimalControl"], [13, "module-asset_asrl.OptimalControl.ODEBase"], [15, "module-asset.VectorFunctions"]], "back (asset.optimalcontrol.phaseregionflags attribute)": [[13, "asset.OptimalControl.PhaseRegionFlags.Back"]], "backtoback (asset.optimalcontrol.linkflags attribute)": [[13, "asset.OptimalControl.LinkFlags.BackToBack"]], "backtofront (asset.optimalcontrol.linkflags attribute)": [[13, "asset.OptimalControl.LinkFlags.BackToFront"]], "backtwototwofront (asset.optimalcontrol.linkflags attribute)": [[13, "asset.OptimalControl.LinkFlags.BackTwoToTwoFront"]], "backandfront (asset.optimalcontrol.phaseregionflags attribute)": [[13, "asset.OptimalControl.PhaseRegionFlags.BackandFront"]], "baseintegral (asset.optimalcontrol.integralmodes attribute)": [[13, "asset.OptimalControl.IntegralModes.BaseIntegral"]], "blockconstant (asset.optimalcontrol.controlmodes attribute)": [[13, "asset.OptimalControl.ControlModes.BlockConstant"]], "centralshooting (asset.optimalcontrol.transcriptionmodes attribute)": [[13, "asset.OptimalControl.TranscriptionModes.CentralShooting"]], "controlmodes (class in asset.optimalcontrol)": [[13, "asset.OptimalControl.ControlModes"]], "dopri54 (asset.optimalcontrol.rkoptions attribute)": [[13, "asset.OptimalControl.RKOptions.DOPRI54"]], "dopri87 (asset.optimalcontrol.rkoptions attribute)": [[13, "asset.OptimalControl.RKOptions.DOPRI87"]], "errorintegral() (asset.optimalcontrol.lglinterptable method)": [[13, "asset.OptimalControl.LGLInterpTable.ErrorIntegral"]], "finitedifftable (class in asset.optimalcontrol)": [[13, "asset.OptimalControl.FiniteDiffTable"]], "firstorderspline (asset.optimalcontrol.controlmodes attribute)": [[13, "asset.OptimalControl.ControlModes.FirstOrderSpline"]], "front (asset.optimalcontrol.phaseregionflags attribute)": [[13, "asset.OptimalControl.PhaseRegionFlags.Front"]], "fronttoback (asset.optimalcontrol.linkflags attribute)": [[13, "asset.OptimalControl.LinkFlags.FrontToBack"]], "fronttofront (asset.optimalcontrol.linkflags attribute)": [[13, "asset.OptimalControl.LinkFlags.FrontToFront"]], "fronttwototwoback (asset.optimalcontrol.linkflags attribute)": [[13, "asset.OptimalControl.LinkFlags.FrontTwoToTwoBack"]], "frontandback (asset.optimalcontrol.phaseregionflags attribute)": [[13, "asset.OptimalControl.PhaseRegionFlags.FrontandBack"]], "highestorderspline (asset.optimalcontrol.controlmodes attribute)": [[13, "asset.OptimalControl.ControlModes.HighestOrderSpline"]], "irows() (asset.optimalcontrol.interpfunction method)": [[13, "asset.OptimalControl.InterpFunction.IRows"]], "irows() (asset.optimalcontrol.interpfunction_1 method)": [[13, "asset.OptimalControl.InterpFunction_1.IRows"]], "irows() (asset.optimalcontrol.interpfunction_3 method)": [[13, "asset.OptimalControl.InterpFunction_3.IRows"]], "irows() (asset.optimalcontrol.interpfunction_6 method)": [[13, "asset.OptimalControl.InterpFunction_6.IRows"]], "irows() (asset.optimalcontrol.odearguments method)": [[13, "asset.OptimalControl.ODEArguments.IRows"]], "innerpath (asset.optimalcontrol.phaseregionflags attribute)": [[13, "asset.OptimalControl.PhaseRegionFlags.InnerPath"]], "integralmodes (class in asset.optimalcontrol)": [[13, "asset.OptimalControl.IntegralModes"]], "interpfunction (class in asset.optimalcontrol)": [[13, "asset.OptimalControl.InterpFunction"]], "interpfunction_1 (class in asset.optimalcontrol)": [[13, "asset.OptimalControl.InterpFunction_1"]], "interpfunction_3 (class in asset.optimalcontrol)": [[13, "asset.OptimalControl.InterpFunction_3"]], "interpfunction_6 (class in asset.optimalcontrol)": [[13, "asset.OptimalControl.InterpFunction_6"]], "interpnondim() (asset.optimalcontrol.lglinterptable method)": [[13, "asset.OptimalControl.LGLInterpTable.InterpNonDim"]], "interprange() (asset.optimalcontrol.lglinterptable method)": [[13, "asset.OptimalControl.LGLInterpTable.InterpRange"]], "interpwholerange() (asset.optimalcontrol.lglinterptable method)": [[13, "asset.OptimalControl.LGLInterpTable.InterpWholeRange"]], "interpolate() (asset.optimalcontrol.lglinterptable method)": [[13, "asset.OptimalControl.LGLInterpTable.Interpolate"]], "interpolatederiv() (asset.optimalcontrol.lglinterptable method)": [[13, "asset.OptimalControl.LGLInterpTable.InterpolateDeriv"]], "lgl3 (asset.optimalcontrol.transcriptionmodes attribute)": [[13, "asset.OptimalControl.TranscriptionModes.LGL3"]], "lgl5 (asset.optimalcontrol.transcriptionmodes attribute)": [[13, "asset.OptimalControl.TranscriptionModes.LGL5"]], "lgl7 (asset.optimalcontrol.transcriptionmodes attribute)": [[13, "asset.OptimalControl.TranscriptionModes.LGL7"]], "lglinterptable (class in asset.optimalcontrol)": [[13, "asset.OptimalControl.LGLInterpTable"]], "linkconstraint (class in asset.optimalcontrol)": [[13, "asset.OptimalControl.LinkConstraint"]], "linkflags (class in asset.optimalcontrol)": [[13, "asset.OptimalControl.LinkFlags"]], "linkobjective (class in asset.optimalcontrol)": [[13, "asset.OptimalControl.LinkObjective"]], "linkparams (asset.optimalcontrol.linkflags attribute)": [[13, "asset.OptimalControl.LinkFlags.LinkParams"]], "nospline (asset.optimalcontrol.controlmodes attribute)": [[13, "asset.OptimalControl.ControlModes.NoSpline"]], "nodalpath (asset.optimalcontrol.phaseregionflags attribute)": [[13, "asset.OptimalControl.PhaseRegionFlags.NodalPath"]], "odearguments (class in asset.optimalcontrol)": [[13, "asset.OptimalControl.ODEArguments"]], "odeparams (asset.optimalcontrol.phaseregionflags attribute)": [[13, "asset.OptimalControl.PhaseRegionFlags.ODEParams"]], "orows() (asset.optimalcontrol.interpfunction method)": [[13, "asset.OptimalControl.InterpFunction.ORows"]], "orows() (asset.optimalcontrol.interpfunction_1 method)": [[13, "asset.OptimalControl.InterpFunction_1.ORows"]], "orows() (asset.optimalcontrol.interpfunction_3 method)": [[13, "asset.OptimalControl.InterpFunction_3.ORows"]], "orows() (asset.optimalcontrol.interpfunction_6 method)": [[13, "asset.OptimalControl.InterpFunction_6.ORows"]], "orows() (asset.optimalcontrol.odearguments method)": [[13, "asset.OptimalControl.ODEArguments.ORows"]], "optimalcontrolproblem (class in asset.optimalcontrol)": [[13, "asset.OptimalControl.OptimalControlProblem"]], "pvar() (asset.optimalcontrol.odearguments method)": [[13, "asset.OptimalControl.ODEArguments.PVar"]], "pvec() (asset.optimalcontrol.odearguments method)": [[13, "asset.OptimalControl.ODEArguments.PVec"]], "pairwisepath (asset.optimalcontrol.phaseregionflags attribute)": [[13, "asset.OptimalControl.PhaseRegionFlags.PairWisePath"]], "params (asset.optimalcontrol.phaseregionflags attribute)": [[13, "asset.OptimalControl.PhaseRegionFlags.Params"]], "paramstoparams (asset.optimalcontrol.linkflags attribute)": [[13, "asset.OptimalControl.LinkFlags.ParamsToParams"]], "path (asset.optimalcontrol.phaseregionflags attribute)": [[13, "asset.OptimalControl.PhaseRegionFlags.Path"]], "pathtopath (asset.optimalcontrol.linkflags attribute)": [[13, "asset.OptimalControl.LinkFlags.PathToPath"]], "phase() (asset.optimalcontrol.optimalcontrolproblem method)": [[13, "asset.OptimalControl.OptimalControlProblem.Phase"]], "phaseinterface (class in asset.optimalcontrol)": [[13, "asset.OptimalControl.PhaseInterface"]], "phaseregionflags (class in asset.optimalcontrol)": [[13, "asset.OptimalControl.PhaseRegionFlags"]], "phases (asset.optimalcontrol.optimalcontrolproblem property)": [[13, "asset.OptimalControl.OptimalControlProblem.Phases"]], "rk4 (asset.optimalcontrol.rkoptions attribute)": [[13, "asset.OptimalControl.RKOptions.RK4"]], "rkoptions (class in asset.optimalcontrol)": [[13, "asset.OptimalControl.RKOptions"]], "stateconstraint (class in asset.optimalcontrol)": [[13, "asset.OptimalControl.StateConstraint"]], "stateobjective (class in asset.optimalcontrol)": [[13, "asset.OptimalControl.StateObjective"]], "staticparams (asset.optimalcontrol.phaseregionflags attribute)": [[13, "asset.OptimalControl.PhaseRegionFlags.StaticParams"]], "t0 (asset.optimalcontrol.lglinterptable property)": [[13, "asset.OptimalControl.LGLInterpTable.T0"]], "tf (asset.optimalcontrol.lglinterptable property)": [[13, "asset.OptimalControl.LGLInterpTable.TF"]], "tvar() (asset.optimalcontrol.odearguments method)": [[13, "asset.OptimalControl.ODEArguments.TVar"]], "transcriptionmodes (class in asset.optimalcontrol)": [[13, "asset.OptimalControl.TranscriptionModes"]], "trapintegral (asset.optimalcontrol.integralmodes attribute)": [[13, "asset.OptimalControl.IntegralModes.TrapIntegral"]], "trapezoidal (asset.optimalcontrol.transcriptionmodes attribute)": [[13, "asset.OptimalControl.TranscriptionModes.Trapezoidal"]], "uvar() (asset.optimalcontrol.odearguments method)": [[13, "asset.OptimalControl.ODEArguments.UVar"]], "uvec() (asset.optimalcontrol.odearguments method)": [[13, "asset.OptimalControl.ODEArguments.UVec"]], "xvar() (asset.optimalcontrol.odearguments method)": [[13, "asset.OptimalControl.ODEArguments.XVar"]], "xvec() (asset.optimalcontrol.odearguments method)": [[13, "asset.OptimalControl.ODEArguments.XVec"]], "xtvec() (asset.optimalcontrol.odearguments method)": [[13, "asset.OptimalControl.ODEArguments.XtVec"]], "__call__() (asset.optimalcontrol.interpfunction method)": [[13, "asset.OptimalControl.InterpFunction.__call__"]], "__call__() (asset.optimalcontrol.interpfunction_1 method)": [[13, "asset.OptimalControl.InterpFunction_1.__call__"]], "__call__() (asset.optimalcontrol.interpfunction_3 method)": [[13, "asset.OptimalControl.InterpFunction_3.__call__"]], "__call__() (asset.optimalcontrol.interpfunction_6 method)": [[13, "asset.OptimalControl.InterpFunction_6.__call__"]], "__call__() (asset.optimalcontrol.lglinterptable method)": [[13, "asset.OptimalControl.LGLInterpTable.__call__"]], "__call__() (asset.optimalcontrol.odearguments method)": [[13, "asset.OptimalControl.ODEArguments.__call__"]], "__delattr__() (in module asset_asrl.optimalcontrol.odebase)": [[13, "asset_asrl.OptimalControl.ODEBase.__delattr__"]], "__dir__() (in module asset_asrl.optimalcontrol.odebase)": [[13, "asset_asrl.OptimalControl.ODEBase.__dir__"]], "__eq__() (asset.optimalcontrol.controlmodes method)": [[13, "asset.OptimalControl.ControlModes.__eq__"]], "__eq__() (asset.optimalcontrol.integralmodes method)": [[13, "asset.OptimalControl.IntegralModes.__eq__"]], "__eq__() (asset.optimalcontrol.linkflags method)": [[13, "asset.OptimalControl.LinkFlags.__eq__"]], "__eq__() (asset.optimalcontrol.phaseregionflags method)": [[13, "asset.OptimalControl.PhaseRegionFlags.__eq__"]], "__eq__() (asset.optimalcontrol.rkoptions method)": [[13, "asset.OptimalControl.RKOptions.__eq__"]], "__eq__() (asset.optimalcontrol.transcriptionmodes method)": [[13, "asset.OptimalControl.TranscriptionModes.__eq__"]], "__eq__() (in module asset_asrl.optimalcontrol.odebase)": [[13, "asset_asrl.OptimalControl.ODEBase.__eq__"]], "__format__() (in module asset_asrl.optimalcontrol.odebase)": [[13, "asset_asrl.OptimalControl.ODEBase.__format__"]], "__ge__() (in module asset_asrl.optimalcontrol.odebase)": [[13, "asset_asrl.OptimalControl.ODEBase.__ge__"]], "__getattribute__() (in module asset_asrl.optimalcontrol.odebase)": [[13, "asset_asrl.OptimalControl.ODEBase.__getattribute__"]], "__getstate__() (asset.optimalcontrol.controlmodes method)": [[13, "asset.OptimalControl.ControlModes.__getstate__"]], "__getstate__() (asset.optimalcontrol.integralmodes method)": [[13, "asset.OptimalControl.IntegralModes.__getstate__"]], "__getstate__() (asset.optimalcontrol.linkflags method)": [[13, "asset.OptimalControl.LinkFlags.__getstate__"]], "__getstate__() (asset.optimalcontrol.phaseregionflags method)": [[13, "asset.OptimalControl.PhaseRegionFlags.__getstate__"]], "__getstate__() (asset.optimalcontrol.rkoptions method)": [[13, "asset.OptimalControl.RKOptions.__getstate__"]], "__getstate__() (asset.optimalcontrol.transcriptionmodes method)": [[13, "asset.OptimalControl.TranscriptionModes.__getstate__"]], "__gt__() (in module asset_asrl.optimalcontrol.odebase)": [[13, "asset_asrl.OptimalControl.ODEBase.__gt__"]], "__hash__() (asset.optimalcontrol.controlmodes method)": [[13, "asset.OptimalControl.ControlModes.__hash__"]], "__hash__() (asset.optimalcontrol.integralmodes method)": [[13, "asset.OptimalControl.IntegralModes.__hash__"]], "__hash__() (asset.optimalcontrol.linkflags method)": [[13, "asset.OptimalControl.LinkFlags.__hash__"]], "__hash__() (asset.optimalcontrol.phaseregionflags method)": [[13, "asset.OptimalControl.PhaseRegionFlags.__hash__"]], "__hash__() (asset.optimalcontrol.rkoptions method)": [[13, "asset.OptimalControl.RKOptions.__hash__"]], "__hash__() (asset.optimalcontrol.transcriptionmodes method)": [[13, "asset.OptimalControl.TranscriptionModes.__hash__"]], "__hash__() (in module asset_asrl.optimalcontrol.odebase)": [[13, "asset_asrl.OptimalControl.ODEBase.__hash__"]], "__index__() (asset.optimalcontrol.controlmodes method)": [[13, "asset.OptimalControl.ControlModes.__index__"]], "__index__() (asset.optimalcontrol.integralmodes method)": [[13, "asset.OptimalControl.IntegralModes.__index__"]], "__index__() (asset.optimalcontrol.linkflags method)": [[13, "asset.OptimalControl.LinkFlags.__index__"]], "__index__() (asset.optimalcontrol.phaseregionflags method)": [[13, "asset.OptimalControl.PhaseRegionFlags.__index__"]], "__index__() (asset.optimalcontrol.rkoptions method)": [[13, "asset.OptimalControl.RKOptions.__index__"]], "__index__() (asset.optimalcontrol.transcriptionmodes method)": [[13, "asset.OptimalControl.TranscriptionModes.__index__"]], "__init__() (asset.optimalcontrol.controlmodes method)": [[13, "asset.OptimalControl.ControlModes.__init__"]], "__init__() (asset.optimalcontrol.finitedifftable method)": [[13, "asset.OptimalControl.FiniteDiffTable.__init__"]], "__init__() (asset.optimalcontrol.integralmodes method)": [[13, "asset.OptimalControl.IntegralModes.__init__"]], "__init__() (asset.optimalcontrol.interpfunction method)": [[13, "asset.OptimalControl.InterpFunction.__init__"]], "__init__() (asset.optimalcontrol.interpfunction_1 method)": [[13, "asset.OptimalControl.InterpFunction_1.__init__"]], "__init__() (asset.optimalcontrol.interpfunction_3 method)": [[13, "asset.OptimalControl.InterpFunction_3.__init__"]], "__init__() (asset.optimalcontrol.interpfunction_6 method)": [[13, "asset.OptimalControl.InterpFunction_6.__init__"]], "__init__() (asset.optimalcontrol.lglinterptable method)": [[13, "asset.OptimalControl.LGLInterpTable.__init__"]], "__init__() (asset.optimalcontrol.linkconstraint method)": [[13, "asset.OptimalControl.LinkConstraint.__init__"]], "__init__() (asset.optimalcontrol.linkflags method)": [[13, "asset.OptimalControl.LinkFlags.__init__"]], "__init__() (asset.optimalcontrol.linkobjective method)": [[13, "asset.OptimalControl.LinkObjective.__init__"]], "__init__() (asset.optimalcontrol.odearguments method)": [[13, "asset.OptimalControl.ODEArguments.__init__"]], "__init__() (asset.optimalcontrol.optimalcontrolproblem method)": [[13, "asset.OptimalControl.OptimalControlProblem.__init__"]], "__init__() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.__init__"]], "__init__() (asset.optimalcontrol.phaseregionflags method)": [[13, "asset.OptimalControl.PhaseRegionFlags.__init__"]], "__init__() (asset.optimalcontrol.rkoptions method)": [[13, "asset.OptimalControl.RKOptions.__init__"]], "__init__() (asset.optimalcontrol.stateconstraint method)": [[13, "asset.OptimalControl.StateConstraint.__init__"]], "__init__() (asset.optimalcontrol.stateobjective method)": [[13, "asset.OptimalControl.StateObjective.__init__"]], "__init__() (asset.optimalcontrol.transcriptionmodes method)": [[13, "asset.OptimalControl.TranscriptionModes.__init__"]], "__init_subclass__() (in module asset_asrl.optimalcontrol.odebase)": [[13, "asset_asrl.OptimalControl.ODEBase.__init_subclass__"]], "__int__() (asset.optimalcontrol.controlmodes method)": [[13, "asset.OptimalControl.ControlModes.__int__"]], "__int__() (asset.optimalcontrol.integralmodes method)": [[13, "asset.OptimalControl.IntegralModes.__int__"]], "__int__() (asset.optimalcontrol.linkflags method)": [[13, "asset.OptimalControl.LinkFlags.__int__"]], "__int__() (asset.optimalcontrol.phaseregionflags method)": [[13, "asset.OptimalControl.PhaseRegionFlags.__int__"]], "__int__() (asset.optimalcontrol.rkoptions method)": [[13, "asset.OptimalControl.RKOptions.__int__"]], "__int__() (asset.optimalcontrol.transcriptionmodes method)": [[13, "asset.OptimalControl.TranscriptionModes.__int__"]], "__le__() (in module asset_asrl.optimalcontrol.odebase)": [[13, "asset_asrl.OptimalControl.ODEBase.__le__"]], "__lt__() (in module asset_asrl.optimalcontrol.odebase)": [[13, "asset_asrl.OptimalControl.ODEBase.__lt__"]], "__members__ (asset.optimalcontrol.controlmodes attribute)": [[13, "asset.OptimalControl.ControlModes.__members__"]], "__members__ (asset.optimalcontrol.integralmodes attribute)": [[13, "asset.OptimalControl.IntegralModes.__members__"]], "__members__ (asset.optimalcontrol.linkflags attribute)": [[13, "asset.OptimalControl.LinkFlags.__members__"]], "__members__ (asset.optimalcontrol.phaseregionflags attribute)": [[13, "asset.OptimalControl.PhaseRegionFlags.__members__"]], "__members__ (asset.optimalcontrol.rkoptions attribute)": [[13, "asset.OptimalControl.RKOptions.__members__"]], "__members__ (asset.optimalcontrol.transcriptionmodes attribute)": [[13, "asset.OptimalControl.TranscriptionModes.__members__"]], "__module__ (asset.optimalcontrol.controlmodes attribute)": [[13, "asset.OptimalControl.ControlModes.__module__"]], "__module__ (asset.optimalcontrol.finitedifftable attribute)": [[13, "asset.OptimalControl.FiniteDiffTable.__module__"]], "__module__ (asset.optimalcontrol.integralmodes attribute)": [[13, "asset.OptimalControl.IntegralModes.__module__"]], "__module__ (asset.optimalcontrol.interpfunction attribute)": [[13, "asset.OptimalControl.InterpFunction.__module__"]], "__module__ (asset.optimalcontrol.interpfunction_1 attribute)": [[13, "asset.OptimalControl.InterpFunction_1.__module__"]], "__module__ (asset.optimalcontrol.interpfunction_3 attribute)": [[13, "asset.OptimalControl.InterpFunction_3.__module__"]], "__module__ (asset.optimalcontrol.interpfunction_6 attribute)": [[13, "asset.OptimalControl.InterpFunction_6.__module__"]], "__module__ (asset.optimalcontrol.lglinterptable attribute)": [[13, "asset.OptimalControl.LGLInterpTable.__module__"]], "__module__ (asset.optimalcontrol.linkconstraint attribute)": [[13, "asset.OptimalControl.LinkConstraint.__module__"]], "__module__ (asset.optimalcontrol.linkflags attribute)": [[13, "asset.OptimalControl.LinkFlags.__module__"]], "__module__ (asset.optimalcontrol.linkobjective attribute)": [[13, "asset.OptimalControl.LinkObjective.__module__"]], "__module__ (asset.optimalcontrol.odearguments attribute)": [[13, "asset.OptimalControl.ODEArguments.__module__"]], "__module__ (asset.optimalcontrol.optimalcontrolproblem attribute)": [[13, "asset.OptimalControl.OptimalControlProblem.__module__"]], "__module__ (asset.optimalcontrol.phaseinterface attribute)": [[13, "asset.OptimalControl.PhaseInterface.__module__"]], "__module__ (asset.optimalcontrol.phaseregionflags attribute)": [[13, "asset.OptimalControl.PhaseRegionFlags.__module__"]], "__module__ (asset.optimalcontrol.rkoptions attribute)": [[13, "asset.OptimalControl.RKOptions.__module__"]], "__module__ (asset.optimalcontrol.stateconstraint attribute)": [[13, "asset.OptimalControl.StateConstraint.__module__"]], "__module__ (asset.optimalcontrol.stateobjective attribute)": [[13, "asset.OptimalControl.StateObjective.__module__"]], "__module__ (asset.optimalcontrol.transcriptionmodes attribute)": [[13, "asset.OptimalControl.TranscriptionModes.__module__"]], "__ne__() (asset.optimalcontrol.controlmodes method)": [[13, "asset.OptimalControl.ControlModes.__ne__"]], "__ne__() (asset.optimalcontrol.integralmodes method)": [[13, "asset.OptimalControl.IntegralModes.__ne__"]], "__ne__() (asset.optimalcontrol.linkflags method)": [[13, "asset.OptimalControl.LinkFlags.__ne__"]], "__ne__() (asset.optimalcontrol.phaseregionflags method)": [[13, "asset.OptimalControl.PhaseRegionFlags.__ne__"]], "__ne__() (asset.optimalcontrol.rkoptions method)": [[13, "asset.OptimalControl.RKOptions.__ne__"]], "__ne__() (asset.optimalcontrol.transcriptionmodes method)": [[13, "asset.OptimalControl.TranscriptionModes.__ne__"]], "__ne__() (in module asset_asrl.optimalcontrol.odebase)": [[13, "asset_asrl.OptimalControl.ODEBase.__ne__"]], "__new__() (in module asset_asrl.optimalcontrol.odebase)": [[13, "asset_asrl.OptimalControl.ODEBase.__new__"]], "__reduce__() (in module asset_asrl.optimalcontrol.odebase)": [[13, "asset_asrl.OptimalControl.ODEBase.__reduce__"]], "__reduce_ex__() (in module asset_asrl.optimalcontrol.odebase)": [[13, "asset_asrl.OptimalControl.ODEBase.__reduce_ex__"]], "__repr__() (asset.optimalcontrol.controlmodes method)": [[13, "asset.OptimalControl.ControlModes.__repr__"]], "__repr__() (asset.optimalcontrol.integralmodes method)": [[13, "asset.OptimalControl.IntegralModes.__repr__"]], "__repr__() (asset.optimalcontrol.linkflags method)": [[13, "asset.OptimalControl.LinkFlags.__repr__"]], "__repr__() (asset.optimalcontrol.phaseregionflags method)": [[13, "asset.OptimalControl.PhaseRegionFlags.__repr__"]], "__repr__() (asset.optimalcontrol.rkoptions method)": [[13, "asset.OptimalControl.RKOptions.__repr__"]], "__repr__() (asset.optimalcontrol.transcriptionmodes method)": [[13, "asset.OptimalControl.TranscriptionModes.__repr__"]], "__repr__() (in module asset_asrl.optimalcontrol.odebase)": [[13, "asset_asrl.OptimalControl.ODEBase.__repr__"]], "__setattr__() (in module asset_asrl.optimalcontrol.odebase)": [[13, "asset_asrl.OptimalControl.ODEBase.__setattr__"]], "__setstate__() (asset.optimalcontrol.controlmodes method)": [[13, "asset.OptimalControl.ControlModes.__setstate__"]], "__setstate__() (asset.optimalcontrol.integralmodes method)": [[13, "asset.OptimalControl.IntegralModes.__setstate__"]], "__setstate__() (asset.optimalcontrol.linkflags method)": [[13, "asset.OptimalControl.LinkFlags.__setstate__"]], "__setstate__() (asset.optimalcontrol.phaseregionflags method)": [[13, "asset.OptimalControl.PhaseRegionFlags.__setstate__"]], "__setstate__() (asset.optimalcontrol.rkoptions method)": [[13, "asset.OptimalControl.RKOptions.__setstate__"]], "__setstate__() (asset.optimalcontrol.transcriptionmodes method)": [[13, "asset.OptimalControl.TranscriptionModes.__setstate__"]], "__sizeof__() (in module asset_asrl.optimalcontrol.odebase)": [[13, "asset_asrl.OptimalControl.ODEBase.__sizeof__"]], "__str__() (asset.optimalcontrol.controlmodes method)": [[13, "asset.OptimalControl.ControlModes.__str__"]], "__str__() (asset.optimalcontrol.integralmodes method)": [[13, "asset.OptimalControl.IntegralModes.__str__"]], "__str__() (asset.optimalcontrol.linkflags method)": [[13, "asset.OptimalControl.LinkFlags.__str__"]], "__str__() (asset.optimalcontrol.phaseregionflags method)": [[13, "asset.OptimalControl.PhaseRegionFlags.__str__"]], "__str__() (asset.optimalcontrol.rkoptions method)": [[13, "asset.OptimalControl.RKOptions.__str__"]], "__str__() (asset.optimalcontrol.transcriptionmodes method)": [[13, "asset.OptimalControl.TranscriptionModes.__str__"]], "__str__() (in module asset_asrl.optimalcontrol.odebase)": [[13, "asset_asrl.OptimalControl.ODEBase.__str__"]], "__subclasshook__() (in module asset_asrl.optimalcontrol.odebase)": [[13, "asset_asrl.OptimalControl.ODEBase.__subclasshook__"]], "addboundaryvalue() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addBoundaryValue"]], "addboundaryvalues() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addBoundaryValues"]], "adddeltatimeequalcon() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addDeltaTimeEqualCon"]], "adddeltatimeobjective() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addDeltaTimeObjective"]], "adddeltavarequalcon() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addDeltaVarEqualCon"]], "adddeltavarobjective() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addDeltaVarObjective"]], "adddirectlinkequalcon() (asset.optimalcontrol.optimalcontrolproblem method)": [[13, "asset.OptimalControl.OptimalControlProblem.addDirectLinkEqualCon"]], "addequalcon() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addEqualCon"]], "addforwardlinkequalcon() (asset.optimalcontrol.optimalcontrolproblem method)": [[13, "asset.OptimalControl.OptimalControlProblem.addForwardLinkEqualCon"]], "addinequalcon() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addInequalCon"]], "addintegralobjective() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addIntegralObjective"]], "addintegralparamfunction() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addIntegralParamFunction"]], "addlufuncbound() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addLUFuncBound"]], "addlunormbound() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addLUNormBound"]], "addlusquarednormbound() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addLUSquaredNormBound"]], "addluvarbound() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addLUVarBound"]], "addluvarbounds() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addLUVarBounds"]], "addlinkequalcon() (asset.optimalcontrol.optimalcontrolproblem method)": [[13, "asset.OptimalControl.OptimalControlProblem.addLinkEqualCon"]], "addlinkinequalcon() (asset.optimalcontrol.optimalcontrolproblem method)": [[13, "asset.OptimalControl.OptimalControlProblem.addLinkInequalCon"]], "addlinkobjective() (asset.optimalcontrol.optimalcontrolproblem method)": [[13, "asset.OptimalControl.OptimalControlProblem.addLinkObjective"]], "addlinkparamequalcon() (asset.optimalcontrol.optimalcontrolproblem method)": [[13, "asset.OptimalControl.OptimalControlProblem.addLinkParamEqualCon"]], "addlinkparaminequalcon() (asset.optimalcontrol.optimalcontrolproblem method)": [[13, "asset.OptimalControl.OptimalControlProblem.addLinkParamInequalCon"]], "addlinkparamobjective() (asset.optimalcontrol.optimalcontrolproblem method)": [[13, "asset.OptimalControl.OptimalControlProblem.addLinkParamObjective"]], "addlowerdeltatimebound() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addLowerDeltaTimeBound"]], "addlowerdeltavarbound() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addLowerDeltaVarBound"]], "addlowerfuncbound() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addLowerFuncBound"]], "addlowernormbound() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addLowerNormBound"]], "addlowersquarednormbound() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addLowerSquaredNormBound"]], "addlowervarbound() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addLowerVarBound"]], "addperiodicitycon() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addPeriodicityCon"]], "addphase() (asset.optimalcontrol.optimalcontrolproblem method)": [[13, "asset.OptimalControl.OptimalControlProblem.addPhase"]], "addstateobjective() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addStateObjective"]], "addupperdeltatimebound() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addUpperDeltaTimeBound"]], "addupperdeltavarbound() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addUpperDeltaVarBound"]], "addupperfuncbound() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addUpperFuncBound"]], "adduppernormbound() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addUpperNormBound"]], "adduppersquarednormbound() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addUpperSquaredNormBound"]], "adduppervarbound() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addUpperVarBound"]], "addvaluelock() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addValueLock"]], "addvalueobjective() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.addValueObjective"]], "adjointgradient() (asset.optimalcontrol.interpfunction method)": [[13, "asset.OptimalControl.InterpFunction.adjointgradient"]], "adjointgradient() (asset.optimalcontrol.interpfunction_1 method)": [[13, "asset.OptimalControl.InterpFunction_1.adjointgradient"]], "adjointgradient() (asset.optimalcontrol.interpfunction_3 method)": [[13, "asset.OptimalControl.InterpFunction_3.adjointgradient"]], "adjointgradient() (asset.optimalcontrol.interpfunction_6 method)": [[13, "asset.OptimalControl.InterpFunction_6.adjointgradient"]], "adjointgradient() (asset.optimalcontrol.odearguments method)": [[13, "asset.OptimalControl.ODEArguments.adjointgradient"]], "adjointhessian() (asset.optimalcontrol.interpfunction method)": [[13, "asset.OptimalControl.InterpFunction.adjointhessian"]], "adjointhessian() (asset.optimalcontrol.interpfunction_1 method)": [[13, "asset.OptimalControl.InterpFunction_1.adjointhessian"]], "adjointhessian() (asset.optimalcontrol.interpfunction_3 method)": [[13, "asset.OptimalControl.InterpFunction_3.adjointhessian"]], "adjointhessian() (asset.optimalcontrol.interpfunction_6 method)": [[13, "asset.OptimalControl.InterpFunction_6.adjointhessian"]], "adjointhessian() (asset.optimalcontrol.odearguments method)": [[13, "asset.OptimalControl.ODEArguments.adjointhessian"]], "all_derivs() (asset.optimalcontrol.finitedifftable method)": [[13, "asset.OptimalControl.FiniteDiffTable.all_derivs"]], "asset.optimalcontrol": [[13, "module-asset.OptimalControl"]], "asset_asrl.optimalcontrol.odebase": [[13, "module-asset_asrl.OptimalControl.ODEBase"]], "compute() (asset.optimalcontrol.interpfunction method)": [[13, "asset.OptimalControl.InterpFunction.compute"]], "compute() (asset.optimalcontrol.interpfunction_1 method)": [[13, "asset.OptimalControl.InterpFunction_1.compute"]], "compute() (asset.optimalcontrol.interpfunction_3 method)": [[13, "asset.OptimalControl.InterpFunction_3.compute"]], "compute() (asset.optimalcontrol.interpfunction_6 method)": [[13, "asset.OptimalControl.InterpFunction_6.compute"]], "compute() (asset.optimalcontrol.odearguments method)": [[13, "asset.OptimalControl.ODEArguments.compute"]], "computeall() (asset.optimalcontrol.interpfunction method)": [[13, "asset.OptimalControl.InterpFunction.computeall"]], "computeall() (asset.optimalcontrol.interpfunction_1 method)": [[13, "asset.OptimalControl.InterpFunction_1.computeall"]], "computeall() (asset.optimalcontrol.interpfunction_3 method)": [[13, "asset.OptimalControl.InterpFunction_3.computeall"]], "computeall() (asset.optimalcontrol.interpfunction_6 method)": [[13, "asset.OptimalControl.InterpFunction_6.computeall"]], "computeall() (asset.optimalcontrol.odearguments method)": [[13, "asset.OptimalControl.ODEArguments.computeall"]], "deriv() (asset.optimalcontrol.finitedifftable method)": [[13, "asset.OptimalControl.FiniteDiffTable.deriv"]], "enable_vectorization() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.enable_vectorization"]], "getphasenum() (asset.optimalcontrol.optimalcontrolproblem method)": [[13, "asset.OptimalControl.OptimalControlProblem.getPhaseNum"]], "gettableptr() (asset.optimalcontrol.lglinterptable method)": [[13, "asset.OptimalControl.LGLInterpTable.getTablePtr"]], "jacobian() (asset.optimalcontrol.interpfunction method)": [[13, "asset.OptimalControl.InterpFunction.jacobian"]], "jacobian() (asset.optimalcontrol.interpfunction_1 method)": [[13, "asset.OptimalControl.InterpFunction_1.jacobian"]], "jacobian() (asset.optimalcontrol.interpfunction_3 method)": [[13, "asset.OptimalControl.InterpFunction_3.jacobian"]], "jacobian() (asset.optimalcontrol.interpfunction_6 method)": [[13, "asset.OptimalControl.InterpFunction_6.jacobian"]], "jacobian() (asset.optimalcontrol.odearguments method)": [[13, "asset.OptimalControl.ODEArguments.jacobian"]], "loadevendata() (asset.optimalcontrol.lglinterptable method)": [[13, "asset.OptimalControl.LGLInterpTable.loadEvenData"]], "loadunevendata() (asset.optimalcontrol.lglinterptable method)": [[13, "asset.OptimalControl.LGLInterpTable.loadUnevenData"]], "makeperiodic() (asset.optimalcontrol.lglinterptable method)": [[13, "asset.OptimalControl.LGLInterpTable.makePeriodic"]], "name (asset.optimalcontrol.controlmodes property)": [[13, "asset.OptimalControl.ControlModes.name"]], "name (asset.optimalcontrol.integralmodes property)": [[13, "asset.OptimalControl.IntegralModes.name"]], "name (asset.optimalcontrol.linkflags property)": [[13, "asset.OptimalControl.LinkFlags.name"]], "name (asset.optimalcontrol.phaseregionflags property)": [[13, "asset.OptimalControl.PhaseRegionFlags.name"]], "name (asset.optimalcontrol.rkoptions property)": [[13, "asset.OptimalControl.RKOptions.name"]], "name (asset.optimalcontrol.transcriptionmodes property)": [[13, "asset.OptimalControl.TranscriptionModes.name"]], "name() (asset.optimalcontrol.interpfunction method)": [[13, "asset.OptimalControl.InterpFunction.name"]], "name() (asset.optimalcontrol.interpfunction_1 method)": [[13, "asset.OptimalControl.InterpFunction_1.name"]], "name() (asset.optimalcontrol.interpfunction_3 method)": [[13, "asset.OptimalControl.InterpFunction_3.name"]], "name() (asset.optimalcontrol.interpfunction_6 method)": [[13, "asset.OptimalControl.InterpFunction_6.name"]], "name() (asset.optimalcontrol.odearguments method)": [[13, "asset.OptimalControl.ODEArguments.name"]], "refinetrajequal() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.refineTrajEqual"]], "refinetrajmanual() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.refineTrajManual"]], "removeequalcon() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.removeEqualCon"]], "removeinequalcon() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.removeInequalCon"]], "removeintegralobjective() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.removeIntegralObjective"]], "removeintegralparamfunction() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.removeIntegralParamFunction"]], "removelinkequalcon() (asset.optimalcontrol.optimalcontrolproblem method)": [[13, "asset.OptimalControl.OptimalControlProblem.removeLinkEqualCon"]], "removelinkinequalcon() (asset.optimalcontrol.optimalcontrolproblem method)": [[13, "asset.OptimalControl.OptimalControlProblem.removeLinkInequalCon"]], "removelinkobjective() (asset.optimalcontrol.optimalcontrolproblem method)": [[13, "asset.OptimalControl.OptimalControlProblem.removeLinkObjective"]], "removephase() (asset.optimalcontrol.optimalcontrolproblem method)": [[13, "asset.OptimalControl.OptimalControlProblem.removePhase"]], "removestateobjective() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.removeStateObjective"]], "returncostatetraj() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.returnCostateTraj"]], "returnequalconlmults() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.returnEqualConLmults"]], "returninequalconlmults() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.returnInequalConLmults"]], "returnlinkparams() (asset.optimalcontrol.optimalcontrolproblem method)": [[13, "asset.OptimalControl.OptimalControlProblem.returnLinkParams"]], "returnstaticparams() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.returnStaticParams"]], "returntraj() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.returnTraj"]], "returntrajrange() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.returnTrajRange"]], "returntrajrangend() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.returnTrajRangeND"]], "returntrajtable() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.returnTrajTable"]], "rpt() (asset.optimalcontrol.interpfunction method)": [[13, "asset.OptimalControl.InterpFunction.rpt"]], "rpt() (asset.optimalcontrol.interpfunction_1 method)": [[13, "asset.OptimalControl.InterpFunction_1.rpt"]], "rpt() (asset.optimalcontrol.interpfunction_3 method)": [[13, "asset.OptimalControl.InterpFunction_3.rpt"]], "rpt() (asset.optimalcontrol.interpfunction_6 method)": [[13, "asset.OptimalControl.InterpFunction_6.rpt"]], "rpt() (asset.optimalcontrol.odearguments method)": [[13, "asset.OptimalControl.ODEArguments.rpt"]], "setcontrolmode() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.setControlMode"]], "setintegralmode() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.setIntegralMode"]], "setlinkparams() (asset.optimalcontrol.optimalcontrolproblem method)": [[13, "asset.OptimalControl.OptimalControlProblem.setLinkParams"]], "setstaticparams() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.setStaticParams"]], "settraj() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.setTraj"]], "sf() (asset.optimalcontrol.interpfunction_1 method)": [[13, "asset.OptimalControl.InterpFunction_1.sf"]], "strto_phaseregionflag() (in module asset.optimalcontrol)": [[13, "asset.OptimalControl.strto_PhaseRegionFlag"]], "substaticparams() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.subStaticParams"]], "subvariable() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.subVariable"]], "subvariables() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.subVariables"]], "switchtranscriptionmode() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.switchTranscriptionMode"]], "test_threads() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.test_threads"]], "transcribe() (asset.optimalcontrol.optimalcontrolproblem method)": [[13, "asset.OptimalControl.OptimalControlProblem.transcribe"]], "transcribe() (asset.optimalcontrol.phaseinterface method)": [[13, "asset.OptimalControl.PhaseInterface.transcribe"]], "value (asset.optimalcontrol.controlmodes property)": [[13, "asset.OptimalControl.ControlModes.value"]], "value (asset.optimalcontrol.integralmodes property)": [[13, "asset.OptimalControl.IntegralModes.value"]], "value (asset.optimalcontrol.linkflags property)": [[13, "asset.OptimalControl.LinkFlags.value"]], "value (asset.optimalcontrol.phaseregionflags property)": [[13, "asset.OptimalControl.PhaseRegionFlags.value"]], "value (asset.optimalcontrol.rkoptions property)": [[13, "asset.OptimalControl.RKOptions.value"]], "value (asset.optimalcontrol.transcriptionmodes property)": [[13, "asset.OptimalControl.TranscriptionModes.value"]], "vf() (asset.optimalcontrol.interpfunction method)": [[13, "asset.OptimalControl.InterpFunction.vf"]], "vf() (asset.optimalcontrol.interpfunction_1 method)": [[13, "asset.OptimalControl.InterpFunction_1.vf"]], "vf() (asset.optimalcontrol.interpfunction_3 method)": [[13, "asset.OptimalControl.InterpFunction_3.vf"]], "vf() (asset.optimalcontrol.interpfunction_6 method)": [[13, "asset.OptimalControl.InterpFunction_6.vf"]], "vf() (asset.optimalcontrol.odearguments method)": [[13, "asset.OptimalControl.ODEArguments.vf"]], "arguments (class in asset.vectorfunctions)": [[15, "asset.VectorFunctions.Arguments"]], "colmatrix (class in asset.vectorfunctions)": [[15, "asset.VectorFunctions.ColMatrix"]], "comparative (class in asset.vectorfunctions)": [[15, "asset.VectorFunctions.Comparative"]], "conditional (class in asset.vectorfunctions)": [[15, "asset.VectorFunctions.Conditional"]], "constant() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.Constant"]], "constantscalar (class in asset.vectorfunctions)": [[15, "asset.VectorFunctions.ConstantScalar"]], "constantvector (class in asset.vectorfunctions)": [[15, "asset.VectorFunctions.ConstantVector"]], "dynamicstacktest() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.DynamicStackTest"]], "element (class in asset.vectorfunctions)": [[15, "asset.VectorFunctions.Element"]], "irows() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.IRows"]], "irows() (asset.vectorfunctions.constantscalar method)": [[15, "asset.VectorFunctions.ConstantScalar.IRows"]], "irows() (asset.vectorfunctions.constantvector method)": [[15, "asset.VectorFunctions.ConstantVector.IRows"]], "irows() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.IRows"]], "irows() (asset.vectorfunctions.pyscalarfunction method)": [[15, "asset.VectorFunctions.PyScalarFunction.IRows"]], "irows() (asset.vectorfunctions.pyvectorfunction method)": [[15, "asset.VectorFunctions.PyVectorFunction.IRows"]], "irows() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.IRows"]], "irows() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.IRows"]], "irows() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.IRows"]], "irows() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.IRows"]], "irows() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.IRows"]], "interptable1d (class in asset.vectorfunctions)": [[15, "asset.VectorFunctions.InterpTable1D"]], "interptable2d (class in asset.vectorfunctions)": [[15, "asset.VectorFunctions.InterpTable2D"]], "orows() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.ORows"]], "orows() (asset.vectorfunctions.constantscalar method)": [[15, "asset.VectorFunctions.ConstantScalar.ORows"]], "orows() (asset.vectorfunctions.constantvector method)": [[15, "asset.VectorFunctions.ConstantVector.ORows"]], "orows() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.ORows"]], "orows() (asset.vectorfunctions.pyscalarfunction method)": [[15, "asset.VectorFunctions.PyScalarFunction.ORows"]], "orows() (asset.vectorfunctions.pyvectorfunction method)": [[15, "asset.VectorFunctions.PyVectorFunction.ORows"]], "orows() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.ORows"]], "orows() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.ORows"]], "orows() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.ORows"]], "orows() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.ORows"]], "orows() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.ORows"]], "pyscalarfunction (class in asset.vectorfunctions)": [[15, "asset.VectorFunctions.PyScalarFunction"]], "pyvectorfunction (class in asset.vectorfunctions)": [[15, "asset.VectorFunctions.PyVectorFunction"]], "rowmatrix (class in asset.vectorfunctions)": [[15, "asset.VectorFunctions.RowMatrix"]], "scalardynamicstacktest() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.ScalarDynamicStackTest"]], "scalarfunction (class in asset.vectorfunctions)": [[15, "asset.VectorFunctions.ScalarFunction"]], "scalarrootfinder() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.ScalarRootFinder"]], "segment (class in asset.vectorfunctions)": [[15, "asset.VectorFunctions.Segment"]], "segment2 (class in asset.vectorfunctions)": [[15, "asset.VectorFunctions.Segment2"]], "segment3 (class in asset.vectorfunctions)": [[15, "asset.VectorFunctions.Segment3"]], "speedtest() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.SpeedTest"]], "speedtest() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.SpeedTest"]], "stack() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.Stack"], [15, "asset.VectorFunctions.stack"]], "stackscalar() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.StackScalar"]], "sum() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.Sum"], [15, "asset.VectorFunctions.sum"]], "sumelems() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.SumElems"]], "sumscalar() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.SumScalar"]], "supertest() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.SuperTest"]], "supertest() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.SuperTest"]], "throwoutofbounds (asset.vectorfunctions.interptable1d property)": [[15, "asset.VectorFunctions.InterpTable1D.ThrowOutOfBounds"]], "throwoutofbounds (asset.vectorfunctions.interptable2d property)": [[15, "asset.VectorFunctions.InterpTable2D.ThrowOutOfBounds"]], "vectorfunction (class in asset.vectorfunctions)": [[15, "asset.VectorFunctions.VectorFunction"]], "warnoutofbounds (asset.vectorfunctions.interptable1d property)": [[15, "asset.VectorFunctions.InterpTable1D.WarnOutOfBounds"]], "warnoutofbounds (asset.vectorfunctions.interptable2d property)": [[15, "asset.VectorFunctions.InterpTable2D.WarnOutOfBounds"]], "__abs__() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.__abs__"]], "__abs__() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.__abs__"]], "__add__() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.__add__"]], "__add__() (asset.vectorfunctions.colmatrix method)": [[15, "asset.VectorFunctions.ColMatrix.__add__"]], "__add__() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.__add__"]], "__add__() (asset.vectorfunctions.rowmatrix method)": [[15, "asset.VectorFunctions.RowMatrix.__add__"]], "__add__() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.__add__"]], "__add__() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.__add__"]], "__add__() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.__add__"]], "__add__() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.__add__"]], "__add__() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.__add__"]], "__and__() (asset.vectorfunctions.conditional method)": [[15, "asset.VectorFunctions.Conditional.__and__"]], "__array_ufunc__ (asset.vectorfunctions.arguments attribute)": [[15, "asset.VectorFunctions.Arguments.__array_ufunc__"]], "__array_ufunc__ (asset.vectorfunctions.colmatrix attribute)": [[15, "asset.VectorFunctions.ColMatrix.__array_ufunc__"]], "__array_ufunc__ (asset.vectorfunctions.element attribute)": [[15, "asset.VectorFunctions.Element.__array_ufunc__"]], "__array_ufunc__ (asset.vectorfunctions.rowmatrix attribute)": [[15, "asset.VectorFunctions.RowMatrix.__array_ufunc__"]], "__array_ufunc__ (asset.vectorfunctions.scalarfunction attribute)": [[15, "asset.VectorFunctions.ScalarFunction.__array_ufunc__"]], "__array_ufunc__ (asset.vectorfunctions.segment attribute)": [[15, "asset.VectorFunctions.Segment.__array_ufunc__"]], "__array_ufunc__ (asset.vectorfunctions.segment2 attribute)": [[15, "asset.VectorFunctions.Segment2.__array_ufunc__"]], "__array_ufunc__ (asset.vectorfunctions.segment3 attribute)": [[15, "asset.VectorFunctions.Segment3.__array_ufunc__"]], "__array_ufunc__ (asset.vectorfunctions.vectorfunction attribute)": [[15, "asset.VectorFunctions.VectorFunction.__array_ufunc__"]], "__call__() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.__call__"]], "__call__() (asset.vectorfunctions.constantscalar method)": [[15, "asset.VectorFunctions.ConstantScalar.__call__"]], "__call__() (asset.vectorfunctions.constantvector method)": [[15, "asset.VectorFunctions.ConstantVector.__call__"]], "__call__() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.__call__"]], "__call__() (asset.vectorfunctions.interptable1d method)": [[15, "asset.VectorFunctions.InterpTable1D.__call__"]], "__call__() (asset.vectorfunctions.interptable2d method)": [[15, "asset.VectorFunctions.InterpTable2D.__call__"]], "__call__() (asset.vectorfunctions.pyscalarfunction method)": [[15, "asset.VectorFunctions.PyScalarFunction.__call__"]], "__call__() (asset.vectorfunctions.pyvectorfunction method)": [[15, "asset.VectorFunctions.PyVectorFunction.__call__"]], "__call__() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.__call__"]], "__call__() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.__call__"]], "__call__() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.__call__"]], "__call__() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.__call__"]], "__call__() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.__call__"]], "__ge__() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.__ge__"]], "__ge__() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.__ge__"]], "__getitem__() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.__getitem__"]], "__getitem__() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.__getitem__"]], "__getitem__() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.__getitem__"]], "__getitem__() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.__getitem__"]], "__getitem__() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.__getitem__"]], "__getitem__() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.__getitem__"]], "__getitem__() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.__getitem__"]], "__gt__() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.__gt__"]], "__gt__() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.__gt__"]], "__init__() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.__init__"]], "__init__() (asset.vectorfunctions.colmatrix method)": [[15, "asset.VectorFunctions.ColMatrix.__init__"]], "__init__() (asset.vectorfunctions.comparative method)": [[15, "asset.VectorFunctions.Comparative.__init__"]], "__init__() (asset.vectorfunctions.conditional method)": [[15, "asset.VectorFunctions.Conditional.__init__"]], "__init__() (asset.vectorfunctions.constantscalar method)": [[15, "asset.VectorFunctions.ConstantScalar.__init__"]], "__init__() (asset.vectorfunctions.constantvector method)": [[15, "asset.VectorFunctions.ConstantVector.__init__"]], "__init__() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.__init__"]], "__init__() (asset.vectorfunctions.interptable1d method)": [[15, "asset.VectorFunctions.InterpTable1D.__init__"]], "__init__() (asset.vectorfunctions.interptable2d method)": [[15, "asset.VectorFunctions.InterpTable2D.__init__"]], "__init__() (asset.vectorfunctions.pyscalarfunction method)": [[15, "asset.VectorFunctions.PyScalarFunction.__init__"]], "__init__() (asset.vectorfunctions.pyvectorfunction method)": [[15, "asset.VectorFunctions.PyVectorFunction.__init__"]], "__init__() (asset.vectorfunctions.rowmatrix method)": [[15, "asset.VectorFunctions.RowMatrix.__init__"]], "__init__() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.__init__"]], "__init__() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.__init__"]], "__init__() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.__init__"]], "__init__() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.__init__"]], "__init__() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.__init__"]], "__le__() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.__le__"]], "__le__() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.__le__"]], "__lt__() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.__lt__"]], "__lt__() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.__lt__"]], "__module__ (asset.vectorfunctions.arguments attribute)": [[15, "asset.VectorFunctions.Arguments.__module__"]], "__module__ (asset.vectorfunctions.colmatrix attribute)": [[15, "asset.VectorFunctions.ColMatrix.__module__"]], "__module__ (asset.vectorfunctions.comparative attribute)": [[15, "asset.VectorFunctions.Comparative.__module__"]], "__module__ (asset.vectorfunctions.conditional attribute)": [[15, "asset.VectorFunctions.Conditional.__module__"]], "__module__ (asset.vectorfunctions.constantscalar attribute)": [[15, "asset.VectorFunctions.ConstantScalar.__module__"]], "__module__ (asset.vectorfunctions.constantvector attribute)": [[15, "asset.VectorFunctions.ConstantVector.__module__"]], "__module__ (asset.vectorfunctions.element attribute)": [[15, "asset.VectorFunctions.Element.__module__"]], "__module__ (asset.vectorfunctions.interptable1d attribute)": [[15, "asset.VectorFunctions.InterpTable1D.__module__"]], "__module__ (asset.vectorfunctions.interptable2d attribute)": [[15, "asset.VectorFunctions.InterpTable2D.__module__"]], "__module__ (asset.vectorfunctions.pyscalarfunction attribute)": [[15, "asset.VectorFunctions.PyScalarFunction.__module__"]], "__module__ (asset.vectorfunctions.pyvectorfunction attribute)": [[15, "asset.VectorFunctions.PyVectorFunction.__module__"]], "__module__ (asset.vectorfunctions.rowmatrix attribute)": [[15, "asset.VectorFunctions.RowMatrix.__module__"]], "__module__ (asset.vectorfunctions.scalarfunction attribute)": [[15, "asset.VectorFunctions.ScalarFunction.__module__"]], "__module__ (asset.vectorfunctions.segment attribute)": [[15, "asset.VectorFunctions.Segment.__module__"]], "__module__ (asset.vectorfunctions.segment2 attribute)": [[15, "asset.VectorFunctions.Segment2.__module__"]], "__module__ (asset.vectorfunctions.segment3 attribute)": [[15, "asset.VectorFunctions.Segment3.__module__"]], "__module__ (asset.vectorfunctions.vectorfunction attribute)": [[15, "asset.VectorFunctions.VectorFunction.__module__"]], "__mul__() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.__mul__"]], "__mul__() (asset.vectorfunctions.colmatrix method)": [[15, "asset.VectorFunctions.ColMatrix.__mul__"]], "__mul__() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.__mul__"]], "__mul__() (asset.vectorfunctions.rowmatrix method)": [[15, "asset.VectorFunctions.RowMatrix.__mul__"]], "__mul__() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.__mul__"]], "__mul__() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.__mul__"]], "__mul__() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.__mul__"]], "__mul__() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.__mul__"]], "__mul__() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.__mul__"]], "__neg__() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.__neg__"]], "__neg__() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.__neg__"]], "__neg__() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.__neg__"]], "__neg__() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.__neg__"]], "__neg__() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.__neg__"]], "__neg__() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.__neg__"]], "__neg__() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.__neg__"]], "__or__() (asset.vectorfunctions.conditional method)": [[15, "asset.VectorFunctions.Conditional.__or__"]], "__pow__() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.__pow__"]], "__pow__() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.__pow__"]], "__radd__() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.__radd__"]], "__radd__() (asset.vectorfunctions.colmatrix method)": [[15, "asset.VectorFunctions.ColMatrix.__radd__"]], "__radd__() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.__radd__"]], "__radd__() (asset.vectorfunctions.rowmatrix method)": [[15, "asset.VectorFunctions.RowMatrix.__radd__"]], "__radd__() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.__radd__"]], "__radd__() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.__radd__"]], "__radd__() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.__radd__"]], "__radd__() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.__radd__"]], "__radd__() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.__radd__"]], "__rgt__() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.__rgt__"]], "__rgt__() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.__rgt__"]], "__rlt__() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.__rlt__"]], "__rlt__() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.__rlt__"]], "__rmul__() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.__rmul__"]], "__rmul__() (asset.vectorfunctions.colmatrix method)": [[15, "asset.VectorFunctions.ColMatrix.__rmul__"]], "__rmul__() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.__rmul__"]], "__rmul__() (asset.vectorfunctions.rowmatrix method)": [[15, "asset.VectorFunctions.RowMatrix.__rmul__"]], "__rmul__() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.__rmul__"]], "__rmul__() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.__rmul__"]], "__rmul__() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.__rmul__"]], "__rmul__() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.__rmul__"]], "__rmul__() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.__rmul__"]], "__rsub__() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.__rsub__"]], "__rsub__() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.__rsub__"]], "__rsub__() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.__rsub__"]], "__rsub__() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.__rsub__"]], "__rsub__() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.__rsub__"]], "__rsub__() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.__rsub__"]], "__rsub__() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.__rsub__"]], "__rtruediv__() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.__rtruediv__"]], "__rtruediv__() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.__rtruediv__"]], "__sub__() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.__sub__"]], "__sub__() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.__sub__"]], "__sub__() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.__sub__"]], "__sub__() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.__sub__"]], "__sub__() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.__sub__"]], "__sub__() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.__sub__"]], "__sub__() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.__sub__"]], "__truediv__() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.__truediv__"]], "__truediv__() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.__truediv__"]], "__truediv__() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.__truediv__"]], "__truediv__() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.__truediv__"]], "__truediv__() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.__truediv__"]], "__truediv__() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.__truediv__"]], "__truediv__() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.__truediv__"]], "abs() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.abs"]], "adjointgradient() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.adjointgradient"]], "adjointgradient() (asset.vectorfunctions.constantscalar method)": [[15, "asset.VectorFunctions.ConstantScalar.adjointgradient"]], "adjointgradient() (asset.vectorfunctions.constantvector method)": [[15, "asset.VectorFunctions.ConstantVector.adjointgradient"]], "adjointgradient() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.adjointgradient"]], "adjointgradient() (asset.vectorfunctions.pyscalarfunction method)": [[15, "asset.VectorFunctions.PyScalarFunction.adjointgradient"]], "adjointgradient() (asset.vectorfunctions.pyvectorfunction method)": [[15, "asset.VectorFunctions.PyVectorFunction.adjointgradient"]], "adjointgradient() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.adjointgradient"]], "adjointgradient() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.adjointgradient"]], "adjointgradient() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.adjointgradient"]], "adjointgradient() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.adjointgradient"]], "adjointgradient() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.adjointgradient"]], "adjointhessian() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.adjointhessian"]], "adjointhessian() (asset.vectorfunctions.constantscalar method)": [[15, "asset.VectorFunctions.ConstantScalar.adjointhessian"]], "adjointhessian() (asset.vectorfunctions.constantvector method)": [[15, "asset.VectorFunctions.ConstantVector.adjointhessian"]], "adjointhessian() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.adjointhessian"]], "adjointhessian() (asset.vectorfunctions.pyscalarfunction method)": [[15, "asset.VectorFunctions.PyScalarFunction.adjointhessian"]], "adjointhessian() (asset.vectorfunctions.pyvectorfunction method)": [[15, "asset.VectorFunctions.PyVectorFunction.adjointhessian"]], "adjointhessian() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.adjointhessian"]], "adjointhessian() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.adjointhessian"]], "adjointhessian() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.adjointhessian"]], "adjointhessian() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.adjointhessian"]], "adjointhessian() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.adjointhessian"]], "apply() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.apply"]], "apply() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.apply"]], "apply() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.apply"]], "apply() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.apply"]], "apply() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.apply"]], "apply() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.apply"]], "apply() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.apply"]], "arccos() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.arccos"]], "arccos() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.arccos"]], "arccos() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.arccos"]], "arccosh() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.arccosh"]], "arccosh() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.arccosh"]], "arccosh() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.arccosh"]], "arcsin() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.arcsin"]], "arcsin() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.arcsin"]], "arcsin() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.arcsin"]], "arcsinh() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.arcsinh"]], "arcsinh() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.arcsinh"]], "arcsinh() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.arcsinh"]], "arctan() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.arctan"]], "arctan() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.arctan"]], "arctan() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.arctan"]], "arctan2() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.arctan2"]], "arctanh() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.arctanh"]], "arctanh() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.arctanh"]], "arctanh() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.arctanh"]], "asset.vectorfunctions": [[15, "module-asset.VectorFunctions"]], "coeff() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.coeff"]], "coeff() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.coeff"]], "coeff() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.coeff"]], "coeff() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.coeff"]], "coeff() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.coeff"]], "coeff() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.coeff"]], "coeff() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.coeff"]], "compute() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.compute"]], "compute() (asset.vectorfunctions.comparative method)": [[15, "asset.VectorFunctions.Comparative.compute"]], "compute() (asset.vectorfunctions.conditional method)": [[15, "asset.VectorFunctions.Conditional.compute"]], "compute() (asset.vectorfunctions.constantscalar method)": [[15, "asset.VectorFunctions.ConstantScalar.compute"]], "compute() (asset.vectorfunctions.constantvector method)": [[15, "asset.VectorFunctions.ConstantVector.compute"]], "compute() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.compute"]], "compute() (asset.vectorfunctions.pyscalarfunction method)": [[15, "asset.VectorFunctions.PyScalarFunction.compute"]], "compute() (asset.vectorfunctions.pyvectorfunction method)": [[15, "asset.VectorFunctions.PyVectorFunction.compute"]], "compute() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.compute"]], "compute() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.compute"]], "compute() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.compute"]], "compute() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.compute"]], "compute() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.compute"]], "computeall() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.computeall"]], "computeall() (asset.vectorfunctions.constantscalar method)": [[15, "asset.VectorFunctions.ConstantScalar.computeall"]], "computeall() (asset.vectorfunctions.constantvector method)": [[15, "asset.VectorFunctions.ConstantVector.computeall"]], "computeall() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.computeall"]], "computeall() (asset.vectorfunctions.pyscalarfunction method)": [[15, "asset.VectorFunctions.PyScalarFunction.computeall"]], "computeall() (asset.vectorfunctions.pyvectorfunction method)": [[15, "asset.VectorFunctions.PyVectorFunction.computeall"]], "computeall() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.computeall"]], "computeall() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.computeall"]], "computeall() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.computeall"]], "computeall() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.computeall"]], "computeall() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.computeall"]], "cos() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.cos"]], "cos() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.cos"]], "cos() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.cos"]], "cosh() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.cosh"]], "cosh() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.cosh"]], "cosh() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.cosh"]], "cross() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.cross"]], "cross() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.cross"]], "cross() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.cross"]], "cross() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.cross"]], "cross() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.cross"]], "cubed_norm() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.cubed_norm"]], "cubed_norm() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.cubed_norm"]], "cubed_norm() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.cubed_norm"]], "cubed_norm() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.cubed_norm"]], "cubed_norm() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.cubed_norm"]], "cubed_norm() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.cubed_norm"]], "cwiseproduct() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.cwiseProduct"]], "cwiseproduct() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.cwiseProduct"]], "cwiseproduct() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.cwiseProduct"]], "cwiseproduct() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.cwiseProduct"]], "cwiseproduct() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.cwiseProduct"]], "cwiseproduct() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.cwiseProduct"]], "cwiseproduct() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.cwiseProduct"]], "cwiseproduct() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.cwiseProduct"]], "cwisequotient() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.cwiseQuotient"]], "cwisequotient() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.cwiseQuotient"]], "cwisequotient() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.cwiseQuotient"]], "cwisequotient() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.cwiseQuotient"]], "cwisequotient() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.cwiseQuotient"]], "cwisequotient() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.cwiseQuotient"]], "cwisequotient() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.cwiseQuotient"]], "cwisequotient() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.cwiseQuotient"]], "divtest() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.divtest"]], "dot() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.dot"]], "dot() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.dot"]], "dot() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.dot"]], "dot() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.dot"]], "dot() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.dot"]], "dot() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.dot"]], "dot() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.dot"]], "dot() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.dot"]], "doublecross() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.doublecross"]], "eval() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.eval"]], "eval() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.eval"]], "exp() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.exp"]], "exp() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.exp"]], "exp() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.exp"]], "find_elem() (asset.vectorfunctions.interptable2d method)": [[15, "asset.VectorFunctions.InterpTable2D.find_elem"]], "head() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.head"]], "head() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.head"]], "head() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.head"]], "head() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.head"]], "head() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.head"]], "head() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.head"]], "head() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.head"]], "head2() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.head2"]], "head2() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.head2"]], "head2() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.head2"]], "head2() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.head2"]], "head3() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.head3"]], "head3() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.head3"]], "head3() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.head3"]], "head_2() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.head_2"]], "head_2() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.head_2"]], "head_2() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.head_2"]], "head_2() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.head_2"]], "head_3() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.head_3"]], "head_3() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.head_3"]], "head_3() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.head_3"]], "ifelse() (asset.vectorfunctions.conditional method)": [[15, "asset.VectorFunctions.Conditional.ifelse"]], "ifelse() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.ifelse"]], "input_domain() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.input_domain"]], "input_domain() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.input_domain"]], "interp() (asset.vectorfunctions.interptable1d method)": [[15, "asset.VectorFunctions.InterpTable1D.interp"]], "interp() (asset.vectorfunctions.interptable2d method)": [[15, "asset.VectorFunctions.InterpTable2D.interp"]], "interp_deriv1() (asset.vectorfunctions.interptable1d method)": [[15, "asset.VectorFunctions.InterpTable1D.interp_deriv1"]], "interp_deriv1() (asset.vectorfunctions.interptable2d method)": [[15, "asset.VectorFunctions.InterpTable2D.interp_deriv1"]], "interp_deriv2() (asset.vectorfunctions.interptable1d method)": [[15, "asset.VectorFunctions.InterpTable1D.interp_deriv2"]], "interp_deriv2() (asset.vectorfunctions.interptable2d method)": [[15, "asset.VectorFunctions.InterpTable2D.interp_deriv2"]], "inverse() (asset.vectorfunctions.colmatrix method)": [[15, "asset.VectorFunctions.ColMatrix.inverse"]], "inverse() (asset.vectorfunctions.rowmatrix method)": [[15, "asset.VectorFunctions.RowMatrix.inverse"]], "inverse_cubed_norm() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.inverse_cubed_norm"]], "inverse_cubed_norm() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.inverse_cubed_norm"]], "inverse_cubed_norm() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.inverse_cubed_norm"]], "inverse_cubed_norm() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.inverse_cubed_norm"]], "inverse_cubed_norm() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.inverse_cubed_norm"]], "inverse_cubed_norm() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.inverse_cubed_norm"]], "inverse_four_norm() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.inverse_four_norm"]], "inverse_four_norm() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.inverse_four_norm"]], "inverse_four_norm() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.inverse_four_norm"]], "inverse_four_norm() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.inverse_four_norm"]], "inverse_four_norm() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.inverse_four_norm"]], "inverse_four_norm() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.inverse_four_norm"]], "inverse_norm() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.inverse_norm"]], "inverse_norm() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.inverse_norm"]], "inverse_norm() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.inverse_norm"]], "inverse_norm() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.inverse_norm"]], "inverse_norm() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.inverse_norm"]], "inverse_norm() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.inverse_norm"]], "inverse_squared_norm() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.inverse_squared_norm"]], "inverse_squared_norm() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.inverse_squared_norm"]], "inverse_squared_norm() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.inverse_squared_norm"]], "inverse_squared_norm() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.inverse_squared_norm"]], "inverse_squared_norm() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.inverse_squared_norm"]], "inverse_squared_norm() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.inverse_squared_norm"]], "is_linear() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.is_linear"]], "is_linear() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.is_linear"]], "jacobian() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.jacobian"]], "jacobian() (asset.vectorfunctions.constantscalar method)": [[15, "asset.VectorFunctions.ConstantScalar.jacobian"]], "jacobian() (asset.vectorfunctions.constantvector method)": [[15, "asset.VectorFunctions.ConstantVector.jacobian"]], "jacobian() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.jacobian"]], "jacobian() (asset.vectorfunctions.pyscalarfunction method)": [[15, "asset.VectorFunctions.PyScalarFunction.jacobian"]], "jacobian() (asset.vectorfunctions.pyvectorfunction method)": [[15, "asset.VectorFunctions.PyVectorFunction.jacobian"]], "jacobian() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.jacobian"]], "jacobian() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.jacobian"]], "jacobian() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.jacobian"]], "jacobian() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.jacobian"]], "jacobian() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.jacobian"]], "log() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.log"]], "log() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.log"]], "log() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.log"]], "matmul() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.matmul"]], "max() (asset.vectorfunctions.comparative method)": [[15, "asset.VectorFunctions.Comparative.max"]], "min() (asset.vectorfunctions.comparative method)": [[15, "asset.VectorFunctions.Comparative.min"]], "name() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.name"]], "name() (asset.vectorfunctions.constantscalar method)": [[15, "asset.VectorFunctions.ConstantScalar.name"]], "name() (asset.vectorfunctions.constantvector method)": [[15, "asset.VectorFunctions.ConstantVector.name"]], "name() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.name"]], "name() (asset.vectorfunctions.pyscalarfunction method)": [[15, "asset.VectorFunctions.PyScalarFunction.name"]], "name() (asset.vectorfunctions.pyvectorfunction method)": [[15, "asset.VectorFunctions.PyVectorFunction.name"]], "name() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.name"]], "name() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.name"]], "name() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.name"]], "name() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.name"]], "name() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.name"]], "norm() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.norm"]], "norm() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.norm"]], "norm() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.norm"]], "norm() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.norm"]], "norm() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.norm"]], "norm() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.norm"]], "normalize() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.normalize"]], "normalized() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.normalized"]], "normalized() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.normalized"]], "normalized() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.normalized"]], "normalized() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.normalized"]], "normalized() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.normalized"]], "normalized() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.normalized"]], "normalized_power2() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.normalized_power2"]], "normalized_power2() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.normalized_power2"]], "normalized_power2() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.normalized_power2"]], "normalized_power2() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.normalized_power2"]], "normalized_power2() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.normalized_power2"]], "normalized_power2() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.normalized_power2"]], "normalized_power3() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.normalized_power3"]], "normalized_power3() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.normalized_power3"]], "normalized_power3() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.normalized_power3"]], "normalized_power3() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.normalized_power3"]], "normalized_power3() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.normalized_power3"]], "normalized_power3() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.normalized_power3"]], "normalized_power4() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.normalized_power4"]], "normalized_power4() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.normalized_power4"]], "normalized_power4() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.normalized_power4"]], "normalized_power4() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.normalized_power4"]], "normalized_power4() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.normalized_power4"]], "normalized_power4() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.normalized_power4"]], "normalized_power5() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.normalized_power5"]], "normalized_power5() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.normalized_power5"]], "normalized_power5() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.normalized_power5"]], "normalized_power5() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.normalized_power5"]], "normalized_power5() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.normalized_power5"]], "normalized_power5() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.normalized_power5"]], "padded() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.padded"]], "padded() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.padded"]], "padded() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.padded"]], "padded() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.padded"]], "padded() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.padded"]], "padded() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.padded"]], "padded() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.padded"]], "padded_lower() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.padded_lower"]], "padded_lower() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.padded_lower"]], "padded_lower() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.padded_lower"]], "padded_lower() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.padded_lower"]], "padded_lower() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.padded_lower"]], "padded_lower() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.padded_lower"]], "padded_lower() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.padded_lower"]], "padded_upper() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.padded_upper"]], "padded_upper() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.padded_upper"]], "padded_upper() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.padded_upper"]], "padded_upper() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.padded_upper"]], "padded_upper() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.padded_upper"]], "padded_upper() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.padded_upper"]], "padded_upper() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.padded_upper"]], "pow() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.pow"]], "pow() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.pow"]], "pow() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.pow"]], "quatproduct() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.quatProduct"]], "quatrotate() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.quatRotate"]], "rpt() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.rpt"]], "rpt() (asset.vectorfunctions.constantscalar method)": [[15, "asset.VectorFunctions.ConstantScalar.rpt"]], "rpt() (asset.vectorfunctions.constantvector method)": [[15, "asset.VectorFunctions.ConstantVector.rpt"]], "rpt() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.rpt"]], "rpt() (asset.vectorfunctions.pyscalarfunction method)": [[15, "asset.VectorFunctions.PyScalarFunction.rpt"]], "rpt() (asset.vectorfunctions.pyvectorfunction method)": [[15, "asset.VectorFunctions.PyVectorFunction.rpt"]], "rpt() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.rpt"]], "rpt() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.rpt"]], "rpt() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.rpt"]], "rpt() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.rpt"]], "rpt() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.rpt"]], "segment() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.segment"]], "segment() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.segment"]], "segment() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.segment"]], "segment() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.segment"]], "segment() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.segment"]], "segment() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.segment"]], "segment() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.segment"]], "segment2() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.segment2"]], "segment2() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.segment2"]], "segment2() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.segment2"]], "segment2() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.segment2"]], "segment3() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.segment3"]], "segment3() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.segment3"]], "segment3() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.segment3"]], "segment_2() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.segment_2"]], "segment_2() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.segment_2"]], "segment_2() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.segment_2"]], "segment_2() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.segment_2"]], "segment_3() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.segment_3"]], "segment_3() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.segment_3"]], "segment_3() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.segment_3"]], "sf() (asset.vectorfunctions.constantscalar method)": [[15, "asset.VectorFunctions.ConstantScalar.sf"]], "sf() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.sf"]], "sf() (asset.vectorfunctions.interptable1d method)": [[15, "asset.VectorFunctions.InterpTable1D.sf"]], "sf() (asset.vectorfunctions.interptable2d method)": [[15, "asset.VectorFunctions.InterpTable2D.sf"]], "sf() (asset.vectorfunctions.pyscalarfunction method)": [[15, "asset.VectorFunctions.PyScalarFunction.sf"]], "sf() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.sf"]], "sign() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.sign"]], "sign() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.sign"]], "sign() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.sign"]], "sin() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.sin"]], "sin() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.sin"]], "sin() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.sin"]], "sinh() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.sinh"]], "sinh() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.sinh"]], "sinh() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.sinh"]], "sqrt() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.sqrt"]], "sqrt() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.sqrt"]], "sqrt() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.sqrt"]], "squared() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.squared"]], "squared() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.squared"]], "squared() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.squared"]], "squared_norm() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.squared_norm"]], "squared_norm() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.squared_norm"]], "squared_norm() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.squared_norm"]], "squared_norm() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.squared_norm"]], "squared_norm() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.squared_norm"]], "squared_norm() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.squared_norm"]], "stack_scalar() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.stack_scalar"]], "sum() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.sum"]], "sum() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.sum"]], "sum() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.sum"]], "sum() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.sum"]], "sum() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.sum"]], "tail() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.tail"]], "tail() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.tail"]], "tail() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.tail"]], "tail() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.tail"]], "tail() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.tail"]], "tail() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.tail"]], "tail() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.tail"]], "tail2() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.tail2"]], "tail2() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.tail2"]], "tail2() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.tail2"]], "tail2() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.tail2"]], "tail3() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.tail3"]], "tail3() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.tail3"]], "tail3() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.tail3"]], "tail_2() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.tail_2"]], "tail_2() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.tail_2"]], "tail_2() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.tail_2"]], "tail_2() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.tail_2"]], "tail_3() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.tail_3"]], "tail_3() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.tail_3"]], "tail_3() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.tail_3"]], "tan() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.tan"]], "tan() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.tan"]], "tan() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.tan"]], "tanh() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.tanh"]], "tanh() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.tanh"]], "tanh() (in module asset.vectorfunctions)": [[15, "asset.VectorFunctions.tanh"]], "tolist() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.tolist"]], "tolist() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.tolist"]], "tolist() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.tolist"]], "tolist() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.tolist"]], "tolist() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.tolist"]], "vf() (asset.vectorfunctions.arguments method)": [[15, "asset.VectorFunctions.Arguments.vf"]], "vf() (asset.vectorfunctions.colmatrix method)": [[15, "asset.VectorFunctions.ColMatrix.vf"]], "vf() (asset.vectorfunctions.constantscalar method)": [[15, "asset.VectorFunctions.ConstantScalar.vf"]], "vf() (asset.vectorfunctions.constantvector method)": [[15, "asset.VectorFunctions.ConstantVector.vf"]], "vf() (asset.vectorfunctions.element method)": [[15, "asset.VectorFunctions.Element.vf"]], "vf() (asset.vectorfunctions.interptable1d method)": [[15, "asset.VectorFunctions.InterpTable1D.vf"]], "vf() (asset.vectorfunctions.interptable2d method)": [[15, "asset.VectorFunctions.InterpTable2D.vf"]], "vf() (asset.vectorfunctions.pyscalarfunction method)": [[15, "asset.VectorFunctions.PyScalarFunction.vf"]], "vf() (asset.vectorfunctions.pyvectorfunction method)": [[15, "asset.VectorFunctions.PyVectorFunction.vf"]], "vf() (asset.vectorfunctions.rowmatrix method)": [[15, "asset.VectorFunctions.RowMatrix.vf"]], "vf() (asset.vectorfunctions.scalarfunction method)": [[15, "asset.VectorFunctions.ScalarFunction.vf"]], "vf() (asset.vectorfunctions.segment method)": [[15, "asset.VectorFunctions.Segment.vf"]], "vf() (asset.vectorfunctions.segment2 method)": [[15, "asset.VectorFunctions.Segment2.vf"]], "vf() (asset.vectorfunctions.segment3 method)": [[15, "asset.VectorFunctions.Segment3.vf"]], "vf() (asset.vectorfunctions.vectorfunction method)": [[15, "asset.VectorFunctions.VectorFunction.vf"]]}})